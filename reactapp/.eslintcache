[{"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\index.js":"1","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\App.js":"2","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\reportWebVitals.js":"3","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\contexts\\AuthContext.js":"4","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\HomePage.js":"5","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\LoginPage.js":"6","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\RegistrationPage.js":"7","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\ActivePrivateRoute.js":"8","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegistrationForm.js":"9","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateForm.js":"10","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginForm.js":"11","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PrivateRoute.js":"12","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\AccountPage.js":"13","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\AccountForm.js":"14","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\firebase.js":"15","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\Dashboard.js":"16","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\sub-pages\\ActiveDashboard.js":"17","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\sub-pages\\DormantDashboard.js":"18","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PublicRoute.js":"19","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\ApplicantPanel.js":"20","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\BusinessPanel.js":"21","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\ChatPanel.js":"22"},{"size":517,"mtime":1609119786466,"results":"23","hashOfConfig":"24"},{"size":1313,"mtime":1610993952375,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1609119786467,"results":"26","hashOfConfig":"24"},{"size":5544,"mtime":1611015936486,"results":"27","hashOfConfig":"24"},{"size":146,"mtime":1610647984462,"results":"28","hashOfConfig":"24"},{"size":215,"mtime":1609470098931,"results":"29","hashOfConfig":"24"},{"size":246,"mtime":1609470098914,"results":"30","hashOfConfig":"24"},{"size":658,"mtime":1610827132430,"results":"31","hashOfConfig":"24"},{"size":2368,"mtime":1611015936502,"results":"32","hashOfConfig":"24"},{"size":2207,"mtime":1611015936443,"results":"33","hashOfConfig":"24"},{"size":1303,"mtime":1611015936455,"results":"34","hashOfConfig":"24"},{"size":365,"mtime":1610916324578,"results":"35","hashOfConfig":"24"},{"size":225,"mtime":1610645423722,"results":"36","hashOfConfig":"24"},{"size":1963,"mtime":1611015936428,"results":"37","hashOfConfig":"24"},{"size":528,"mtime":1610732442637,"results":"38","hashOfConfig":"24"},{"size":1700,"mtime":1610916417359,"results":"39","hashOfConfig":"24"},{"size":1433,"mtime":1611015936412,"results":"40","hashOfConfig":"24"},{"size":1126,"mtime":1611015936471,"results":"41","hashOfConfig":"24"},{"size":369,"mtime":1610916325301,"results":"42","hashOfConfig":"24"},{"size":9422,"mtime":1610917879882,"results":"43","hashOfConfig":"24"},{"size":9296,"mtime":1610917879990,"results":"44","hashOfConfig":"24"},{"size":2904,"mtime":1611003670961,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"18kughf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\index.js",[],["95","96"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\App.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\contexts\\AuthContext.js",["97","98","99"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\HomePage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\LoginPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\RegistrationPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\ActivePrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegistrationForm.js",["100","101","102","103","104"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateForm.js",["105","106","107","108","109"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginForm.js",["110","111","112","113","114"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\AccountPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\AccountForm.js",["115","116","117","118","119","120","121","122"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\firebase.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\Dashboard.js",["123","124"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {UpdateForm} from '../forms/UpdateForm';\r\nimport {ActiveDashboard} from './sub-pages/ActiveDashboard';\r\nimport {DormantDashboard} from './sub-pages/DormantDashboard';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function Dashboard(){\r\n\r\n    const {userData, logoutUser, deleteUser} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleLogoutUser(){\r\n        try {\r\n            setError('Logged Out');\r\n            setLoading(true);\r\n            await logoutUser();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    async function handleDeleteUser(){\r\n        try {\r\n            setError('Successfully deleted');\r\n            setLoading(true);\r\n            await deleteUser();\r\n            history.push('/');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n            {userData &&\r\n                <div>\r\n                    {!userData.clusterId && <DormantDashboard/>}\r\n                    {userData.clusterId && <ActiveDashboard/>}\r\n                    <button disabled={loading} onClick={handleLogoutUser}>Logout</button>\r\n                    <button disabled={loading} onClick={handleDeleteUser}>Delete User</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\sub-pages\\ActiveDashboard.js",["125","126","127"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\sub-pages\\DormantDashboard.js",["128","129","130"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PublicRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\ApplicantPanel.js",["131","132","133","134","135","136","137","138"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\nexport function ApplicantPanel(){\r\n\r\n    const {userData, leaveCluster} = useAuth();\r\n    const [change, setChange] = useState(false);\r\n    const [cap, setCap] = useState(1);\r\n    const [pool, setPool] = useState([]);\r\n    const [applied, setApplied] = useState([]);\r\n    const [received, setReceived] = useState([]);\r\n    const [interested, setInterested] = useState([]);\r\n    const [reviewed, setReviewed] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [declined, setDeclined] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(async () => {\r\n        const data = await fetch(userData.links.all).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCap(data.cap);\r\n        setPool(data.pool);\r\n        setApplied(data.applied);\r\n        setReceived(data.received);\r\n        setInterested(data.interested);\r\n        setReviewed(data.reviewed);\r\n        setAccepted(data.accepted);\r\n        setDeclined(data.declined);\r\n        setRejected(data.rejected);\r\n        setLoading(false);\r\n    }, [userData, change]);\r\n\r\n\r\n    useEffect(async () => {\r\n        if(!cap){\r\n            try {\r\n                setError('Left Cluster');\r\n                setLoading(true);\r\n                await leaveCluster();\r\n            } catch(err) {\r\n                setError('Failed to leave cluster')\r\n            }\r\n        }\r\n    }, [cap])\r\n\r\n    async function handleSubmitApply(businessId){\r\n        try {\r\n            setError('Successfully Applied');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.applied, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'apply',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to apply');\r\n        }\r\n    }\r\n\r\n    async function handleCancelApply(businessId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.applied, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptReach(businessId){\r\n        try {\r\n            setError('Successfully Accepted Reach');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.received, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineReach(businessId){\r\n        try {\r\n            setError('Successfully declined reach');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.received, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineInterest(businessId){\r\n        try {\r\n            setError('Successfully declined communication');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.interested, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline communication');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptOffer(businessId){\r\n        try {\r\n            setError('Successfully Accepted offer');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.reviewed, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            try {\r\n                setError('Left cluster');\r\n                setLoading(true);\r\n                await leaveCluster();\r\n            } catch(err) {\r\n                setError(err);\r\n            }\r\n        } catch(err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineOffer(businessId){\r\n        try {\r\n            setError('Successfully declined offer');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.reviewed, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline offer');\r\n        }\r\n    }\r\n\r\n    function renderPool(){\r\n        return pool.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleSubmitApply(business.id)}>Apply</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderApplied(){\r\n        return applied.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleCancelApply(business.id)}>Cancel</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReceived(){\r\n        return received.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleAcceptReach(business.id)}>Accept</button>\r\n                    <button onClick={() => handleDeclineReach(business.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderInterested(){\r\n        return interested.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleDeclineInterest(business.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReviewed(){\r\n        return reviewed.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleAcceptOffer(business.id)}>Accept</button>\r\n                    <button onClick={() => handleDeclineOffer(business.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderAccepted(){\r\n        return accepted.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pool</h2>\r\n            {renderPool()}\r\n            <br/>\r\n            <h2>Applied</h2>\r\n            {renderApplied()}\r\n            <h2>Received</h2>\r\n            {renderReceived()}\r\n            <h2>Interested</h2>\r\n            {renderInterested()}\r\n            <h2>Reviewed</h2>\r\n            {renderReviewed()}\r\n            <h2>Accepted</h2>\r\n            {renderAccepted()}\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\BusinessPanel.js",["139","140","141","142","143","144","145"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\nexport function BusinessPanel(){\r\n\r\n    const {userData, leaveCluster} = useAuth();\r\n    const [change, setChange] = useState(false);\r\n    const [cap, setCap] = useState(1);\r\n    const [pool, setPool] = useState([]);\r\n    const [reached, setReached] = useState([]);\r\n    const [received, setReceived] = useState([]);\r\n    const [interested, setInterested] = useState([]);\r\n    const [offered, setOffered] = useState([]);\r\n    const [declined, setDeclined] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(async () => {\r\n        const data = await fetch(userData.links.all).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCap(data.cap);\r\n        setPool(data.pool);\r\n        setReached(data.reached);\r\n        setReceived(data.received);\r\n        setInterested(data.interested);\r\n        setOffered(data.offered);\r\n        setDeclined(data.declined);\r\n        setRejected(data.rejected);\r\n        setAccepted(data.accepted);\r\n        setLoading(false);\r\n    }, [userData, change]);\r\n\r\n    useEffect(async () => {\r\n        if(!cap){\r\n            try {\r\n                setError('Left cluster');\r\n                setLoading(true);\r\n                await leaveCluster()\r\n            } catch (err) {\r\n                setError('failed to leave cluster')\r\n            }\r\n        }\r\n    }, [cap])\r\n\r\n    async function handleSubmitReach(applicantId){\r\n        try {\r\n            setError('Successfully Reached');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.reached, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'reach',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReached(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to reach');\r\n        }\r\n    }\r\n\r\n    async function handleCancelReach(applicantId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.reached, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReached(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptApply(applicantId){\r\n        try {\r\n            setError('Successfully Accepted Apply');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.received, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept apply');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineApply(applicantId){\r\n        try {\r\n            setError('Successfully declined apply');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.received, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline apply');\r\n        }\r\n    }\r\n\r\n    async function handleOfferInterest(applicantId){\r\n        try {\r\n            setError('Successfully offered');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.interested, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'offer',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to offer');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineInterest(applicantId){\r\n        try {\r\n            setError('Successfully declined communication');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.interested, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline communication');\r\n        }\r\n    }\r\n\r\n    async function handleRescindOffer(applicantId){\r\n        try {\r\n            setError('Successfully rescinded offer');\r\n            setLoading(true);\r\n            const data = await fetch(userData.links.offered, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'rescind',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setOffered(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n\r\n    function renderPool(){\r\n        return pool.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleSubmitReach(applicant.id)}>Reach</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReached(){\r\n        return reached.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleCancelReach(applicant.id)}>Reach</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReceived(){\r\n        return received.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleAcceptApply(applicant.id)}>Accept</button>\r\n                    <button onClick={() => handleDeclineApply(applicant.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderInterested(){\r\n        return interested.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleOfferInterest(applicant.id)}>Offer</button>\r\n                    <button onClick={() => handleDeclineInterest(applicant.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderOffered(){\r\n        return offered.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleRescindOffer(applicant.id)}>Rescind</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderAccepted(){\r\n        return accepted.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pool</h2>\r\n            {renderPool()}\r\n            <br/>\r\n            <h2>Reached</h2>\r\n            {renderReached()}\r\n            <h2>Received</h2>\r\n            {renderReceived()}\r\n            <h2>Interested</h2>\r\n            {renderInterested()}\r\n            <h2>Offered</h2>\r\n            {renderOffered()}\r\n            <h2>Accepted</h2>\r\n            {renderAccepted()}\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\ChatPanel.js",["146","147"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io.connect('https://clusters-development.herokuapp.com/messaging');\r\n\r\nexport function ChatPanel(){\r\n\r\n    const {userData} = useAuth();\r\n    const [chatsList, setChatsList] = useState([]);\r\n    const [chat, setChat] = useState({});\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    socket.on('newMessage', message => setMessages([...messages, message]));\r\n    socket.on('message', message => setMessages([...messages, message]));\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await fetch(userData.links.chats).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            socket.emit('join', {userId: userData.id})\r\n            setChatsList(data);\r\n            setChat(data[0] || {});\r\n        } catch(err) {\r\n            setError('Failed to grab all chats')\r\n        }\r\n    }, [userData]);\r\n\r\n    async function handleChatClick(chat){\r\n        try {\r\n            const data = await fetch(chat.links.messages).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setChat(chat);\r\n            setMessages(data);\r\n        } catch(err) {\r\n            setError('Failed to display chat');\r\n        }\r\n    }\r\n\r\n    function handleSendMessage(){\r\n        socket.emit('message', {senderId: chat.senderId, recipientId: chat.recipientId,\r\n            chatId: chat.id, message});\r\n        setMessage('');\r\n    }\r\n\r\n    function renderChatsList(){\r\n        return chatsList.map(chat => {\r\n            return (\r\n                <div>\r\n                    <h3>{chat.recipientName}</h3>\r\n                    <button onClick={() => handleChatClick(chat)}>Select</button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    function renderSpecificChat(){\r\n        return (\r\n            <div>\r\n                <h2>{chat.recipientName}</h2>\r\n                <div>\r\n                    {messages.map(message => {\r\n                        return (\r\n                            <div>\r\n                                <br/>\r\n                                {message.message}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <br/>\r\n                <input value={message} onChange={e => setMessage(e.target.value)}/>\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderChatsList()}\r\n            <br/>\r\n            {renderSpecificChat()}\r\n        </div>\r\n    )\r\n\r\n}",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":16},{"ruleId":"152","severity":1,"message":"156","line":95,"column":15,"nodeType":"154","messageId":"155","endLine":95,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":165,"column":8,"nodeType":"159","endLine":165,"endColumn":18,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"161","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"162","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":14,"column":12,"nodeType":"154","messageId":"155","endLine":14,"endColumn":17},{"ruleId":"164","severity":1,"message":"165","line":25,"column":16,"nodeType":"166","messageId":"167","endLine":25,"endColumn":46},{"ruleId":"164","severity":1,"message":"165","line":27,"column":17,"nodeType":"166","messageId":"167","endLine":27,"endColumn":48},{"ruleId":"152","severity":1,"message":"161","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"168","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"163","line":16,"column":12,"nodeType":"154","messageId":"155","endLine":16,"endColumn":17},{"ruleId":"152","severity":1,"message":"169","line":17,"column":12,"nodeType":"154","messageId":"155","endLine":17,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":25,"column":16,"nodeType":"166","messageId":"167","endLine":25,"endColumn":46},{"ruleId":"152","severity":1,"message":"161","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"163","line":10,"column":12,"nodeType":"154","messageId":"155","endLine":10,"endColumn":17},{"ruleId":"152","severity":1,"message":"169","line":11,"column":12,"nodeType":"154","messageId":"155","endLine":11,"endColumn":19},{"ruleId":"152","severity":1,"message":"170","line":12,"column":23,"nodeType":"154","messageId":"155","endLine":12,"endColumn":31},{"ruleId":"164","severity":1,"message":"165","line":20,"column":17,"nodeType":"166","messageId":"167","endLine":20,"endColumn":45},{"ruleId":"152","severity":1,"message":"161","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"171","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"162","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":14,"column":12,"nodeType":"154","messageId":"155","endLine":14,"endColumn":17},{"ruleId":"152","severity":1,"message":"172","line":16,"column":11,"nodeType":"154","messageId":"155","endLine":16,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":24,"column":16,"nodeType":"166","messageId":"167","endLine":24,"endColumn":46},{"ruleId":"164","severity":1,"message":"165","line":26,"column":17,"nodeType":"166","messageId":"167","endLine":26,"endColumn":48},{"ruleId":"152","severity":1,"message":"156","line":28,"column":19,"nodeType":"154","messageId":"155","endLine":28,"endColumn":23},{"ruleId":"152","severity":1,"message":"161","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"173","line":3,"column":9,"nodeType":"154","messageId":"155","endLine":3,"endColumn":19},{"ruleId":"152","severity":1,"message":"161","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":35},{"ruleId":"152","severity":1,"message":"163","line":11,"column":12,"nodeType":"154","messageId":"155","endLine":11,"endColumn":17},{"ruleId":"152","severity":1,"message":"172","line":12,"column":11,"nodeType":"154","messageId":"155","endLine":12,"endColumn":18},{"ruleId":"152","severity":1,"message":"163","line":10,"column":12,"nodeType":"154","messageId":"155","endLine":10,"endColumn":17},{"ruleId":"152","severity":1,"message":"172","line":11,"column":11,"nodeType":"154","messageId":"155","endLine":11,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":20,"column":16,"nodeType":"166","messageId":"167","endLine":20,"endColumn":46},{"ruleId":"152","severity":1,"message":"174","line":15,"column":12,"nodeType":"154","messageId":"155","endLine":15,"endColumn":20},{"ruleId":"152","severity":1,"message":"175","line":16,"column":12,"nodeType":"154","messageId":"155","endLine":16,"endColumn":20},{"ruleId":"152","severity":1,"message":"169","line":17,"column":12,"nodeType":"154","messageId":"155","endLine":17,"endColumn":19},{"ruleId":"152","severity":1,"message":"163","line":18,"column":12,"nodeType":"154","messageId":"155","endLine":18,"endColumn":17},{"ruleId":"157","severity":1,"message":"176","line":20,"column":15,"nodeType":"177","endLine":36,"endColumn":6},{"ruleId":"157","severity":1,"message":"176","line":39,"column":15,"nodeType":"177","endLine":49,"endColumn":6},{"ruleId":"157","severity":1,"message":"178","line":49,"column":8,"nodeType":"159","endLine":49,"endColumn":13,"suggestions":"179"},{"ruleId":"152","severity":1,"message":"156","line":165,"column":19,"nodeType":"154","messageId":"155","endLine":165,"endColumn":23},{"ruleId":"152","severity":1,"message":"174","line":14,"column":12,"nodeType":"154","messageId":"155","endLine":14,"endColumn":20},{"ruleId":"152","severity":1,"message":"175","line":15,"column":12,"nodeType":"154","messageId":"155","endLine":15,"endColumn":20},{"ruleId":"152","severity":1,"message":"169","line":17,"column":12,"nodeType":"154","messageId":"155","endLine":17,"endColumn":19},{"ruleId":"152","severity":1,"message":"163","line":18,"column":12,"nodeType":"154","messageId":"155","endLine":18,"endColumn":17},{"ruleId":"157","severity":1,"message":"176","line":20,"column":15,"nodeType":"177","endLine":36,"endColumn":6},{"ruleId":"157","severity":1,"message":"176","line":38,"column":15,"nodeType":"177","endLine":48,"endColumn":6},{"ruleId":"157","severity":1,"message":"178","line":48,"column":8,"nodeType":"159","endLine":48,"endColumn":13,"suggestions":"180"},{"ruleId":"152","severity":1,"message":"163","line":14,"column":12,"nodeType":"154","messageId":"155","endLine":14,"endColumn":17},{"ruleId":"157","severity":1,"message":"176","line":19,"column":15,"nodeType":"177","endLine":32,"endColumn":6},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'useEffect' is defined but never used.","'TagsInput' is defined but never used.","'error' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'bcrypt' is defined but never used.","'loading' is assigned a value but never used.","'userData' is assigned a value but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","'UpdateForm' is defined but never used.","'declined' is assigned a value but never used.","'rejected' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'leaveCluster'. Either include it or remove the dependency array.",["184"],["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},"Update the dependencies array to be: [currentUser, userData]",{"range":"191","text":"192"},"Update the dependencies array to be: [cap, leaveCluster]",{"range":"193","text":"194"},{"range":"195","text":"194"},[5113,5123],"[currentUser, userData]",[1657,1662],"[cap, leaveCluster]",[1650,1655]]