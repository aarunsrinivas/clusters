[{"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\index.js":"1","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\App.js":"2","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\reportWebVitals.js":"3","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\contexts\\AuthContext.js":"4","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\HomePage.js":"5","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\LoginPage.js":"6","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\RegistrationPage.js":"7","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\ActivePrivateRoute.js":"8","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegistrationForm.js":"9","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateForm.js":"10","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginForm.js":"11","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PrivateRoute.js":"12","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\AccountPage.js":"13","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\AccountForm.js":"14","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\firebase.js":"15","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\Dashboard.js":"16","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\sub-pages\\ActiveDashboard.js":"17","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\sub-pages\\DormantDashboard.js":"18","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PublicRoute.js":"19","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\ApplicantPanel.js":"20","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\BusinessPanel.js":"21","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\ChatPanel.js":"22"},{"size":517,"mtime":1609119786466,"results":"23","hashOfConfig":"24"},{"size":1313,"mtime":1610917911129,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1609119786467,"results":"26","hashOfConfig":"24"},{"size":5595,"mtime":1610916196390,"results":"27","hashOfConfig":"24"},{"size":146,"mtime":1610647984462,"results":"28","hashOfConfig":"24"},{"size":215,"mtime":1609470098931,"results":"29","hashOfConfig":"24"},{"size":246,"mtime":1609470098914,"results":"30","hashOfConfig":"24"},{"size":658,"mtime":1610827132430,"results":"31","hashOfConfig":"24"},{"size":2397,"mtime":1610846814553,"results":"32","hashOfConfig":"24"},{"size":2303,"mtime":1610824823845,"results":"33","hashOfConfig":"24"},{"size":1332,"mtime":1610908524148,"results":"34","hashOfConfig":"24"},{"size":365,"mtime":1610916324578,"results":"35","hashOfConfig":"24"},{"size":225,"mtime":1610645423722,"results":"36","hashOfConfig":"24"},{"size":2105,"mtime":1610832271796,"results":"37","hashOfConfig":"24"},{"size":528,"mtime":1610732442637,"results":"38","hashOfConfig":"24"},{"size":1700,"mtime":1610916417359,"results":"39","hashOfConfig":"24"},{"size":1491,"mtime":1610917880047,"results":"40","hashOfConfig":"24"},{"size":1155,"mtime":1610846207901,"results":"41","hashOfConfig":"24"},{"size":369,"mtime":1610916325301,"results":"42","hashOfConfig":"24"},{"size":9422,"mtime":1610917879882,"results":"43","hashOfConfig":"24"},{"size":9296,"mtime":1610917879990,"results":"44","hashOfConfig":"24"},{"size":2883,"mtime":1610917879936,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1s79alz",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\index.js",[],["99","100"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\App.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\contexts\\AuthContext.js",["101","102"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport {auth} from '../firebase';\r\nimport firebase from 'firebase/app';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentUser')) || null);\r\n    const [userData, setUserData] = useState(JSON.parse(sessionStorage.getItem('userData')) || null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    async function registerUser(name, email, password, type, worldId) {\r\n        const fire = auth.createUserWithEmailAndPassword(email, password);\r\n        const destination = type === 'applicant' ? `/worlds/${worldId}/applicants` : `/worlds/${worldId}/businesses`;\r\n        const data = await fetch(destination, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                worldId\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        })\r\n        setUserData(data);\r\n        return fire;\r\n    }\r\n\r\n    async function loginUser(email, password){\r\n        const fire = auth.signInWithEmailAndPassword(email, password);\r\n        const data = await fetch(`/users?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n        return fire;\r\n    }\r\n\r\n    async function updateAccount(name, email, password, worldId){\r\n        currentUser.updateEmail(email);\r\n        password && currentUser.updatePassword(password);\r\n        const data = await fetch(userData.links.self, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                action: 'account',\r\n                name,\r\n                email,\r\n                worldId\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function updateFeatures(cap, gpa, majors, standings, skills, interests, courses){\r\n        console.log(firebase.auth().currentUser);\r\n        const data = await fetch(userData.links.self, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                action: 'features',\r\n                cap: parseInt(cap),\r\n                gpa: parseFloat(gpa),\r\n                majors,\r\n                standings,\r\n                skills,\r\n                interests,\r\n                courses\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function logoutUser(){\r\n        const fire = auth.signOut();\r\n        setUserData(null);\r\n        return fire;\r\n    }\r\n\r\n    async function deleteUser(){\r\n        const data = await fetch(userData.links.self, {\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        const fire = currentUser.delete();\r\n        return fire;\r\n    }\r\n\r\n    async function joinCluster(){\r\n        const data = await fetch(userData.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'join'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function leaveCluster(){\r\n        const data = await fetch(userData.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'leave'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function peelFromCluster(){\r\n        const data = await fetch(userData.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'peel'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async user => {\r\n            if(!user){\r\n                sessionStorage.clear();\r\n            } else {\r\n                const data = await fetch(`/users?email=${user.email}`).then(response => {\r\n                    if(response.ok){\r\n                        return response.json();\r\n                    }\r\n                });\r\n                setUserData(data);\r\n            }\r\n            setCurrentUser(user);\r\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n        })\r\n        setLoading(false)\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        !currentUser ? sessionStorage.clear() :\r\n            sessionStorage.setItem('userData', JSON.stringify(userData));\r\n        setLoading(false)\r\n    }, [userData]);\r\n\r\n    const value = {\r\n        currentUser,\r\n        userData,\r\n        registerUser,\r\n        loginUser,\r\n        logoutUser,\r\n        deleteUser,\r\n        updateAccount,\r\n        updateFeatures,\r\n        joinCluster,\r\n        peelFromCluster,\r\n        leaveCluster,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\HomePage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\LoginPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\RegistrationPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\ActivePrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegistrationForm.js",["103","104","105","106"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\n\r\nexport function RegistrationForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [worldId, setWorldId] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {registerUser} = useAuth();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleRegisterUser() {\r\n        try {\r\n            setError('Registered');\r\n            setLoading(true);\r\n            if(!name || !email || !password || !confirmPassword || !type || !worldId) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await registerUser(name, email, password, type, worldId);\r\n            history.push('/dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Type:\r\n            <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\r\n            <input type='radio' name='type' onClick={() => setType('business')}/> Business\r\n            <br/>\r\n            College: <input value={worldId} onChange={e => setWorldId(e.target.value)}/>\r\n            <br/>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\r\n            <div>\r\n                Already Have an Account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateForm.js",["107","108","109","110"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nexport function UpdateForm() {\r\n\r\n    const {userData, updateFeatures} = useAuth();\r\n    const [cap, setCap] = useState(userData.cap);\r\n    const [gpa, setGpa] = useState(userData.features.gpa);\r\n    const [majors, setMajors] = useState(userData.features.majors);\r\n    const [standings, setStandings] = useState(userData.features.standings);\r\n    const [skills, setSkills] = useState(userData.features.skills);\r\n    const [interests, setInterests] = useState(userData.features.interests)\r\n    const [courses, setCourses] = useState(userData.features.courses)\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(userData);\r\n    }, [])\r\n\r\n    async function handleUpdateFeatures() {\r\n        try {\r\n            setError('Updated Features');\r\n            setLoading(true);\r\n            if(!cap || !gpa || !majors.length || !standings.length || !skills.length || !interests.length || !courses.length) {\r\n               throw 'Fields not filled out';\r\n            }\r\n            await updateFeatures(cap, gpa, majors, standings, skills, interests, courses);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Cap: <input value={cap} onChange={e => setCap(e.target.value)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={majors} onChange={tags => setMajors(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standings} onChange={tags => setStandings(tags)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <br/>\r\n            Interests: <TagsInput value={interests} onChange={tags => setInterests(tags)}/>\r\n            <br/>\r\n            Courses: <TagsInput value={courses} onChange={tags => setCourses(tags)}/>\r\n            <br/>\r\n            <button onClick={handleUpdateFeatures}>Submit</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginForm.js",["111","112","113","114"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport function LoginForm() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {loginUser, userData} = useAuth();\r\n    const history = useHistory();\r\n\r\n     async function handleLoginUser() {\r\n        try {\r\n            setError('Logged In');\r\n            setLoading(true);\r\n            if(!email || !password){\r\n                throw 'Fields are required';\r\n            }\r\n            await loginUser(email, password);\r\n            history.push('/dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <button onClick={handleLoginUser}>Submit</button>\r\n            <div>\r\n                Need an Account? <Link to='/register'>Register</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\AccountPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\AccountForm.js",["115","116","117","118","119","120"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\n\r\nexport function AccountForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [worldId, setWorldId] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {updateAccount} = useAuth();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleUpdateAccount() {\r\n        try {\r\n            setError('Updated Account');\r\n            setLoading(true);\r\n            if(!name || !email || !worldId) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            const data = await updateAccount(name, email, password, worldId);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            College: <input value={worldId} onChange={e => setWorldId(e.target.value)}/>\r\n            <br/>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            <button disabled={loading} onClick={handleUpdateAccount}>Submit</button>\r\n            <div>\r\n                Already Have an Account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\firebase.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\Dashboard.js",["121","122"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {UpdateForm} from '../forms/UpdateForm';\r\nimport {ActiveDashboard} from './sub-pages/ActiveDashboard';\r\nimport {DormantDashboard} from './sub-pages/DormantDashboard';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function Dashboard(){\r\n\r\n    const {userData, logoutUser, deleteUser} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleLogoutUser(){\r\n        try {\r\n            setError('Logged Out');\r\n            setLoading(true);\r\n            await logoutUser();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    async function handleDeleteUser(){\r\n        try {\r\n            setError('Successfully deleted');\r\n            setLoading(true);\r\n            await deleteUser();\r\n            history.push('/');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n            {userData &&\r\n                <div>\r\n                    {!userData.clusterId && <DormantDashboard/>}\r\n                    {userData.clusterId && <ActiveDashboard/>}\r\n                    <button disabled={loading} onClick={handleLogoutUser}>Logout</button>\r\n                    <button disabled={loading} onClick={handleDeleteUser}>Delete User</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\sub-pages\\ActiveDashboard.js",["123","124"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../../contexts/AuthContext';\r\nimport {ApplicantPanel} from '../../panels/ApplicantPanel';\r\nimport {BusinessPanel} from '../../panels/BusinessPanel';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function ActiveDashboard(){\r\n\r\n    const {userData, peelFromCluster, leaveCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handlePeelFromCluster(){\r\n        try {\r\n            setError('Peeled From Cluster');\r\n            setLoading(true);\r\n            await peelFromCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    async function handleLeaveCluster(){\r\n        try {\r\n            setError('Left Cluster');\r\n            setLoading(true);\r\n            await leaveCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {userData.type === 'applicant' && <ApplicantPanel/>}\r\n            {userData.type === 'business' && <BusinessPanel/>}\r\n            <button disabled={loading} onClick={handlePeelFromCluster}>Peel From Cluster</button>\r\n            <button disabled={loading} onClick={handleLeaveCluster}>Leave Cluster</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\sub-pages\\DormantDashboard.js",["125","126"],"import React, {useState} from 'react';\r\nimport {useAuth} from '../../../contexts/AuthContext';\r\nimport {UpdateForm} from '../../forms/UpdateForm';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function DormantDashboard(){\r\n\r\n    const {userData, joinCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleJoinCluster(){\r\n        try {\r\n            setError('Joined Cluster');\r\n            setLoading(true);\r\n            const {gpa, majors, standings, skills, interests, courses} = userData.features;\r\n            if(!gpa || !majors.length || !standings.length || !skills.length || !interests.length || !courses.length) {\r\n               throw 'Fields not filled out';\r\n            }\r\n            await joinCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UpdateForm/>\r\n            <button disabled={loading} onClick={handleJoinCluster}>Join Cluster</button>\r\n        </div>\r\n    );\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PublicRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\ApplicantPanel.js",["127","128","129","130","131","132","133","134"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\BusinessPanel.js",["135","136","137","138","139","140","141"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\panels\\ChatPanel.js",["142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":96,"column":15,"nodeType":"150","messageId":"151","endLine":96,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":166,"column":8,"nodeType":"154","endLine":166,"endColumn":18,"suggestions":"155"},{"ruleId":"148","severity":1,"message":"156","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":35},{"ruleId":"148","severity":1,"message":"157","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":25,"column":16,"nodeType":"160","messageId":"161","endLine":25,"endColumn":46},{"ruleId":"158","severity":1,"message":"159","line":27,"column":17,"nodeType":"160","messageId":"161","endLine":27,"endColumn":48},{"ruleId":"148","severity":1,"message":"162","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"163","line":17,"column":12,"nodeType":"150","messageId":"151","endLine":17,"endColumn":19},{"ruleId":"152","severity":1,"message":"164","line":21,"column":8,"nodeType":"154","endLine":21,"endColumn":10,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"159","line":28,"column":16,"nodeType":"160","messageId":"161","endLine":28,"endColumn":46},{"ruleId":"148","severity":1,"message":"156","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":35},{"ruleId":"148","severity":1,"message":"163","line":11,"column":12,"nodeType":"150","messageId":"151","endLine":11,"endColumn":19},{"ruleId":"148","severity":1,"message":"166","line":12,"column":23,"nodeType":"150","messageId":"151","endLine":12,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":20,"column":17,"nodeType":"160","messageId":"161","endLine":20,"endColumn":45},{"ruleId":"148","severity":1,"message":"156","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":35},{"ruleId":"148","severity":1,"message":"157","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":17},{"ruleId":"148","severity":1,"message":"167","line":16,"column":11,"nodeType":"150","messageId":"151","endLine":16,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":24,"column":16,"nodeType":"160","messageId":"161","endLine":24,"endColumn":46},{"ruleId":"158","severity":1,"message":"159","line":26,"column":17,"nodeType":"160","messageId":"161","endLine":26,"endColumn":48},{"ruleId":"148","severity":1,"message":"149","line":28,"column":19,"nodeType":"150","messageId":"151","endLine":28,"endColumn":23},{"ruleId":"148","severity":1,"message":"156","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":35},{"ruleId":"148","severity":1,"message":"168","line":3,"column":9,"nodeType":"150","messageId":"151","endLine":3,"endColumn":19},{"ruleId":"148","severity":1,"message":"156","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":35},{"ruleId":"148","severity":1,"message":"167","line":12,"column":11,"nodeType":"150","messageId":"151","endLine":12,"endColumn":18},{"ruleId":"148","severity":1,"message":"167","line":11,"column":11,"nodeType":"150","messageId":"151","endLine":11,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":20,"column":16,"nodeType":"160","messageId":"161","endLine":20,"endColumn":46},{"ruleId":"148","severity":1,"message":"169","line":15,"column":12,"nodeType":"150","messageId":"151","endLine":15,"endColumn":20},{"ruleId":"148","severity":1,"message":"170","line":16,"column":12,"nodeType":"150","messageId":"151","endLine":16,"endColumn":20},{"ruleId":"148","severity":1,"message":"163","line":17,"column":12,"nodeType":"150","messageId":"151","endLine":17,"endColumn":19},{"ruleId":"148","severity":1,"message":"171","line":18,"column":12,"nodeType":"150","messageId":"151","endLine":18,"endColumn":17},{"ruleId":"152","severity":1,"message":"172","line":20,"column":15,"nodeType":"173","endLine":36,"endColumn":6},{"ruleId":"152","severity":1,"message":"172","line":39,"column":15,"nodeType":"173","endLine":49,"endColumn":6},{"ruleId":"152","severity":1,"message":"174","line":49,"column":8,"nodeType":"154","endLine":49,"endColumn":13,"suggestions":"175"},{"ruleId":"148","severity":1,"message":"149","line":165,"column":19,"nodeType":"150","messageId":"151","endLine":165,"endColumn":23},{"ruleId":"148","severity":1,"message":"169","line":14,"column":12,"nodeType":"150","messageId":"151","endLine":14,"endColumn":20},{"ruleId":"148","severity":1,"message":"170","line":15,"column":12,"nodeType":"150","messageId":"151","endLine":15,"endColumn":20},{"ruleId":"148","severity":1,"message":"163","line":17,"column":12,"nodeType":"150","messageId":"151","endLine":17,"endColumn":19},{"ruleId":"148","severity":1,"message":"171","line":18,"column":12,"nodeType":"150","messageId":"151","endLine":18,"endColumn":17},{"ruleId":"152","severity":1,"message":"172","line":20,"column":15,"nodeType":"173","endLine":36,"endColumn":6},{"ruleId":"152","severity":1,"message":"172","line":38,"column":15,"nodeType":"173","endLine":48,"endColumn":6},{"ruleId":"152","severity":1,"message":"174","line":48,"column":8,"nodeType":"154","endLine":48,"endColumn":13,"suggestions":"176"},{"ruleId":"148","severity":1,"message":"171","line":14,"column":12,"nodeType":"150","messageId":"151","endLine":14,"endColumn":17},{"ruleId":"152","severity":1,"message":"172","line":19,"column":15,"nodeType":"173","endLine":32,"endColumn":6},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'useEffect' is defined but never used.","'TagsInput' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'bcrypt' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.",["180"],"'userData' is assigned a value but never used.","'history' is assigned a value but never used.","'UpdateForm' is defined but never used.","'declined' is assigned a value but never used.","'rejected' is assigned a value but never used.","'error' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'leaveCluster'. Either include it or remove the dependency array.",["181"],["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},"Update the dependencies array to be: [currentUser, userData]",{"range":"190","text":"191"},"Update the dependencies array to be: [userData]",{"range":"192","text":"193"},"Update the dependencies array to be: [cap, leaveCluster]",{"range":"194","text":"195"},{"range":"196","text":"195"},[5164,5174],"[currentUser, userData]",[901,903],"[userData]",[1657,1662],"[cap, leaveCluster]",[1650,1655]]