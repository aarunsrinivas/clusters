[{"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\index.js":"1","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\App.js":"2","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\reportWebVitals.js":"3","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\Test.js":"4","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegisterApplicantForm.js":"5","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\contexts\\AuthContext.js":"6","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\HomePage.js":"7","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginApplicantForm.js":"8","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginBusinessForm.js":"9","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegisterBusinessForm.js":"10","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\LoginPage.js":"11","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\RegistrationPage.js":"12","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateApplicantForm.js":"13","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\UpdatePage.js":"14","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateBusinessForm.js":"15","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\buttons\\DeleteButton.js":"16","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\buttons\\JoinButton.js":"17","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\buttons\\LeaveButton.js":"18","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\buttons\\PeelButton.js":"19","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\DormantDashBoard.js":"20","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\ActiveDashBoard.js":"21","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\ActivePrivateRoute.js":"22","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\DefaultPrivateRoute.js":"23","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\DormantPrivateRoute.js":"24"},{"size":517,"mtime":1609119786466,"results":"25","hashOfConfig":"26"},{"size":1412,"mtime":1609465033331,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1609119786467,"results":"28","hashOfConfig":"26"},{"size":643,"mtime":1608868176684,"results":"29","hashOfConfig":"26"},{"size":2627,"mtime":1609443522989,"results":"30","hashOfConfig":"26"},{"size":8378,"mtime":1609446312894,"results":"31","hashOfConfig":"26"},{"size":315,"mtime":1609435135475,"results":"32","hashOfConfig":"26"},{"size":1372,"mtime":1609377795221,"results":"33","hashOfConfig":"26"},{"size":1369,"mtime":1609380527858,"results":"34","hashOfConfig":"26"},{"size":2622,"mtime":1609380527845,"results":"35","hashOfConfig":"26"},{"size":405,"mtime":1609381244391,"results":"36","hashOfConfig":"26"},{"size":444,"mtime":1609381244405,"results":"37","hashOfConfig":"26"},{"size":2616,"mtime":1609380044937,"results":"38","hashOfConfig":"26"},{"size":1784,"mtime":1609464431540,"results":"39","hashOfConfig":"26"},{"size":2612,"mtime":1609380044949,"results":"40","hashOfConfig":"26"},{"size":779,"mtime":1609443929281,"results":"41","hashOfConfig":"26"},{"size":742,"mtime":1609444867447,"results":"42","hashOfConfig":"26"},{"size":743,"mtime":1609445883418,"results":"43","hashOfConfig":"26"},{"size":755,"mtime":1609449228958,"results":"44","hashOfConfig":"26"},{"size":448,"mtime":1609465253886,"results":"45","hashOfConfig":"26"},{"size":1560,"mtime":1609465130081,"results":"46","hashOfConfig":"26"},{"size":645,"mtime":1609464914770,"results":"47","hashOfConfig":"26"},{"size":372,"mtime":1609464914756,"results":"48","hashOfConfig":"26"},{"size":643,"mtime":1609464788980,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1s79alz",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\index.js",[],["111","112"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\App.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\Test.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegisterApplicantForm.js",["113","114","115"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\n\r\nexport function RegisterApplicantForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [major, setMajor] = useState([]);\r\n    const [standing, setStanding] = useState([]);\r\n    const [gpa, setGpa] = useState(0);\r\n    const [skills, setSkills] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {registerApplicant} = useAuth();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleClick() {\r\n        try {\r\n            setError('Registered');\r\n            setLoading(true);\r\n            if(!name || !email || !password || !confirmPassword || !major.length\r\n               || !standing.length || !gpa || !skills.length) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await registerApplicant(name, email, password, major, standing, gpa, skills);\r\n            history.push('/dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <button disabled={loading} onClick={() => handleClick()}>Submit</button>\r\n            <div>\r\n                Already Have an Account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\contexts\\AuthContext.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    async function registerApplicant(name, email, password, major, standing, gpa, skills) {\r\n        const temp = await fetch(`/applicants?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        if(temp.length){\r\n            throw 'This email has already been taken';\r\n        }\r\n        const data = await fetch('/applicants', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password: bcrypt.hashSync(password, 10),\r\n                features: {\r\n                    type: 'applicant',\r\n                    major,\r\n                    standing,\r\n                    gpa: parseFloat(gpa),\r\n                    skills\r\n                }\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function logInApplicant(email, password){\r\n        const temp = await fetch(`/applicants?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        if(!temp.length){\r\n            throw 'No email associated with account';\r\n        } else if(!(await bcrypt.compare(password, temp[0].password))){\r\n            throw 'Invalid password';\r\n        }\r\n        setCurrentUser(temp[0]);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function registerBusiness(name, email, password, major, standing, gpa, skills){\r\n        const temp = await fetch(`/businesses?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        if(temp.length){\r\n            throw 'This email has already been taken';\r\n        }\r\n        const data = await fetch('/businesses', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password: bcrypt.hashSync(password, 10),\r\n                features: {\r\n                    type: 'business',\r\n                    major,\r\n                    standing,\r\n                    gpa: parseFloat(gpa),\r\n                    skills\r\n                }\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function logInBusiness(email, password){\r\n        const temp = await fetch(`/businesses?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        if(!temp.length){\r\n            throw 'No email associated with account';\r\n        } else if(!(await bcrypt.compare(password, temp[0].password))){\r\n            throw 'Invalid password';\r\n        } else {\r\n            setCurrentUser(temp[0]);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function updateApplicant(name, email, password, major, standing, gpa, skills){\r\n        if(email !== currentUser.email){\r\n            const temp = await fetch(`/applicants?email=${email}`).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            if(temp.length){\r\n                throw 'This email has been taken';\r\n            }\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password: password ? bcrypt.hashSync(password, 10) : currentUser.password,\r\n                features: {\r\n                    type: 'applicant',\r\n                    major,\r\n                    standing,\r\n                    gpa: parseFloat(gpa),\r\n                    skills\r\n                }\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    async function updateBusiness(name, email, password, major, standing, gpa, skills){\r\n        if(email !== currentUser.email){\r\n            const temp = await fetch(`/businesses?email=${email}`).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            if(temp.length){\r\n                throw 'This email has been taken';\r\n            }\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password: password ? bcrypt.hashSync(password, 10) : currentUser.password,\r\n                features: {\r\n                    type: 'business',\r\n                    major,\r\n                    standing,\r\n                    gpa: parseFloat(gpa),\r\n                    skills\r\n                }\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function logOut(){\r\n        setCurrentUser(null);\r\n    }\r\n\r\n    async function deleteUser(){\r\n        if(!currentUser){\r\n            throw 'No user to be deleted'\r\n        }\r\n        const temp = await fetch(currentUser.links.self, {\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(null);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function joinCluster(){\r\n        if(!currentUser){\r\n            throw 'No user to be joined';\r\n        } else if(currentUser.clusterId){\r\n            throw 'Already in a cluster';\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'join'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function leaveCluster(){\r\n        if(!currentUser){\r\n            throw 'No user to be joined';\r\n        } else if(!currentUser.clusterId){\r\n            throw 'Already outside cluster';\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'leave'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function peelFromCluster(){\r\n        if(!currentUser){\r\n            throw 'No user to be joined';\r\n        } else if(!currentUser.clusterId){\r\n            throw 'Cannot peel from outside cluster';\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'peel'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n    }, [currentUser]);\r\n\r\n    const value = {\r\n        currentUser,\r\n        registerApplicant,\r\n        registerBusiness,\r\n        logInApplicant,\r\n        logInBusiness,\r\n        updateApplicant,\r\n        updateBusiness,\r\n        logOut,\r\n        deleteUser,\r\n        joinCluster,\r\n        leaveCluster,\r\n        peelFromCluster,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\HomePage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginApplicantForm.js",["132","133","134","135"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs'\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport function LoginApplicantForm() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {logInApplicant} = useAuth();\r\n    const history = useHistory();\r\n\r\n     async function handleClick() {\r\n        try {\r\n            setError('Logged In');\r\n            setLoading(true);\r\n            if(!email || !password){\r\n                throw 'Fields are required';\r\n            }\r\n            await logInApplicant(email, password);\r\n            history.push('/dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <button onClick={() => handleClick()}>Submit</button>\r\n            <div>\r\n                Need an Account? <Link to='/register'>Register</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginBusinessForm.js",["136","137","138","139","140"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs'\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport function LoginBusinessForm() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {logInBusiness} = useAuth();\r\n    const history = useHistory();\r\n\r\n     async function handleClick() {\r\n        try {\r\n            setError('Logged In');\r\n            setLoading(true);\r\n            if(!email || !password){\r\n                throw 'Fields are required';\r\n            }\r\n            await logInBusiness(email, password);\r\n            history.push('/');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <button onClick={() => handleClick()}>Submit</button>\r\n            <div>\r\n                Need an Account? <Link to='/register/business'>Register</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegisterBusinessForm.js",["141","142","143"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\nexport function RegisterBusinessForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [major, setMajor] = useState([]);\r\n    const [standing, setStanding] = useState([]);\r\n    const [gpa, setGpa] = useState(0);\r\n    const [skills, setSkills] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {registerBusiness} = useAuth();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleClick() {\r\n        try {\r\n            setError('Registered');\r\n            setLoading(true);\r\n            if(!name || !email || !password || !confirmPassword || !major.length\r\n               || !standing.length || !gpa || !skills.length) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await registerBusiness(name, email, password, major, standing, gpa, skills);\r\n            history.push('/');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <button disabled={loading} onClick={() => handleClick()}>Submit</button>\r\n            <div>\r\n                Already Have an Account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\LoginPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\RegistrationPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateApplicantForm.js",["144","145","146","147","148"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nexport function UpdateApplicantForm() {\r\n\r\n    const {currentUser, updateApplicant} = useAuth();\r\n    const [name, setName] = useState(currentUser.name);\r\n    const [email, setEmail] = useState(currentUser.email);\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [major, setMajor] = useState(currentUser.features.major);\r\n    const [standing, setStanding] = useState(currentUser.features.standing);\r\n    const [gpa, setGpa] = useState(currentUser.features.gpa);\r\n    const [skills, setSkills] = useState(currentUser.features.skills);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleClick() {\r\n        console.log(name);\r\n        console.log(email);\r\n        try {\r\n            setError('Updated');\r\n            setLoading(true);\r\n            if(!name || !email || !major.length\r\n               || !standing.length || !gpa || !skills.length) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await updateApplicant(name, email, password, major, standing, gpa, skills);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' placeholder='Leave blank to keep the same'\r\n                value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' placeholder='Leave blank to keep the same'\r\n                value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <button onClick={() => handleClick()}>Submit</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\UpdatePage.js",["149"],"import React, {useState} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {UpdateApplicantForm} from '../forms/UpdateApplicantForm';\r\nimport {UpdateBusinessForm} from '../forms/UpdateBusinessForm';\r\nimport {DeleteButton} from '../buttons/DeleteButton';\r\nimport {JoinButton} from '../buttons/JoinButton';\r\nimport {LeaveButton} from '../buttons/LeaveButton';\r\nimport {PeelButton} from '../buttons/PeelButton';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function UpdatePage(){\r\n\r\n    const {currentUser, logOut} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    async function handleLogOut(){\r\n        try {\r\n            setError('Logged Out');\r\n            setLoading(true);\r\n            await logOut();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {currentUser.features.type === 'applicant' && <h1>Applicant</h1>}\r\n            {currentUser.features.type === 'applicant' && <UpdateApplicantForm/>}\r\n            {currentUser.features.type === 'business' && <h1>Business</h1>}\r\n            {currentUser.features.type === 'business' && <UpdateBusinessForm/>}\r\n            <br/>\r\n            <button variant='link' onClick={() => handleLogOut()}>Log Out</button>\r\n            <br/>\r\n            <DeleteButton>Delete Account</DeleteButton>\r\n            <br/>\r\n            <JoinButton>Join Cluster</JoinButton>\r\n            <br/>\r\n            <LeaveButton>Leave Cluster</LeaveButton>\r\n            <br/>\r\n            <PeelButton>Peel From Cluster</PeelButton>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateBusinessForm.js",["150","151","152","153","154"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nexport function UpdateBusinessForm() {\r\n\r\n    const {currentUser, updateBusiness} = useAuth();\r\n    const [name, setName] = useState(currentUser.name);\r\n    const [email, setEmail] = useState(currentUser.email);\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [major, setMajor] = useState(currentUser.features.major);\r\n    const [standing, setStanding] = useState(currentUser.features.standing);\r\n    const [gpa, setGpa] = useState(currentUser.features.gpa);\r\n    const [skills, setSkills] = useState(currentUser.features.skills);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleClick(){\r\n        try {\r\n            setError('Updated');\r\n            setLoading(true);\r\n            if(!name || !email || !major.length\r\n               || !standing.length || !gpa || !skills.length) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await updateBusiness(name, email, password, major, standing, gpa, skills);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' placeholder='Leave blank to keep the same'\r\n                value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' placeholder='Leave blank to keep the same'\r\n                value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <button onClick={() => handleClick()}>Submit</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\buttons\\DeleteButton.js",["155","156","157"],"import React, {useState} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport function DeleteButton({children}){\r\n\r\n    const {currentUser, deleteUser} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    async function handleClick(){\r\n        try {\r\n            setError('Successfully deleted');\r\n            setLoading(true);\r\n            await deleteUser();\r\n            history.push('/');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(true);\r\n    }\r\n\r\n    return (\r\n        <button onClick={() => handleClick()}>{children}</button>\r\n    )\r\n\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\buttons\\JoinButton.js",["158","159","160"],"import React, {useState} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport function JoinButton({children}){\r\n\r\n    const {currentUser, joinCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    async function handleClick(){\r\n        try {\r\n            setError('Joined Cluster');\r\n            setLoading(true);\r\n            await joinCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    return (\r\n        <button onClick={() => handleClick()}>{children}</button>\r\n    )\r\n\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\buttons\\LeaveButton.js",["161","162","163"],"import React, {useState} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport function LeaveButton({children}){\r\n\r\n    const {currentUser, leaveCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    async function handleClick(){\r\n        try {\r\n            setError('Left Cluster');\r\n            setLoading(true);\r\n            await leaveCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    return (\r\n        <button onClick={() => handleClick()}>{children}</button>\r\n    )\r\n\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\buttons\\PeelButton.js",["164","165","166"],"import React, {useState} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport function PeelButton({children}){\r\n\r\n    const {currentUser, peelFromCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    async function handleClick(){\r\n        try {\r\n            setError('Peeled From Cluster');\r\n            setLoading(true);\r\n            await peelFromCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    return (\r\n        <button onClick={() => handleClick()}>{children}</button>\r\n    )\r\n\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\DormantDashBoard.js",["167","168","169","170","171","172","173"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\ActiveDashBoard.js",["174","175","176","177","178","179","180"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\ActivePrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\DefaultPrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\DormantPrivateRoute.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":26,"nodeType":"187","messageId":"188","endLine":1,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":28,"column":16,"nodeType":"191","messageId":"192","endLine":28,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":30,"column":17,"nodeType":"191","messageId":"192","endLine":30,"endColumn":48},{"ruleId":"189","severity":1,"message":"190","line":22,"column":13,"nodeType":"191","messageId":"192","endLine":22,"endColumn":55},{"ruleId":"189","severity":1,"message":"190","line":54,"column":13,"nodeType":"191","messageId":"192","endLine":54,"endColumn":54},{"ruleId":"189","severity":1,"message":"190","line":56,"column":13,"nodeType":"191","messageId":"192","endLine":56,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":69,"column":13,"nodeType":"191","messageId":"192","endLine":69,"endColumn":55},{"ruleId":"189","severity":1,"message":"190","line":101,"column":13,"nodeType":"191","messageId":"192","endLine":101,"endColumn":54},{"ruleId":"189","severity":1,"message":"190","line":103,"column":13,"nodeType":"191","messageId":"192","endLine":103,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":118,"column":17,"nodeType":"191","messageId":"192","endLine":118,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":153,"column":17,"nodeType":"191","messageId":"192","endLine":153,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":185,"column":13,"nodeType":"191","messageId":"192","endLine":185,"endColumn":42},{"ruleId":"185","severity":1,"message":"193","line":187,"column":15,"nodeType":"187","messageId":"188","endLine":187,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":200,"column":13,"nodeType":"191","messageId":"192","endLine":200,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":202,"column":13,"nodeType":"191","messageId":"192","endLine":202,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":218,"column":13,"nodeType":"191","messageId":"192","endLine":218,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":220,"column":13,"nodeType":"191","messageId":"192","endLine":220,"endColumn":45},{"ruleId":"189","severity":1,"message":"190","line":236,"column":13,"nodeType":"191","messageId":"192","endLine":236,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":238,"column":13,"nodeType":"191","messageId":"192","endLine":238,"endColumn":54},{"ruleId":"185","severity":1,"message":"186","line":1,"column":26,"nodeType":"187","messageId":"188","endLine":1,"endColumn":35},{"ruleId":"185","severity":1,"message":"194","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"195","line":12,"column":12,"nodeType":"187","messageId":"188","endLine":12,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":21,"column":17,"nodeType":"191","messageId":"192","endLine":21,"endColumn":45},{"ruleId":"185","severity":1,"message":"186","line":1,"column":26,"nodeType":"187","messageId":"188","endLine":1,"endColumn":35},{"ruleId":"185","severity":1,"message":"194","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"196","line":11,"column":12,"nodeType":"187","messageId":"188","endLine":11,"endColumn":17},{"ruleId":"185","severity":1,"message":"195","line":12,"column":12,"nodeType":"187","messageId":"188","endLine":12,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":21,"column":17,"nodeType":"191","messageId":"192","endLine":21,"endColumn":45},{"ruleId":"185","severity":1,"message":"186","line":1,"column":26,"nodeType":"187","messageId":"188","endLine":1,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":27,"column":16,"nodeType":"191","messageId":"192","endLine":27,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":29,"column":17,"nodeType":"191","messageId":"192","endLine":29,"endColumn":48},{"ruleId":"185","severity":1,"message":"186","line":1,"column":26,"nodeType":"187","messageId":"188","endLine":1,"endColumn":35},{"ruleId":"185","severity":1,"message":"194","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"195","line":18,"column":12,"nodeType":"187","messageId":"188","endLine":18,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":28,"column":16,"nodeType":"191","messageId":"192","endLine":28,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":30,"column":17,"nodeType":"191","messageId":"192","endLine":30,"endColumn":48},{"ruleId":"185","severity":1,"message":"195","line":14,"column":12,"nodeType":"187","messageId":"188","endLine":14,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":1,"column":26,"nodeType":"187","messageId":"188","endLine":1,"endColumn":35},{"ruleId":"185","severity":1,"message":"194","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"195","line":18,"column":12,"nodeType":"187","messageId":"188","endLine":18,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":26,"column":16,"nodeType":"191","messageId":"192","endLine":26,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":28,"column":17,"nodeType":"191","messageId":"192","endLine":28,"endColumn":48},{"ruleId":"185","severity":1,"message":"197","line":7,"column":12,"nodeType":"187","messageId":"188","endLine":7,"endColumn":23},{"ruleId":"185","severity":1,"message":"195","line":8,"column":12,"nodeType":"187","messageId":"188","endLine":8,"endColumn":19},{"ruleId":"185","severity":1,"message":"196","line":9,"column":12,"nodeType":"187","messageId":"188","endLine":9,"endColumn":17},{"ruleId":"185","severity":1,"message":"197","line":7,"column":12,"nodeType":"187","messageId":"188","endLine":7,"endColumn":23},{"ruleId":"185","severity":1,"message":"195","line":8,"column":12,"nodeType":"187","messageId":"188","endLine":8,"endColumn":19},{"ruleId":"185","severity":1,"message":"198","line":10,"column":11,"nodeType":"187","messageId":"188","endLine":10,"endColumn":18},{"ruleId":"185","severity":1,"message":"197","line":7,"column":12,"nodeType":"187","messageId":"188","endLine":7,"endColumn":23},{"ruleId":"185","severity":1,"message":"195","line":8,"column":12,"nodeType":"187","messageId":"188","endLine":8,"endColumn":19},{"ruleId":"185","severity":1,"message":"198","line":10,"column":11,"nodeType":"187","messageId":"188","endLine":10,"endColumn":18},{"ruleId":"185","severity":1,"message":"197","line":7,"column":12,"nodeType":"187","messageId":"188","endLine":7,"endColumn":23},{"ruleId":"185","severity":1,"message":"195","line":8,"column":12,"nodeType":"187","messageId":"188","endLine":8,"endColumn":19},{"ruleId":"185","severity":1,"message":"198","line":10,"column":11,"nodeType":"187","messageId":"188","endLine":10,"endColumn":18},{"ruleId":"185","severity":1,"message":"197","line":7,"column":12,"nodeType":"187","messageId":"188","endLine":7,"endColumn":23},{"ruleId":"185","severity":1,"message":"199","line":7,"column":25,"nodeType":"187","messageId":"188","endLine":7,"endColumn":35},{"ruleId":"185","severity":1,"message":"195","line":8,"column":12,"nodeType":"187","messageId":"188","endLine":8,"endColumn":19},{"ruleId":"185","severity":1,"message":"200","line":8,"column":21,"nodeType":"187","messageId":"188","endLine":8,"endColumn":31},{"ruleId":"185","severity":1,"message":"196","line":9,"column":12,"nodeType":"187","messageId":"188","endLine":9,"endColumn":17},{"ruleId":"185","severity":1,"message":"201","line":9,"column":19,"nodeType":"187","messageId":"188","endLine":9,"endColumn":27},{"ruleId":"185","severity":1,"message":"198","line":10,"column":11,"nodeType":"187","messageId":"188","endLine":10,"endColumn":18},{"ruleId":"185","severity":1,"message":"195","line":9,"column":12,"nodeType":"187","messageId":"188","endLine":9,"endColumn":19},{"ruleId":"185","severity":1,"message":"200","line":9,"column":21,"nodeType":"187","messageId":"188","endLine":9,"endColumn":31},{"ruleId":"185","severity":1,"message":"196","line":10,"column":12,"nodeType":"187","messageId":"188","endLine":10,"endColumn":17},{"ruleId":"185","severity":1,"message":"201","line":10,"column":19,"nodeType":"187","messageId":"188","endLine":10,"endColumn":27},{"ruleId":"185","severity":1,"message":"198","line":11,"column":11,"nodeType":"187","messageId":"188","endLine":11,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":13,"column":15,"nodeType":"204","endLine":29,"endColumn":6},{"ruleId":"202","severity":1,"message":"205","line":29,"column":8,"nodeType":"206","endLine":29,"endColumn":10,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'temp' is assigned a value but never used.","'bcrypt' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'history' is assigned a value but never used.","'deleteUser' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'currentUser.features.type', 'currentUser.links.applicants', and 'currentUser.links.businesses'. Either include them or remove the dependency array.","ArrayExpression",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},"Update the dependencies array to be: [currentUser.features.type, currentUser.links.applicants, currentUser.links.businesses]",{"range":"213","text":"214"},[1051,1053],"[currentUser.features.type, currentUser.links.applicants, currentUser.links.businesses]"]