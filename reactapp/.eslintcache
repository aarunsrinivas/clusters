[{"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\index.js":"1","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\App.js":"2","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\reportWebVitals.js":"3","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\Test.js":"4","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\contexts\\AuthContext.js":"5","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\HomePage.js":"6","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\LoginPage.js":"7","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\RegistrationPage.js":"8","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\DormantDashBoard.js":"9","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\ActiveDashBoard.js":"10","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\ActivePrivateRoute.js":"11","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\DormantPrivateRoute.js":"12","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegistrationForm.js":"13","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateForm.js":"14","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginForm.js":"15","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\DormantDashboard.js":"16","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\ActiveDashboard.js":"17","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PrivateRoute.js":"18","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\ApplicantDashboard.js":"19","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\BusinessDashboard.js":"20"},{"size":517,"mtime":1609119786466,"results":"21","hashOfConfig":"22"},{"size":1247,"mtime":1609528713554,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1609119786467,"results":"24","hashOfConfig":"22"},{"size":643,"mtime":1608868176684,"results":"25","hashOfConfig":"22"},{"size":5664,"mtime":1609550778533,"results":"26","hashOfConfig":"22"},{"size":317,"mtime":1609476430271,"results":"27","hashOfConfig":"22"},{"size":215,"mtime":1609470098931,"results":"28","hashOfConfig":"22"},{"size":246,"mtime":1609470098914,"results":"29","hashOfConfig":"22"},{"size":1803,"mtime":1609522207390,"results":"30","hashOfConfig":"22"},{"size":2743,"mtime":1609525654525,"results":"31","hashOfConfig":"22"},{"size":638,"mtime":1609528250138,"results":"32","hashOfConfig":"22"},{"size":636,"mtime":1609528250153,"results":"33","hashOfConfig":"22"},{"size":2907,"mtime":1609528484757,"results":"34","hashOfConfig":"22"},{"size":2599,"mtime":1609469856771,"results":"35","hashOfConfig":"22"},{"size":1459,"mtime":1609528513321,"results":"36","hashOfConfig":"22"},{"size":1811,"mtime":1609526845657,"results":"37","hashOfConfig":"22"},{"size":2751,"mtime":1609550024403,"results":"38","hashOfConfig":"22"},{"size":365,"mtime":1609528713538,"results":"39","hashOfConfig":"22"},{"size":4753,"mtime":1609567245480,"results":"40","hashOfConfig":"22"},{"size":3149,"mtime":1609566029555,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1s79alz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\index.js",[],["94","95"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\App.js",["96"],"import './App.css';\r\nimport {HomePage} from './components/pages/HomePage';\r\nimport {LoginPage} from './components/pages/LoginPage';\r\nimport {RegistrationPage} from './components/pages/RegistrationPage';\r\nimport {AuthProvider} from './contexts/AuthContext';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\nimport {PrivateRoute} from './routes/PrivateRoute';\r\nimport {ActivePrivateRoute} from './routes/ActivePrivateRoute';\r\nimport {DormantPrivateRoute} from './routes/DormantPrivateRoute';\r\nimport {ActiveDashboard} from './components/pages/ActiveDashboard';\r\nimport {DormantDashboard} from './components/pages/DormantDashboard';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <AuthProvider>\r\n            <Switch>\r\n                <Route exact path='/' component={HomePage}/>\r\n                <Route path='/register' component={RegistrationPage}/>\r\n                <Route path='/login' component={LoginPage}/>\r\n                <DormantPrivateRoute path='/dormant-dashboard' component={DormantDashboard}/>\r\n                <ActivePrivateRoute path='/active-dashboard' component={ActiveDashboard}/>\r\n            </Switch>\r\n        </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\Test.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\contexts\\AuthContext.js",["97","98","99","100","101","102","103","104","105","106","107","108"],"import React, {useContext, useState, useEffect} from 'react';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentUser')) || null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    async function registerUser(name, email, password, type, major, standing, gpa, skills) {\r\n        const temp = await fetch(`/users?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        if(temp.length){\r\n            throw 'This email has already been taken';\r\n        }\r\n        const destination = type === 'applicant' ? '/applicants' : '/businesses';\r\n        const data = await fetch(destination, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password: bcrypt.hashSync(password, 10),\r\n                features: {\r\n                    type,\r\n                    major,\r\n                    standing,\r\n                    gpa: parseFloat(gpa),\r\n                    skills\r\n                }\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n    }\r\n\r\n    async function loginUser(email, password){\r\n        const temp = await fetch(`/users?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        if(!temp.length){\r\n            throw 'No email associated with account';\r\n        } else if(!(await bcrypt.compare(password, temp[0].password))){\r\n            throw 'Invalid password';\r\n        }\r\n        setCurrentUser(temp[0]);\r\n        return temp[0];\r\n    }\r\n\r\n    async function updateUser(name, email, password, major, standing, gpa, skills){\r\n        if(email !== currentUser.email){\r\n            const temp = await fetch(`/users?email=${email}`).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            if(temp.length){\r\n                throw 'This email has been taken';\r\n            }\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password: password ? bcrypt.hashSync(password, 10) : currentUser.password,\r\n                features: {\r\n                    type: 'applicant',\r\n                    major,\r\n                    standing,\r\n                    gpa: parseFloat(gpa),\r\n                    skills\r\n                }\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n    }\r\n\r\n    async function logoutUser(){\r\n        setCurrentUser(null);\r\n    }\r\n\r\n    async function deleteUser(){\r\n        if(!currentUser){\r\n            throw 'No user to be deleted'\r\n        }\r\n        const temp = await fetch(currentUser.links.self, {\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(null);\r\n    }\r\n\r\n    async function joinCluster(){\r\n        if(!currentUser){\r\n            throw 'No user to be joined';\r\n        } else if(currentUser.clusterId){\r\n            throw 'Already in a cluster';\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'join'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n    }\r\n\r\n    async function leaveCluster(){\r\n        if(!currentUser){\r\n            throw 'No user to be joined';\r\n        } else if(!currentUser.clusterId){\r\n            throw 'Already outside cluster';\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'leave'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n    }\r\n\r\n    async function peelFromCluster(){\r\n        if(!currentUser){\r\n            throw 'No user to be joined';\r\n        } else if(!currentUser.clusterId){\r\n            throw 'Cannot peel from outside cluster';\r\n        }\r\n        const data = await fetch(currentUser.links.self, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'peel'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCurrentUser(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        !currentUser ? sessionStorage.clear() :\r\n            sessionStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n        setLoading(false)\r\n    }, [currentUser]);\r\n\r\n    const value = {\r\n        currentUser,\r\n        registerUser,\r\n        loginUser,\r\n        updateUser,\r\n        logoutUser,\r\n        deleteUser,\r\n        joinCluster,\r\n        peelFromCluster,\r\n        leaveCluster,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\HomePage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\LoginPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\RegistrationPage.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\DormantDashBoard.js",["109","110","111","112","113","114","115"],"import React, {useState} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function DormantDashBoard(){\r\n\r\n    const {currentUser, deleteUser} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n        </div>\r\n    );\r\n}",["116","117"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\ActiveDashBoard.js",["118","119","120","121","122","123","124"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function ActiveDashBoard(){\r\n\r\n    const {currentUser} = useAuth();\r\n    const [pool, setPool] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        if(currentUser.features.type === 'applicant'){\r\n            const businesses = await fetch(currentUser.links.businesses).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setPool(businesses);\r\n        } else if(currentUser.features.type === 'business'){\r\n            const applicants = await fetch(currentUser.links.applicants).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setPool(applicants)\r\n        }\r\n    }, []);\r\n\r\n    function renderPool(){\r\n        return pool.map(user => {\r\n            return (\r\n                <div>\r\n                    <h2>{user.name}</h2>\r\n                    <u1>{user.skills}</u1>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {currentUser.features.type === 'applicant' && <h1>Businesses</h1>}\r\n            {currentUser.features.type === 'business' && <h1>Applicants</h1>}\r\n            {renderPool()}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\ActivePrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\DormantPrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\RegistrationForm.js",["125","126","127"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\n\r\nexport function RegistrationForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [type, setType] = useState('')\r\n    const [major, setMajor] = useState([]);\r\n    const [standing, setStanding] = useState([]);\r\n    const [gpa, setGpa] = useState(0);\r\n    const [skills, setSkills] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {registerUser} = useAuth();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleRegistration() {\r\n        try {\r\n            setError('Registered');\r\n            setLoading(true);\r\n            if(!name || !email || !password || !confirmPassword || !type || !major.length\r\n               || !standing.length || !gpa || !skills.length) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await registerUser(name, email, password, type, major, standing, gpa, skills);\r\n            history.push('/dormant-dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Type:\r\n            <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\r\n            <input type='radio' name='type' onClick={() => setType('business')}/> Business\r\n            <br/>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <button disabled={loading} onClick={() => handleRegistration()}>Submit</button>\r\n            <div>\r\n                Already Have an Account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\UpdateForm.js",["128","129","130","131","132"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nexport function UpdateForm() {\r\n\r\n    const {currentUser, updateUser} = useAuth();\r\n    const [name, setName] = useState(currentUser.name);\r\n    const [email, setEmail] = useState(currentUser.email);\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [major, setMajor] = useState(currentUser.features.major);\r\n    const [standing, setStanding] = useState(currentUser.features.standing);\r\n    const [gpa, setGpa] = useState(currentUser.features.gpa);\r\n    const [skills, setSkills] = useState(currentUser.features.skills);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleUpdate() {\r\n        try {\r\n            setError('Updated');\r\n            setLoading(true);\r\n            if(!name || !email || !major.length\r\n               || !standing.length || !gpa || !skills.length) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await updateUser(name, email, password, major, standing, gpa, skills);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' placeholder='Leave blank to keep the same'\r\n                value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' placeholder='Leave blank to keep the same'\r\n                value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <button onClick={() => handleUpdate()}>Submit</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\forms\\LoginForm.js",["133","134","135","136"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs'\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport function LoginForm() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {loginUser} = useAuth();\r\n    const history = useHistory();\r\n\r\n     async function handleLoginUser() {\r\n        try {\r\n            setError('Logged In');\r\n            setLoading(true);\r\n            if(!email || !password){\r\n                throw 'Fields are required';\r\n            }\r\n            const data = await loginUser(email, password);\r\n            const destination = data.clusterId ? '/active-dashboard' : '/dormant-dashboard';\r\n            history.push(destination);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <button onClick={handleLoginUser}>Submit</button>\r\n            <div>\r\n                Need an Account? <Link to='/register'>Register</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\DormantDashboard.js",["137"],"import React, {useState} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {UpdateForm} from '../forms/UpdateForm';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function DormantDashboard(){\r\n\r\n    const {currentUser, logoutUser, deleteUser, joinCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    async function handleLogoutUser(){\r\n        try {\r\n            setError('Logged Out');\r\n            setLoading(true);\r\n            await logoutUser();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    async function handleDeleteUser(){\r\n        try {\r\n            setError('Successfully deleted');\r\n            setLoading(true);\r\n            await deleteUser();\r\n            history.push('/');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    async function handleJoinCluster(){\r\n        try {\r\n            setError('Joined Cluster');\r\n            setLoading(true);\r\n            await joinCluster();\r\n            history.push('/active-dashboard')\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dormant Dashboard</h1>\r\n            <UpdateForm/>\r\n            <button disabled={loading} onClick={handleLogoutUser}>Logout</button>\r\n            <button disabled={loading} onClick={handleDeleteUser}>Delete User</button>\r\n            <button disabled={loading} onClick={handleJoinCluster}>Join Cluster</button>\r\n        </div>\r\n    );\r\n}","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\ActiveDashboard.js",["138","139"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {ApplicantDashboard} from './ApplicantDashboard';\r\nimport {BusinessDashboard} from './BusinessDashboard';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function ActiveDashboard(){\r\n\r\n    const {currentUser, logoutUser, deleteUser, peelFromCluster, leaveCluster} = useAuth();\r\n    const [pool, setPool] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        const data = await fetch(currentUser.links.pool).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setPool(data);\r\n    }, [currentUser]);\r\n\r\n    async function handleLogoutUser(){\r\n        try {\r\n            setError('Logged Out');\r\n            setLoading(true);\r\n            await logoutUser();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    async function handleDeleteUser(){\r\n        try {\r\n            setError('Successfully deleted');\r\n            setLoading(true);\r\n            await deleteUser();\r\n            history.push('/');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    async function handlePeelFromCluster(){\r\n        try {\r\n            setError('Peeled From Cluster');\r\n            setLoading(true);\r\n            await peelFromCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n    async function handleLeaveCluster(){\r\n        try {\r\n            setError('Left Cluster');\r\n            setLoading(true);\r\n            await leaveCluster();\r\n            history.push('/dormant-dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n        console.log(error);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Active Dashboard</h1>\r\n            {currentUser.features.type === 'applicant' && <ApplicantDashboard/>}\r\n            {currentUser.features.type === 'business' && <BusinessDashboard/>}\r\n            <button disabled={loading} onClick={handleLogoutUser}>Logout</button>\r\n            <button disabled={loading} onClick={handleDeleteUser}>Delete User</button>\r\n            <button disabled={loading} onClick={handlePeelFromCluster}>Peel From Cluster</button>\r\n            <button disabled={loading} onClick={handleLeaveCluster}>Leave Cluster</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\ApplicantDashboard.js",["140","141","142","143","144"],"C:\\Users\\aarun\\PycharmProjects\\clusters\\reactapp\\src\\components\\pages\\BusinessDashboard.js",["145","146","147","148","149"],"import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function BusinessDashboard(){\r\n\r\n    const {currentUser} = useAuth();\r\n    const [pool, setPool] = useState([]);\r\n    const [reached, setReached] = useState(JSON.parse(sessionStorage.getItem('reached')) || []);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    // handle peel\r\n    useEffect(async () => {\r\n        const data = await fetch(currentUser.links.pool).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setPool(data);\r\n    }, [currentUser]);\r\n\r\n\r\n    useEffect(async () => {\r\n        sessionStorage.setItem('reached', JSON.stringify(reached));\r\n        setLoading(false);\r\n    }, [reached]);\r\n\r\n\r\n    async function handleReach(applicantId){\r\n        try {\r\n            setError('Successfully Reached');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.reached, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'reach',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReached(data);\r\n        } catch (err) {\r\n            setError('Failed to reach out');\r\n        }\r\n    }\r\n\r\n\r\n    async function handleCancel(applicantId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.reached, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReached(data);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n\r\n    function renderPool(){\r\n        return pool.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleReach(applicant.id)}>Apply</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    function renderReached(){\r\n        return reached.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleCancel(applicant.id)}>Cancel</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pool</h2>\r\n            {renderPool()}\r\n            <br/>\r\n            <h2>Reached</h2>\r\n            {renderReached()}\r\n        </div>\r\n    );\r\n}\r\n\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":11,"column":9,"nodeType":"156","messageId":"157","endLine":11,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":22,"column":13,"nodeType":"160","messageId":"161","endLine":22,"endColumn":55},{"ruleId":"158","severity":1,"message":"159","line":54,"column":13,"nodeType":"160","messageId":"161","endLine":54,"endColumn":54},{"ruleId":"158","severity":1,"message":"159","line":56,"column":13,"nodeType":"160","messageId":"161","endLine":56,"endColumn":38},{"ruleId":"158","severity":1,"message":"159","line":70,"column":17,"nodeType":"160","messageId":"161","endLine":70,"endColumn":51},{"ruleId":"158","severity":1,"message":"159","line":101,"column":13,"nodeType":"160","messageId":"161","endLine":101,"endColumn":42},{"ruleId":"154","severity":1,"message":"162","line":103,"column":15,"nodeType":"156","messageId":"157","endLine":103,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":115,"column":13,"nodeType":"160","messageId":"161","endLine":115,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":117,"column":13,"nodeType":"160","messageId":"161","endLine":117,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":132,"column":13,"nodeType":"160","messageId":"161","endLine":132,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":134,"column":13,"nodeType":"160","messageId":"161","endLine":134,"endColumn":45},{"ruleId":"158","severity":1,"message":"159","line":149,"column":13,"nodeType":"160","messageId":"161","endLine":149,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":151,"column":13,"nodeType":"160","messageId":"161","endLine":151,"endColumn":54},{"ruleId":"154","severity":1,"message":"163","line":7,"column":12,"nodeType":"156","messageId":"157","endLine":7,"endColumn":23},{"ruleId":"154","severity":1,"message":"164","line":7,"column":25,"nodeType":"156","messageId":"157","endLine":7,"endColumn":35},{"ruleId":"154","severity":1,"message":"165","line":8,"column":12,"nodeType":"156","messageId":"157","endLine":8,"endColumn":19},{"ruleId":"154","severity":1,"message":"166","line":8,"column":21,"nodeType":"156","messageId":"157","endLine":8,"endColumn":31},{"ruleId":"154","severity":1,"message":"167","line":9,"column":12,"nodeType":"156","messageId":"157","endLine":9,"endColumn":17},{"ruleId":"154","severity":1,"message":"168","line":9,"column":19,"nodeType":"156","messageId":"157","endLine":9,"endColumn":27},{"ruleId":"154","severity":1,"message":"169","line":10,"column":11,"nodeType":"156","messageId":"157","endLine":10,"endColumn":18},{"ruleId":"150","replacedBy":"170"},{"ruleId":"152","replacedBy":"171"},{"ruleId":"154","severity":1,"message":"165","line":9,"column":12,"nodeType":"156","messageId":"157","endLine":9,"endColumn":19},{"ruleId":"154","severity":1,"message":"166","line":9,"column":21,"nodeType":"156","messageId":"157","endLine":9,"endColumn":31},{"ruleId":"154","severity":1,"message":"167","line":10,"column":12,"nodeType":"156","messageId":"157","endLine":10,"endColumn":17},{"ruleId":"154","severity":1,"message":"168","line":10,"column":19,"nodeType":"156","messageId":"157","endLine":10,"endColumn":27},{"ruleId":"154","severity":1,"message":"169","line":11,"column":11,"nodeType":"156","messageId":"157","endLine":11,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":13,"column":15,"nodeType":"174","endLine":29,"endColumn":6},{"ruleId":"172","severity":1,"message":"175","line":29,"column":8,"nodeType":"176","endLine":29,"endColumn":10,"suggestions":"177"},{"ruleId":"154","severity":1,"message":"178","line":1,"column":26,"nodeType":"156","messageId":"157","endLine":1,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":29,"column":16,"nodeType":"160","messageId":"161","endLine":29,"endColumn":46},{"ruleId":"158","severity":1,"message":"159","line":31,"column":17,"nodeType":"160","messageId":"161","endLine":31,"endColumn":48},{"ruleId":"154","severity":1,"message":"178","line":1,"column":26,"nodeType":"156","messageId":"157","endLine":1,"endColumn":35},{"ruleId":"154","severity":1,"message":"179","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":14},{"ruleId":"154","severity":1,"message":"165","line":18,"column":12,"nodeType":"156","messageId":"157","endLine":18,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":26,"column":16,"nodeType":"160","messageId":"161","endLine":26,"endColumn":46},{"ruleId":"158","severity":1,"message":"159","line":28,"column":17,"nodeType":"160","messageId":"161","endLine":28,"endColumn":48},{"ruleId":"154","severity":1,"message":"178","line":1,"column":26,"nodeType":"156","messageId":"157","endLine":1,"endColumn":35},{"ruleId":"154","severity":1,"message":"179","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":14},{"ruleId":"154","severity":1,"message":"165","line":12,"column":12,"nodeType":"156","messageId":"157","endLine":12,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":21,"column":17,"nodeType":"160","messageId":"161","endLine":21,"endColumn":45},{"ruleId":"154","severity":1,"message":"163","line":8,"column":12,"nodeType":"156","messageId":"157","endLine":8,"endColumn":23},{"ruleId":"154","severity":1,"message":"180","line":10,"column":12,"nodeType":"156","messageId":"157","endLine":10,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":15,"column":15,"nodeType":"174","endLine":22,"endColumn":6},{"ruleId":"154","severity":1,"message":"165","line":11,"column":12,"nodeType":"156","messageId":"157","endLine":11,"endColumn":19},{"ruleId":"154","severity":1,"message":"167","line":12,"column":12,"nodeType":"156","messageId":"157","endLine":12,"endColumn":17},{"ruleId":"154","severity":1,"message":"169","line":13,"column":11,"nodeType":"156","messageId":"157","endLine":13,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":17,"column":15,"nodeType":"174","endLine":24,"endColumn":6},{"ruleId":"172","severity":1,"message":"173","line":26,"column":15,"nodeType":"174","endLine":29,"endColumn":6},{"ruleId":"154","severity":1,"message":"165","line":10,"column":12,"nodeType":"156","messageId":"157","endLine":10,"endColumn":19},{"ruleId":"154","severity":1,"message":"167","line":11,"column":12,"nodeType":"156","messageId":"157","endLine":11,"endColumn":17},{"ruleId":"154","severity":1,"message":"169","line":12,"column":11,"nodeType":"156","messageId":"157","endLine":12,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":16,"column":15,"nodeType":"174","endLine":23,"endColumn":6},{"ruleId":"172","severity":1,"message":"173","line":26,"column":15,"nodeType":"174","endLine":29,"endColumn":6},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'PrivateRoute' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'temp' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'deleteUser' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'history' is assigned a value but never used.",["181"],["182"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'currentUser.features.type', 'currentUser.links.applicants', and 'currentUser.links.businesses'. Either include them or remove the dependency array.","ArrayExpression",["183"],"'useEffect' is defined but never used.","'bcrypt' is defined but never used.","'pool' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},"Update the dependencies array to be: [currentUser.features.type, currentUser.links.applicants, currentUser.links.businesses]",{"range":"186","text":"187"},[1051,1053],"[currentUser.features.type, currentUser.links.applicants, currentUser.links.businesses]"]