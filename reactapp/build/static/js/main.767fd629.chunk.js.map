{"version":3,"sources":["components/pages/HomePage.js","firebase.js","contexts/AuthContext.js","components/forms/LoginForm.js","components/pages/LoginPage.js","components/forms/RegistrationForm.js","components/pages/RegistrationPage.js","components/forms/AccountForm.js","components/pages/AccountPage.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/forms/UpdateForm.js","components/panels/ApplicantPanel.js","components/panels/BusinessPanel.js","components/pages/sub-pages/ActiveDashboard.js","components/pages/sub-pages/DormantDashboard.js","components/pages/Dashboard.js","routes/ActivePrivateRoute.js","components/panels/ChatPanel.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","JSON","parse","sessionStorage","getItem","currentUser","setCurrentUser","userData","setUserData","loading","setLoading","name","email","password","type","worldId","a","fire","createUserWithEmailAndPassword","destination","fetch","method","body","stringify","then","response","ok","json","data","signInWithEmailAndPassword","updateEmail","updatePassword","links","self","action","cap","gpa","majors","standings","skills","interests","courses","parseInt","parseFloat","signOut","delete","useEffect","unsubscribe","onAuthStateChanged","user","clear","setItem","value","registerUser","loginUser","logoutUser","deleteUser","updateAccount","updateFeatures","joinCluster","peelFromCluster","leaveCluster","Provider","LoginForm","setEmail","setPassword","setError","history","useHistory","push","onChange","e","target","onClick","to","LoginPage","RegistrationForm","setName","confirmPassword","setConfirmPassword","setType","setWorldId","disabled","RegistrationPage","AccountForm","AccountPage","PrivateRoute","Component","component","rest","render","props","PublicRoute","console","log","UpdateForm","setCap","features","setGpa","setMajors","setStandings","setSkills","setInterests","setCourses","length","tags","ApplicantPanel","change","setChange","pool","setPool","applied","setApplied","received","setReceived","interested","setInterested","reviewed","setReviewed","accepted","setAccepted","setDeclined","setRejected","businessId","all","declined","rejected","map","business","handleSubmitApply","id","handleCancelApply","handleAcceptReach","handleDeclineReach","handleDeclineInterest","handleAcceptOffer","handleDeclineOffer","BusinessPanel","reached","setReached","offered","setOffered","applicantId","applicant","handleSubmitReach","handleCancelReach","handleAcceptApply","handleDeclineApply","handleOfferInterest","handleRescindOffer","ActiveDashboard","DormantDashboard","Dashboard","clusterId","ActivePrivateRoute","socket","io","connect","ChatPanel","chatsList","setChatsList","chat","setChat","messages","setMessages","message","setMessage","handleSendMessage","emit","senderId","recipientId","chatId","on","chats","userId","recipientName","handleChatClick","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"ocAEO,SAASA,IAEZ,OACI,8BACI,6C,0CCHNC,G,OAAMC,IAASC,cAAc,CAC/BC,OAAQC,0CACRC,WAAYD,uCACZE,UAAWF,uBACXG,cAAeH,mCACfI,kBAAmBJ,eACnBK,MAAOL,+CAGEM,EAAOV,EAAIU,OCRlBC,EAAcC,IAAMC,gBAEnB,SAASC,IACZ,OAAOC,qBAAWJ,GAGf,SAASK,EAAT,GAAmC,IAAZC,EAAW,EAAXA,SAAW,EAECC,mBAASC,KAAKC,MAAMC,eAAeC,QAAQ,iBAAmB,MAF/D,mBAE9BC,EAF8B,KAEjBC,EAFiB,OAGLN,mBAASC,KAAKC,MAAMC,eAAeC,QAAQ,cAAgB,MAHtD,mBAG9BG,EAH8B,KAGpBC,EAHoB,OAIPR,oBAAS,GAJF,mBAI9BS,EAJ8B,KAIrBC,EAJqB,iDAOrC,WAA4BC,EAAMC,EAAOC,EAAUC,EAAMC,GAAzD,mBAAAC,EAAA,6DACUC,EAAOzB,EAAK0B,+BAA+BN,EAAOC,GAClDM,EAAuB,cAATL,EAAA,UAA0B5B,6CAA1B,mBAAsE6B,EAAtE,yBACX7B,6CADW,mBACiC6B,EADjC,eAFxB,SAIuBK,MAAMD,EAAa,CAClCE,OAAQ,OACRC,KAAMrB,KAAKsB,UAAU,CACjBZ,OACAC,QACAG,cAELS,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAb5B,cAIUC,EAJV,OAgBIpB,EAAYoB,GAhBhB,kBAiBWX,GAjBX,4CAPqC,kEA2BrC,WAAyBL,EAAOC,GAAhC,iBAAAG,EAAA,6DACUC,EAAOzB,EAAKqC,2BAA2BjB,EAAOC,GADxD,SAEuBO,MAAM,GAAD,OAAIlC,6CAAJ,wBAAqD0B,IAASY,MAAK,SAAAC,GACvF,GAAGA,EAASC,GACR,OAAOD,EAASE,UAJ5B,cAEUC,EAFV,OAOIpB,EAAYoB,EAAK,IAPrB,kBAQWX,GARX,4CA3BqC,kEAsCrC,WAA6BN,EAAMC,EAAOC,EAAUE,GAApD,eAAAC,EAAA,6DACIX,EAAYyB,YAAYlB,GACxBC,GAAYR,EAAY0B,eAAelB,GAF3C,SAGuBO,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMC,MAAQ,CACnFZ,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,UACRvB,OACAC,QACAG,cAELS,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAb5B,OAGUC,EAHV,OAgBIpB,EAAYoB,GAhBhB,4CAtCqC,kEAyDrC,WAA8BO,EAAKC,EAAKC,EAAQC,EAAWC,EAAQC,EAAWC,GAA9E,eAAAzB,EAAA,sEACuBI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMC,MAAQ,CACnFZ,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,WACRC,IAAKO,SAASP,GACdC,IAAKO,WAAWP,GAChBC,SACAC,YACAC,SACAC,YACAC,cAELjB,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAf5B,OACUC,EADV,OAkBIpB,EAAYoB,GAlBhB,4CAzDqC,kEA8ErC,4BAAAZ,EAAA,6DACUC,EAAOzB,EAAKoD,UAClBpC,EAAY,MAFhB,kBAGWS,GAHX,4CA9EqC,kEAoFrC,4BAAAD,EAAA,sEACuBI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMC,MAAQ,CACnFZ,OAAQ,WACTG,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAL5B,qBAQUV,EAAOZ,EAAYwC,SACzBrC,EAAY,MAThB,kBAUWS,GAVX,4CApFqC,kEAiGrC,4BAAAD,EAAA,sEACuBI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMC,MAAQ,CACnFZ,OAAQ,OACRC,KAAMrB,KAAKsB,UAAU,CAACW,OAAQ,WAC/BV,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAN5B,OACUC,EADV,OASIpB,EAAYoB,GAThB,4CAjGqC,kEA6GrC,4BAAAZ,EAAA,sEACuBI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMC,MAAQ,CACnFZ,OAAQ,OACRC,KAAMrB,KAAKsB,UAAU,CAACW,OAAQ,YAC/BV,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAN5B,OACUC,EADV,OASIpB,EAAYoB,GAThB,4CA7GqC,kEAyHrC,4BAAAZ,EAAA,sEACuBI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMC,MAAQ,CACnFZ,OAAQ,OACRC,KAAMrB,KAAKsB,UAAU,CAACW,OAAQ,WAC/BV,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAN5B,OACUC,EADV,OASIpB,EAAYoB,GAThB,4CAzHqC,sBAqIrCkB,qBAAU,WACN,IAAMC,EAAcvD,EAAKwD,mBAAL,+BAAAhC,EAAA,MAAwB,WAAMiC,GAAN,eAAAjC,EAAA,yDACpCiC,EADoC,gBAEpC9C,eAAe+C,QAFqB,0BAG7B3C,EAH6B,iCAIjBa,MAAM,GAAD,OAAIlC,6CAAJ,wBAAqD+D,EAAKrC,QAASY,MAAK,SAAAC,GAC5F,GAAGA,EAASC,GACR,OAAOD,EAASE,UANY,OAI9BC,EAJ8B,OASpCpB,EAAYoB,EAAK,IACjBzB,eAAegD,QAAQ,cAAelD,KAAKsB,UAAU0B,IAVjB,QAYxC3C,EAAe2C,GAZyB,4CAAxB,uDAepB,OADAvC,GAAW,GACJqC,IACR,IAEHD,qBAAU,WACNvC,EAAWJ,eAAegD,QAAQ,WAAYlD,KAAKsB,UAAUhB,IACvDJ,eAAe+C,UACtB,CAAC3C,IAEJ,IAAM6C,EAAQ,CACV/C,cACAE,WACA8C,aAhKiC,oDAiKjCC,UAjKiC,8CAkKjCC,WAlKiC,2CAmKjCC,WAnKiC,2CAoKjCC,cApKiC,kDAqKjCC,eArKiC,wDAsKjCC,YAtKiC,2CAuKjCC,gBAvKiC,2CAwKjCC,aAxKiC,4CA2KrC,OACI,cAACpE,EAAYqE,SAAb,CAAsBV,MAAOA,EAA7B,UACM3C,GAAWV,I,mBClLlB,SAASgE,IAAa,IAAD,EAEE/D,mBAAS,IAFX,mBAEjBY,EAFiB,KAEVoD,EAFU,OAGQhE,mBAAS,IAHjB,mBAGjBa,EAHiB,KAGPoD,EAHO,OAIEjE,mBAAS,IAJX,mBAIVkE,GAJU,aAKMlE,oBAAS,GALf,mBAKRU,GALQ,aAMMd,IAAvB0D,EANiB,EAMjBA,UACDa,GAPkB,EAMN5D,SACF6D,eAPQ,4CASvB,sBAAApD,EAAA,kEAEOkD,EAAS,aACTxD,GAAW,GACPE,GAAUC,EAJrB,qBAKiB,sBALjB,uBAOayC,EAAU1C,EAAOC,GAP9B,OAQOsD,EAAQE,KAAK,cARpB,kDAUOH,EAAS,EAAD,IAVf,QAYGxD,GAAW,GAZd,2DATuB,sBAyBxB,OACI,gCACI,uBAAO0C,MAAOxC,EAAO0D,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOpB,UACtD,uBACA,uBAAOtC,KAAK,WAAWsC,MAAOvC,EAAUyD,SAAU,SAAAC,GAAC,OAAIN,EAAYM,EAAEC,OAAOpB,UAC5E,wBAAQqB,QA9BQ,2CA8BhB,oBACA,oDACqB,cAAC,IAAD,CAAMC,GAAG,YAAT,4BClC1B,SAASC,IACZ,OACI,gCACI,6CACA,cAACZ,EAAD,O,qBCDL,SAASa,IAAoB,IAAD,EACP5E,mBAAS,IADF,mBACxBW,EADwB,KAClBkE,EADkB,OAEL7E,mBAAS,IAFJ,mBAExBY,EAFwB,KAEjBoD,EAFiB,OAGChE,mBAAS,IAHV,mBAGxBa,EAHwB,KAGdoD,EAHc,OAIejE,mBAAS,IAJxB,mBAIxB8E,EAJwB,KAIPC,EAJO,OAKP/E,mBAAS,IALF,mBAKxBc,EALwB,KAKlBkE,EALkB,OAMDhF,mBAAS,IANR,mBAMxBe,EANwB,KAMfkE,EANe,OAOLjF,mBAAS,IAPJ,mBAOjBkE,GAPiB,aAQDlE,oBAAS,GARR,mBAQxBS,EARwB,KAQfC,EARe,KASxB2C,EAAgBzD,IAAhByD,aACDc,EAAUC,cAVe,4CAa/B,sBAAApD,EAAA,kEAEQkD,EAAS,cACTxD,GAAW,GACPC,GAASC,GAAUC,GAAaiE,GAAoBhE,GAASC,EAJzE,qBAKiB,wBALjB,UAMkBF,IAAaiE,EAN/B,qBAOkB,yBAPlB,wBASczB,EAAa1C,EAAMC,EAAOC,EAAUC,EAAMC,GATxD,QAUQoD,EAAQE,KAAK,cAVrB,kDAYQH,EAAS,EAAD,IAZhB,QAcIxD,GAAW,GAdf,2DAb+B,sBA8B/B,OACI,wCAEI,uBAAOI,KAAK,QAAQH,KAAK,OAAO8D,QAAS,kBAAMO,EAAQ,gBAF3D,aAGI,uBAAOlE,KAAK,QAAQH,KAAK,OAAO8D,QAAS,kBAAMO,EAAQ,eAH3D,YAII,uBAJJ,YAKa,uBAAO5B,MAAOrC,EAASuD,SAAU,SAAAC,GAAC,OAAIU,EAAWV,EAAEC,OAAOpB,UACnE,uBANJ,SAOU,uBAAOA,MAAOzC,EAAM2D,SAAU,SAAAC,GAAC,OAAIM,EAAQN,EAAEC,OAAOpB,UAC1D,uBARJ,UASW,uBAAOA,MAAOxC,EAAO0D,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOpB,UAC7D,uBAVJ,aAWc,uBAAOtC,KAAK,WAAWsC,MAAOvC,EAAUyD,SAAU,SAAAC,GAAC,OAAIN,EAAYM,EAAEC,OAAOpB,UACtF,uBAZJ,qBAasB,uBAAOtC,KAAK,WAAWsC,MAAO0B,EAAiBR,SAAU,SAAAC,GAAC,OAAIQ,EAAmBR,EAAEC,OAAOpB,UAC5G,uBACA,wBAAQ8B,SAAUzE,EAASgE,QA9CJ,2CA8CvB,oBACA,4DAC6B,cAAC,IAAD,CAAMC,GAAG,SAAT,0BCnDlC,SAASS,IACZ,OACI,gCACI,0CACA,cAACP,EAAD,OCDL,SAASQ,IAAe,IAAD,EACQxF,IAA3BW,EADmB,EACnBA,SAAUkD,EADS,EACTA,cADS,EAEFzD,mBAASO,EAASI,MAFhB,mBAEnBA,EAFmB,KAEbkE,EAFa,OAGA7E,mBAASO,EAASK,OAHlB,mBAGnBA,EAHmB,KAGZoD,EAHY,OAIMhE,mBAAS,IAJf,mBAInBa,EAJmB,KAIToD,EAJS,OAKoBjE,mBAAS,IAL7B,mBAKnB8E,EALmB,KAKFC,EALE,OAMI/E,mBAASO,EAASQ,SANtB,mBAMnBA,EANmB,KAMVkE,EANU,OAOAjF,mBAAS,IAPT,mBAOZkE,GAPY,aAQIlE,oBAAS,GARb,mBAQnBS,EARmB,KAQVC,EARU,KASV0D,cATU,4CAY1B,sBAAApD,EAAA,kEAEQkD,EAAS,mBACTxD,GAAW,GACPC,GAASC,GAAUG,EAJ/B,qBAKiB,wBALjB,UAMkBF,IAAaiE,EAN/B,qBAOkB,yBAPlB,wBAS2BrB,EAAc9C,EAAMC,EAAOC,EAAUE,GAThE,iEAWQmD,EAAS,EAAD,IAXhB,QAaIxD,GAAW,GAbf,2DAZ0B,sBA4B1B,OACI,4CACa,uBAAO0C,MAAOrC,EAASuD,SAAU,SAAAC,GAAC,OAAIU,EAAWV,EAAEC,OAAOpB,UACnE,uBAFJ,SAGU,uBAAOA,MAAOzC,EAAM2D,SAAU,SAAAC,GAAC,OAAIM,EAAQN,EAAEC,OAAOpB,UAC1D,uBAJJ,UAKW,uBAAOA,MAAOxC,EAAO0D,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOpB,UAC7D,uBANJ,aAOc,uBAAOtC,KAAK,WAAWsC,MAAOvC,EAAUyD,SAAU,SAAAC,GAAC,OAAIN,EAAYM,EAAEC,OAAOpB,UACtF,uBARJ,qBASsB,uBAAOtC,KAAK,WAAWsC,MAAO0B,EAAiBR,SAAU,SAAAC,GAAC,OAAIQ,EAAmBR,EAAEC,OAAOpB,UAC5G,uBACA,wBAAQ8B,SAAUzE,EAASgE,QAxCT,2CAwClB,oBACA,sDACuB,cAAC,IAAD,CAAMC,GAAG,aAAT,6BC7C5B,SAASW,IACZ,OACI,gCACI,yCACA,cAACD,EAAD,O,oBCHL,SAASE,EAAT,GAAuD,IAArBC,EAAoB,EAA/BC,UAAyBC,EAAM,6BAClDpF,EAAeT,IAAfS,YACP,OACI,cAAC,IAAD,2BAAWoF,GAAX,IAAiBC,OAAQ,SAAAC,GAAK,OAAItF,EAAc,cAACkF,EAAD,eAAeI,IAAW,cAAC,IAAD,CAAUjB,GAAG,eCHxF,SAASkB,EAAT,GAAsD,IAArBL,EAAoB,EAA/BC,UAAyBC,EAAM,+BACxB7F,IAAzBS,EADiD,EACjDA,YAAaE,EADoC,EACpCA,SAMpB,OAJAuC,qBAAU,WACN+C,QAAQC,IAAIvF,KACb,IAGC,cAAC,IAAD,2BAAWkF,GAAX,IAAiBC,OAAQ,SAAAC,GAAK,OAAKtF,GAAgBE,EAAqC,cAAC,IAAD,CAAUmE,GAAG,eAAvC,cAACa,EAAD,eAAeI,Q,OCP9E,SAASI,IAAc,IAAD,EAEUnG,IAA5BW,EAFkB,EAElBA,SAAUmD,EAFQ,EAERA,eAFQ,EAGH1D,mBAASO,EAAS4B,KAHf,mBAGlBA,EAHkB,KAGb6D,EAHa,OAIHhG,mBAASO,EAAS0F,SAAS7D,KAJxB,mBAIlBA,EAJkB,KAIb8D,EAJa,OAKGlG,mBAASO,EAAS0F,SAAS5D,QAL9B,mBAKlBA,EALkB,KAKV8D,EALU,OAMSnG,mBAASO,EAAS0F,SAAS3D,WANpC,mBAMlBA,EANkB,KAMP8D,EANO,OAOGpG,mBAASO,EAAS0F,SAAS1D,QAP9B,mBAOlBA,EAPkB,KAOV8D,EAPU,OAQSrG,mBAASO,EAAS0F,SAASzD,WARpC,mBAQlBA,EARkB,KAQP8D,EARO,OASKtG,mBAASO,EAAS0F,SAASxD,SAThC,mBASlBA,EATkB,KAST8D,EATS,OAUCvG,mBAAS,IAVV,mBAUXkE,GAVW,aAWKlE,oBAAS,GAXd,mBAWTU,GAXS,uDAazB,sBAAAM,EAAA,kEAEQkD,EAAS,oBACTxD,GAAW,GACPyB,GAAQC,GAAQC,EAAOmE,QAAWlE,EAAUkE,QAAWjE,EAAOiE,QAAWhE,EAAUgE,QAAW/D,EAAQ+D,OAJlH,qBAKiB,wBALjB,uBAOc9C,EAAevB,EAAKC,EAAKC,EAAQC,EAAWC,EAAQC,EAAWC,GAP7E,uDASQyB,EAAS,EAAD,IAThB,QAWIxD,GAAW,GAXf,0DAbyB,sBA2BzB,OACI,wCACS,uBAAO0C,MAAOjB,EAAKmC,SAAU,SAAAC,GAAC,OAAIyB,EAAOzB,EAAEC,OAAOpB,UACvD,uBAFJ,QAGS,uBAAOA,MAAOhB,EAAKkC,SAAU,SAAAC,GAAC,OAAI2B,EAAO3B,EAAEC,OAAOpB,UACvD,uBAJJ,UAKW,cAAC,IAAD,CAAWA,MAAOf,EAAQiC,SAAU,SAAAmC,GAAI,OAAIN,EAAUM,MAC7D,uBANJ,aAOc,cAAC,IAAD,CAAWrD,MAAOd,EAAWgC,SAAU,SAAAmC,GAAI,OAAIL,EAAaK,MACtE,uBARJ,WASY,cAAC,IAAD,CAAWrD,MAAOb,EAAQ+B,SAAU,SAAAmC,GAAI,OAAIJ,EAAUI,MAC9D,uBAVJ,cAWe,cAAC,IAAD,CAAWrD,MAAOZ,EAAW8B,SAAU,SAAAmC,GAAI,OAAIH,EAAaG,MACvE,uBAZJ,YAaa,cAAC,IAAD,CAAWrD,MAAOX,EAAS6B,SAAU,SAAAmC,GAAI,OAAIF,EAAWE,MACjE,uBACA,wBAAQhC,QA3CS,2CA2CjB,uBC7CL,SAASiC,IAAiB,IAAD,EAEK9G,IAA1BW,EAFqB,EAErBA,SAAUsD,EAFW,EAEXA,aAFW,EAGA7D,oBAAS,GAHT,mBAGrB2G,EAHqB,KAGbC,EAHa,OAIN5G,mBAAS,GAJH,mBAIrBmC,EAJqB,KAIhB6D,EAJgB,OAKJhG,mBAAS,IALL,mBAKrB6G,EALqB,KAKfC,EALe,OAME9G,mBAAS,IANX,mBAMrB+G,EANqB,KAMZC,EANY,OAOIhH,mBAAS,IAPb,mBAOrBiH,EAPqB,KAOXC,EAPW,OAQQlH,mBAAS,IARjB,mBAQrBmH,EARqB,KAQTC,EARS,OASIpH,mBAAS,IATb,mBASrBqH,EATqB,KASXC,EATW,OAUItH,mBAAS,IAVb,mBAUrBuH,EAVqB,KAUXC,EAVW,OAWIxH,mBAAS,IAXb,mBAWXyH,GAXW,aAYIzH,mBAAS,IAZb,mBAYX0H,GAZW,aAaE1H,oBAAS,GAbX,mBAaZU,GAbY,aAcFV,qBAdE,mBAcdkE,GAdc,uDA+C5B,WAAiCyD,GAAjC,eAAA3G,EAAA,sEAEQkD,EAAS,wBACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAM+E,SAAW,CACtF1F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,QACRyF,iBAELnG,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQoF,EAAWpF,GACXgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,mBAlBjB,2DA/C4B,oEAqE5B,WAAiCyD,GAAjC,eAAA3G,EAAA,sEAEQkD,EAAS,yBACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAM+E,SAAW,CACtF1F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,SACRyF,iBAELnG,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQoF,EAAWpF,GACXgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,oBAlBjB,2DArE4B,oEA2F5B,WAAiCyD,GAAjC,eAAA3G,EAAA,sEAEQkD,EAAS,+BACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMiF,UAAY,CACvF5F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,SACRyF,iBAELnG,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQsF,EAAYtF,GACZgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,0BAlBjB,2DA3F4B,oEAiH5B,WAAkCyD,GAAlC,eAAA3G,EAAA,sEAEQkD,EAAS,+BACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMiF,UAAY,CACvF5F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,UACRyF,iBAELnG,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQsF,EAAYtF,GACZgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,2BAlBjB,2DAjH4B,oEAuI5B,WAAqCyD,GAArC,eAAA3G,EAAA,sEAEQkD,EAAS,uCACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMmF,YAAc,CACzF9F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,UACRyF,iBAELnG,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQwF,EAAcxF,GACdgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,mCAlBjB,2DAvI4B,oEA6J5B,WAAiCyD,GAAjC,SAAA3G,EAAA,sEAEQkD,EAAS,+BACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMqF,UAAY,CACvFhG,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,SACRyF,iBAELnG,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,8BAgBYuC,EAAS,gBACTxD,GAAW,GAjBvB,UAkBkBmD,IAlBlB,0DAoBYK,EAAS,EAAD,IApBpB,0DAuBQA,EAAS,0BAvBjB,kEA7J4B,oEAwL5B,WAAkCyD,GAAlC,eAAA3G,EAAA,sEAEQkD,EAAS,+BACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMqF,UAAY,CACvFhG,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,UACRyF,iBAELnG,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQsF,EAAYtF,GACZgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,2BAlBjB,2DAxL4B,sBAuR5B,OAvQApB,oBAAS,sBAAC,4BAAA9B,EAAA,sEACaI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAM4F,MAAOpG,MAAK,SAAAC,GACvF,GAAGA,EAASC,GACR,OAAOD,EAASE,UAHlB,OACAC,EADA,OAMNoE,EAAOpE,EAAKO,KACZ2E,EAAQlF,EAAKiF,MACbG,EAAWpF,EAAKmF,SAChBG,EAAYtF,EAAKqF,UACjBG,EAAcxF,EAAKuF,YACnBG,EAAY1F,EAAKyF,UACjBG,EAAY5F,EAAK2F,UACjBE,EAAY7F,EAAKiG,UACjBH,EAAY9F,EAAKkG,UACjBpH,GAAW,GAfL,4CAgBP,CAACH,EAAUoG,IAGd7D,oBAAS,sBAAC,sBAAA9B,EAAA,yDACFmB,EADE,iCAGE+B,EAAS,gBACTxD,GAAW,GAJb,SAKQmD,IALR,uDAOEK,EAAS,2BAPX,yDAUP,CAAC/B,IA2OA,gCACI,sCA1EG0E,EAAKkB,KAAI,SAAAC,GACZ,OACI,gCACI,6BAAKA,EAASrH,OACd,6BAAKqH,EAAS/B,SAAS1D,SACvB,wBAAQkC,QAAS,kBApNL,2CAoNWwD,CAAkBD,EAASE,KAAlD,yBAuER,uBACA,yCAjEGnB,EAAQgB,KAAI,SAAAC,GACf,OACI,gCACI,6BAAKA,EAASrH,OACd,6BAAKqH,EAAS/B,SAAS1D,SACvB,wBAAQkC,QAAS,kBAhOL,4CAgOW0D,CAAkBH,EAASE,KAAlD,0BA8DR,0CAvDGjB,EAASc,KAAI,SAAAC,GAChB,OACI,gCACI,6BAAKA,EAASrH,OACd,6BAAKqH,EAAS/B,SAAS1D,SACvB,wBAAQkC,QAAS,kBA5OL,4CA4OW2D,CAAkBJ,EAASE,KAAlD,oBACA,wBAAQzD,QAAS,kBA7OL,4CA6OW4D,CAAmBL,EAASE,KAAnD,2BAmDR,4CA5CGf,EAAWY,KAAI,SAAAC,GAClB,OACI,gCACI,6BAAKA,EAASrH,OACd,6BAAKqH,EAAS/B,SAAS1D,SACvB,wBAAQkC,QAAS,kBAzPL,4CAyPW6D,CAAsBN,EAASE,KAAtD,2BAyCR,0CAlCGb,EAASU,KAAI,SAAAC,GAChB,OACI,gCACI,6BAAKA,EAASrH,OACd,6BAAKqH,EAAS/B,SAAS1D,SACvB,wBAAQkC,QAAS,kBArQL,4CAqQW8D,CAAkBP,EAASE,KAAlD,oBACA,wBAAQzD,QAAS,kBAtQL,4CAsQW+D,CAAmBR,EAASE,KAAnD,2BA8BR,0CAvBGX,EAASQ,KAAI,SAAAC,GAChB,OACI,gCACI,6BAAKA,EAASrH,OACd,6BAAKqH,EAAS/B,SAAS1D,kBCjRpC,SAASkG,IAAgB,IAAD,EAEM7I,IAA1BW,EAFoB,EAEpBA,SAAUsD,EAFU,EAEVA,aAFU,EAGC7D,oBAAS,GAHV,mBAGpB2G,EAHoB,KAGZC,EAHY,OAIL5G,mBAAS,GAJJ,mBAIpBmC,EAJoB,KAIf6D,EAJe,OAKHhG,mBAAS,IALN,mBAKpB6G,EALoB,KAKdC,EALc,OAMG9G,mBAAS,IANZ,mBAMpB0I,EANoB,KAMXC,EANW,OAOK3I,mBAAS,IAPd,mBAOpBiH,EAPoB,KAOVC,EAPU,OAQSlH,mBAAS,IARlB,mBAQpBmH,EARoB,KAQRC,EARQ,OASGpH,mBAAS,IATZ,mBASpB4I,EAToB,KASXC,EATW,OAUK7I,mBAAS,IAVd,mBAUVyH,GAVU,aAWKzH,mBAAS,IAXd,mBAWV0H,GAXU,aAYK1H,mBAAS,IAZd,mBAYpBuH,EAZoB,KAYVC,EAZU,OAaGxH,oBAAS,GAbZ,mBAaXU,GAbW,aAcDV,qBAdC,mBAcbkE,GAda,uDA8C3B,WAAiC4E,GAAjC,eAAA9H,EAAA,sEAEQkD,EAAS,wBACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAM0G,SAAW,CACtFrH,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,QACR4G,kBAELtH,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQ+G,EAAW/G,GACXgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,mBAlBjB,2DA9C2B,oEAoE3B,WAAiC4E,GAAjC,eAAA9H,EAAA,sEAEQkD,EAAS,yBACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAM0G,SAAW,CACtFrH,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,SACR4G,kBAELtH,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQ+G,EAAW/G,GACXgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,oBAlBjB,2DApE2B,oEA0F3B,WAAiC4E,GAAjC,eAAA9H,EAAA,sEAEQkD,EAAS,+BACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMiF,UAAY,CACvF5F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,SACR4G,kBAELtH,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQsF,EAAYtF,GACZgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,0BAlBjB,2DA1F2B,oEAgH3B,WAAkC4E,GAAlC,eAAA9H,EAAA,sEAEQkD,EAAS,+BACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMiF,UAAY,CACvF5F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,UACR4G,kBAELtH,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQsF,EAAYtF,GACZgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,2BAlBjB,2DAhH2B,oEAsI3B,WAAmC4E,GAAnC,eAAA9H,EAAA,sEAEQkD,EAAS,wBACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMmF,YAAc,CACzF9F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,QACR4G,kBAELtH,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQwF,EAAcxF,GACdgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,mBAlBjB,2DAtI2B,oEA4J3B,WAAqC4E,GAArC,eAAA9H,EAAA,sEAEQkD,EAAS,uCACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAMmF,YAAc,CACzF9F,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,UACR4G,kBAELtH,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQwF,EAAcxF,GACdgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,mCAlBjB,2DA5J2B,oEAkL3B,WAAkC4E,GAAlC,eAAA9H,EAAA,sEAEQkD,EAAS,gCACTxD,GAAW,GAHnB,SAI2BU,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAM4G,SAAW,CACtFvH,OAAQ,MACRC,KAAMrB,KAAKsB,UAAU,CACjBW,OAAQ,UACR4G,kBAELtH,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,UAZhC,OAIcC,EAJd,OAeQiH,EAAWjH,GACXgF,GAAWD,GAhBnB,kDAkBQzC,EAAS,0BAlBjB,2DAlL2B,sBAkR3B,OAlQApB,oBAAS,sBAAC,4BAAA9B,EAAA,sEACaI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAM4F,MAAOpG,MAAK,SAAAC,GACvF,GAAGA,EAASC,GACR,OAAOD,EAASE,UAHlB,OACAC,EADA,OAMNoE,EAAOpE,EAAKO,KACZ2E,EAAQlF,EAAKiF,MACb8B,EAAW/G,EAAK8G,SAChBxB,EAAYtF,EAAKqF,UACjBG,EAAcxF,EAAKuF,YACnB0B,EAAWjH,EAAKgH,SAChBnB,EAAY7F,EAAKiG,UACjBH,EAAY9F,EAAKkG,UACjBN,EAAY5F,EAAK2F,UACjB7G,GAAW,GAfL,4CAgBP,CAACH,EAAUoG,IAEd7D,oBAAS,sBAAC,sBAAA9B,EAAA,yDACFmB,EADE,iCAGE+B,EAAS,gBACTxD,GAAW,GAJb,SAKQmD,IALR,uDAOEK,EAAS,2BAPX,yDAUP,CAAC/B,IAuOA,gCACI,sCA1EG0E,EAAKkB,KAAI,SAAAgB,GACZ,OACI,gCACI,6BAAKA,EAAUpI,OACf,6BAAKoI,EAAU9C,SAAS1D,SACxB,wBAAQkC,QAAS,kBA/MN,2CA+MYuE,CAAkBD,EAAUb,KAAnD,yBAuER,uBACA,yCAjEGQ,EAAQX,KAAI,SAAAgB,GACf,OACI,gCACI,6BAAKA,EAAUpI,OACf,6BAAKoI,EAAU9C,SAAS1D,SACxB,wBAAQkC,QAAS,kBA3NN,4CA2NYwE,CAAkBF,EAAUb,KAAnD,yBA8DR,0CAvDGjB,EAASc,KAAI,SAAAgB,GAChB,OACI,gCACI,6BAAKA,EAAUpI,OACf,6BAAKoI,EAAU9C,SAAS1D,SACxB,wBAAQkC,QAAS,kBAvON,4CAuOYyE,CAAkBH,EAAUb,KAAnD,oBACA,wBAAQzD,QAAS,kBAxON,4CAwOY0E,CAAmBJ,EAAUb,KAApD,2BAmDR,4CA5CGf,EAAWY,KAAI,SAAAgB,GAClB,OACI,gCACI,6BAAKA,EAAUpI,OACf,6BAAKoI,EAAU9C,SAAS1D,SACxB,wBAAQkC,QAAS,kBApPN,4CAoPY2E,CAAoBL,EAAUb,KAArD,mBACA,wBAAQzD,QAAS,kBArPN,4CAqPY6D,CAAsBS,EAAUb,KAAvD,2BAwCR,yCAjCGU,EAAQb,KAAI,SAAAgB,GACf,OACI,gCACI,6BAAKA,EAAUpI,OACf,6BAAKoI,EAAU9C,SAAS1D,SACxB,wBAAQkC,QAAS,kBAjQN,4CAiQY4E,CAAmBN,EAAUb,KAApD,2BA8BR,0CAvBGX,EAASQ,KAAI,SAAAgB,GAChB,OACI,gCACI,6BAAKA,EAAUpI,OACf,6BAAKoI,EAAU9C,SAAS1D,kBCzQrC,SAAS+G,IAAkB,IAAD,EAEqB1J,IAA3CW,EAFsB,EAEtBA,SAAUqD,EAFY,EAEZA,gBAAiBC,EAFL,EAEKA,aAFL,EAGC7D,oBAAS,GAHV,mBAGtBS,EAHsB,KAGbC,EAHa,OAIHV,qBAJG,mBAIfkE,GAJe,WAKbE,cALa,4CAQ7B,sBAAApD,EAAA,sEAEQkD,EAAS,uBACTxD,GAAW,GAHnB,SAIckD,IAJd,uDAMQM,EAAS,EAAD,IANhB,QAQIxD,GAAW,GARf,0DAR6B,kEAmB7B,sBAAAM,EAAA,sEAEQkD,EAAS,gBACTxD,GAAW,GAHnB,SAIcmD,IAJd,uDAMQK,EAAS,EAAD,IANhB,QAQIxD,GAAW,GARf,0DAnB6B,sBA+B7B,OACI,gCACuB,cAAlBH,EAASO,MAAwB,cAAC4F,EAAD,IACf,aAAlBnG,EAASO,MAAuB,cAAC2H,EAAD,IACjC,wBAAQvD,SAAUzE,EAASgE,QAnCN,2CAmCrB,+BACA,wBAAQS,SAAUzE,EAASgE,QApCN,2CAoCrB,8BCrCL,SAAS8E,IAAmB,IAAD,EAEE3J,IAAzBW,EAFuB,EAEvBA,SAAUoD,EAFa,EAEbA,YAFa,EAGA3D,oBAAS,GAHT,mBAGvBS,EAHuB,KAGdC,EAHc,OAIJV,qBAJI,mBAIhBkE,GAJgB,WAKdE,cALc,4CAQ9B,wCAAApD,EAAA,kEAEQkD,EAAS,kBACTxD,GAAW,GAHnB,EAIqEH,EAAS0F,SAA/D7D,EAJf,EAIeA,IAAKC,EAJpB,EAIoBA,OAAQC,EAJ5B,EAI4BA,UAAWC,EAJvC,EAIuCA,OAAQC,EAJ/C,EAI+CA,UAAWC,EAJ1D,EAI0DA,QAC9CL,GAAQC,EAAOmE,QAAWlE,EAAUkE,QAAWjE,EAAOiE,QAAWhE,EAAUgE,QAAW/D,EAAQ+D,OAL1G,qBAMiB,wBANjB,uBAQc7C,IARd,yDAUQO,EAAS,EAAD,IAVhB,QAYIxD,GAAW,GAZf,2DAR8B,sBAuB9B,OACI,gCACI,cAACqF,EAAD,IACA,wBAAQb,SAAUzE,EAASgE,QA1BL,2CA0BtB,6BCxBL,SAAS+E,IAAY,IAAD,EAEoB5J,IAApCW,EAFgB,EAEhBA,SAAUgD,EAFM,EAENA,WAAYC,EAFN,EAEMA,WAFN,EAGOxD,oBAAS,GAHhB,mBAGhBS,EAHgB,KAGPC,EAHO,OAIGV,qBAJH,mBAITkE,GAJS,WAKjBC,EAAUC,cALO,4CAQvB,sBAAApD,EAAA,sEAEQkD,EAAS,cACTxD,GAAW,GAHnB,SAIc6C,IAJd,OAKQY,EAAQE,KAAK,KALrB,gDAOQH,EAAS,qBAPjB,QASIxD,GAAW,GATf,0DARuB,kEAoBvB,sBAAAM,EAAA,sEAEQkD,EAAS,wBACTxD,GAAW,GAHnB,SAIc8C,IAJd,OAKQW,EAAQE,KAAK,KALrB,gDAOQH,EAAS,EAAD,IAPhB,QASIxD,GAAW,GATf,0DApBuB,sBAiCvB,OACI,gCACI,2CACCH,GACG,iCACMA,EAASkJ,WAAa,cAACF,EAAD,IACvBhJ,EAASkJ,WAAa,cAACH,EAAD,IACvB,wBAAQpE,SAAUzE,EAASgE,QAxCpB,2CAwCP,oBACA,wBAAQS,SAAUzE,EAASgE,QAzCpB,2CAyCP,+BC5Cb,SAASiF,EAAT,GAA6D,IAArBnE,EAAoB,EAA/BC,UAAyBC,EAAM,+BAC/B7F,IAAzBS,EADwD,EACxDA,YAAaE,EAD2C,EAC3CA,SACpB,OACI,cAAC,IAAD,2BAAWkF,GAAX,IAAiBC,OAAQ,SAAAC,GACjB,OAAItF,GAAgBE,EAETA,EAASkJ,UAGT,cAAClE,EAAD,eAAeI,IAFf,cAAC,IAAD,CAAUjB,GAAG,uBAFb,cAAC,IAAD,CAAUA,GAAG,e,qBCLlCiF,E,OAASC,EAAGC,QAAH,UAAc3K,6CAAd,eAER,SAAS4K,IAAY,IAEjBvJ,EAAYX,IAAZW,SAFgB,EAGWP,mBAAS,IAHpB,mBAGhB+J,EAHgB,KAGLC,EAHK,OAIChK,mBAAS,IAJV,mBAIhBiK,EAJgB,KAIVC,EAJU,OAKSlK,mBAAS,IALlB,mBAKhBmK,EALgB,KAKNC,EALM,OAMOpK,mBAAS,IANhB,mBAMhBqK,EANgB,KAMPC,EANO,OAOGtK,mBAAS,IAPZ,mBAOTkE,GAPS,uDA2BvB,WAA+B+F,GAA/B,eAAAjJ,EAAA,+EAE2BI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwC+K,EAAKjI,MAAMmI,WAAY3I,MAAK,SAAAC,GACxF,GAAGA,EAASC,GACR,OAAOD,EAASE,UAJhC,OAEcC,EAFd,OAOQsI,EAAQD,GACRG,EAAYxI,GARpB,gDAUQsC,EAAS,0BAVjB,0DA3BuB,sBAyCvB,SAASqG,IACLZ,EAAOa,KAAK,UAAW,CAACC,SAAUR,EAAKQ,SAAUC,YAAaT,EAAKS,YAC/DC,OAAQV,EAAK/B,GAAImC,YACrBC,EAAW,IAmCf,OAtEAX,EAAOiB,GAAG,cAAc,SAAAP,GAAO,OAAID,EAAY,GAAD,mBAAKD,GAAL,CAAeE,QAC7DV,EAAOiB,GAAG,WAAW,SAAAP,GAAO,OAAID,EAAY,GAAD,mBAAKD,GAAL,CAAeE,QAE1DvH,oBAAS,sBAAC,4BAAA9B,EAAA,+EAEiBI,MAAM,GAAD,OAAIlC,8CAAJ,OAAwCqB,EAASyB,MAAM6I,QAASrJ,MAAK,SAAAC,GACzF,GAAGA,EAASC,GACR,OAAOD,EAASE,UAJtB,OAEIC,EAFJ,OAOF+H,EAAOa,KAAK,OAAQ,CAACM,OAAQvK,EAAS2H,KACtC8B,EAAapI,GACbsI,EAAQtI,EAAK,IAAM,IATjB,gDAWFsC,EAAS,4BAXP,yDAaP,CAAC3D,IAuDA,gCAhCOwJ,EAAUhC,KAAI,SAAAkC,GACjB,OACI,gCACI,6BAAKA,EAAKc,gBACV,wBAAQtG,QAAS,kBApDV,2CAoDgBuG,CAAgBf,IAAvC,0BA8BR,uBAtBA,gCACI,6BAAKA,EAAKc,gBACV,8BACKZ,EAASpC,KAAI,SAAAsC,GACV,OACI,gCACI,uBACCA,EAAQA,gBAKzB,uBACA,uBAAOjH,MAAOiH,EAAS/F,SAAU,SAAAC,GAAC,OAAI+F,EAAW/F,EAAEC,OAAOpB,UAC1D,wBAAQqB,QAAS8F,EAAjB,wBC7CDU,MAjBf,WACE,OACE,cAAC,IAAD,UACI,cAACnL,EAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoL,OAAK,EAACC,KAAK,IAAI3F,UAAW3G,IACjC,cAAC+G,EAAD,CAAauF,KAAK,YAAY3F,UAAWL,IACzC,cAACS,EAAD,CAAauF,KAAK,SAAS3F,UAAWb,IACtC,cAACW,EAAD,CAAc6F,KAAK,WAAW3F,UAAWH,IACzC,cAACC,EAAD,CAAc6F,KAAK,aAAa3F,UAAWgE,IAC3C,cAACE,EAAD,CAAoByB,KAAK,SAAS3F,UAAWsE,YChB9CsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9J,MAAK,YAAkD,IAA/C+J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASlG,OACP,cAAC,IAAMmG,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.767fd629.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function HomePage() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    )\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport default app;","import React, {useContext, useState, useEffect} from 'react';\r\nimport {auth} from '../firebase';\r\nimport firebase from 'firebase/app';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentUser')) || null);\r\n    const [userData, setUserData] = useState(JSON.parse(sessionStorage.getItem('userData')) || null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    async function registerUser(name, email, password, type, worldId) {\r\n        const fire = auth.createUserWithEmailAndPassword(email, password);\r\n        const destination = type === 'applicant' ? `${process.env.REACT_APP_BACKEND_URL}/worlds/${worldId}/applicants`\r\n            : `${process.env.REACT_APP_BACKEND_URL}/worlds/${worldId}/businesses`;\r\n        const data = await fetch(destination, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                worldId\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n        return fire;\r\n    }\r\n\r\n    async function loginUser(email, password){\r\n        const fire = auth.signInWithEmailAndPassword(email, password);\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data[0]);\r\n        return fire;\r\n    }\r\n\r\n    async function updateAccount(name, email, password, worldId){\r\n        currentUser.updateEmail(email);\r\n        password && currentUser.updatePassword(password);\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                action: 'account',\r\n                name,\r\n                email,\r\n                worldId\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function updateFeatures(cap, gpa, majors, standings, skills, interests, courses){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                action: 'features',\r\n                cap: parseInt(cap),\r\n                gpa: parseFloat(gpa),\r\n                majors,\r\n                standings,\r\n                skills,\r\n                interests,\r\n                courses\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function logoutUser(){\r\n        const fire = auth.signOut();\r\n        setUserData(null);\r\n        return fire;\r\n    }\r\n\r\n    async function deleteUser(){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        const fire = currentUser.delete();\r\n        setUserData(null);\r\n        return fire;\r\n    }\r\n\r\n    async function joinCluster(){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'join'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function leaveCluster(){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'leave'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function peelFromCluster(){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'peel'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async user => {\r\n            if(!user){\r\n                sessionStorage.clear();\r\n            } else if(!userData){\r\n                const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users?email=${user.email}`).then(response => {\r\n                    if(response.ok){\r\n                        return response.json();\r\n                    }\r\n                });\r\n                setUserData(data[0]);\r\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n            }\r\n            setCurrentUser(user);\r\n        })\r\n        setLoading(false)\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        userData ? sessionStorage.setItem('userData', JSON.stringify(userData))\r\n            : sessionStorage.clear();\r\n    }, [userData]);\r\n\r\n    const value = {\r\n        currentUser,\r\n        userData,\r\n        registerUser,\r\n        loginUser,\r\n        logoutUser,\r\n        deleteUser,\r\n        updateAccount,\r\n        updateFeatures,\r\n        joinCluster,\r\n        peelFromCluster,\r\n        leaveCluster,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport function LoginForm() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {loginUser, userData} = useAuth();\r\n    const history = useHistory();\r\n\r\n     async function handleLoginUser() {\r\n        try {\r\n            setError('Logged In');\r\n            setLoading(true);\r\n            if(!email || !password){\r\n                throw 'Fields are required';\r\n            }\r\n            await loginUser(email, password);\r\n            history.push('/dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <button onClick={handleLoginUser}>Submit</button>\r\n            <div>\r\n                Need an Account? <Link to='/register'>Register</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {LoginForm} from '../forms/LoginForm';\r\n\r\nexport function LoginPage() {\r\n    return (\r\n        <div>\r\n            <h1>Login Check</h1>\r\n            <LoginForm/>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\n\r\nexport function RegistrationForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [worldId, setWorldId] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {registerUser} = useAuth();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleRegisterUser() {\r\n        try {\r\n            setError('Registered');\r\n            setLoading(true);\r\n            if(!name || !email || !password || !confirmPassword || !type || !worldId) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await registerUser(name, email, password, type, worldId);\r\n            history.push('/dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Type:\r\n            <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\r\n            <input type='radio' name='type' onClick={() => setType('business')}/> Business\r\n            <br/>\r\n            College: <input value={worldId} onChange={e => setWorldId(e.target.value)}/>\r\n            <br/>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\r\n            <div>\r\n                Already Have an Account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {RegistrationForm} from '../forms/RegistrationForm';\r\n\r\nexport function RegistrationPage() {\r\n    return (\r\n        <div>\r\n            <h1>Register</h1>\r\n            <RegistrationForm/>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\n\r\nexport function AccountForm() {\r\n    const {userData, updateAccount} = useAuth();\r\n    const [name, setName] = useState(userData.name);\r\n    const [email, setEmail] = useState(userData.email);\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [worldId, setWorldId] = useState(userData.worldId);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleUpdateAccount() {\r\n        try {\r\n            setError('Updated Account');\r\n            setLoading(true);\r\n            if(!name || !email || !worldId) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            const data = await updateAccount(name, email, password, worldId);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            College: <input value={worldId} onChange={e => setWorldId(e.target.value)}/>\r\n            <br/>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            <button disabled={loading} onClick={handleUpdateAccount}>Submit</button>\r\n            <div>\r\n                Back to Dashboard? <Link to='/dashboard'>Dashboard</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {AccountForm} from '../forms/AccountForm';\r\n\r\nexport function AccountPage() {\r\n    return (\r\n        <div>\r\n            <h1>Account</h1>\r\n            <AccountForm/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useAuth} from '../contexts/AuthContext';\r\n\r\nexport function PrivateRoute({component: Component, ...rest}){\r\n    const {currentUser} = useAuth();\r\n    return (\r\n        <Route {...rest} render={props => currentUser ? <Component {...props}/> : <Redirect to='/login'/>}/>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useAuth} from '../contexts/AuthContext';\r\n\r\nexport function PublicRoute({component: Component, ...rest}){\r\n    const {currentUser, userData} = useAuth();\r\n\r\n    useEffect(() => {\r\n        console.log(userData);\r\n    }, [])\r\n\r\n    return (\r\n        <Route {...rest} render={props => !currentUser && !userData ? <Component {...props}/> : <Redirect to='/dashboard'/>}/>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nexport function UpdateForm() {\r\n\r\n    const {userData, updateFeatures} = useAuth();\r\n    const [cap, setCap] = useState(userData.cap);\r\n    const [gpa, setGpa] = useState(userData.features.gpa);\r\n    const [majors, setMajors] = useState(userData.features.majors);\r\n    const [standings, setStandings] = useState(userData.features.standings);\r\n    const [skills, setSkills] = useState(userData.features.skills);\r\n    const [interests, setInterests] = useState(userData.features.interests)\r\n    const [courses, setCourses] = useState(userData.features.courses)\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleUpdateFeatures() {\r\n        try {\r\n            setError('Updated Features');\r\n            setLoading(true);\r\n            if(!cap || !gpa || !majors.length || !standings.length || !skills.length || !interests.length || !courses.length) {\r\n               throw 'Fields not filled out';\r\n            }\r\n            await updateFeatures(cap, gpa, majors, standings, skills, interests, courses);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Cap: <input value={cap} onChange={e => setCap(e.target.value)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={majors} onChange={tags => setMajors(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standings} onChange={tags => setStandings(tags)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <br/>\r\n            Interests: <TagsInput value={interests} onChange={tags => setInterests(tags)}/>\r\n            <br/>\r\n            Courses: <TagsInput value={courses} onChange={tags => setCourses(tags)}/>\r\n            <br/>\r\n            <button onClick={handleUpdateFeatures}>Submit</button>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\nexport function ApplicantPanel(){\r\n\r\n    const {userData, leaveCluster} = useAuth();\r\n    const [change, setChange] = useState(false);\r\n    const [cap, setCap] = useState(1);\r\n    const [pool, setPool] = useState([]);\r\n    const [applied, setApplied] = useState([]);\r\n    const [received, setReceived] = useState([]);\r\n    const [interested, setInterested] = useState([]);\r\n    const [reviewed, setReviewed] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [declined, setDeclined] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(async () => {\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.all}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCap(data.cap);\r\n        setPool(data.pool);\r\n        setApplied(data.applied);\r\n        setReceived(data.received);\r\n        setInterested(data.interested);\r\n        setReviewed(data.reviewed);\r\n        setAccepted(data.accepted);\r\n        setDeclined(data.declined);\r\n        setRejected(data.rejected);\r\n        setLoading(false);\r\n    }, [userData, change]);\r\n\r\n\r\n    useEffect(async () => {\r\n        if(!cap){\r\n            try {\r\n                setError('Left Cluster');\r\n                setLoading(true);\r\n                await leaveCluster();\r\n            } catch(err) {\r\n                setError('Failed to leave cluster')\r\n            }\r\n        }\r\n    }, [cap])\r\n\r\n    async function handleSubmitApply(businessId){\r\n        try {\r\n            setError('Successfully Applied');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.applied}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'apply',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to apply');\r\n        }\r\n    }\r\n\r\n    async function handleCancelApply(businessId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.applied}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptReach(businessId){\r\n        try {\r\n            setError('Successfully Accepted Reach');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineReach(businessId){\r\n        try {\r\n            setError('Successfully declined reach');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineInterest(businessId){\r\n        try {\r\n            setError('Successfully declined communication');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline communication');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptOffer(businessId){\r\n        try {\r\n            setError('Successfully Accepted offer');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reviewed}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            try {\r\n                setError('Left cluster');\r\n                setLoading(true);\r\n                await leaveCluster();\r\n            } catch(err) {\r\n                setError(err);\r\n            }\r\n        } catch(err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineOffer(businessId){\r\n        try {\r\n            setError('Successfully declined offer');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reviewed}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline offer');\r\n        }\r\n    }\r\n\r\n    function renderPool(){\r\n        return pool.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleSubmitApply(business.id)}>Apply</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderApplied(){\r\n        return applied.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleCancelApply(business.id)}>Cancel</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReceived(){\r\n        return received.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleAcceptReach(business.id)}>Accept</button>\r\n                    <button onClick={() => handleDeclineReach(business.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderInterested(){\r\n        return interested.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleDeclineInterest(business.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReviewed(){\r\n        return reviewed.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleAcceptOffer(business.id)}>Accept</button>\r\n                    <button onClick={() => handleDeclineOffer(business.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderAccepted(){\r\n        return accepted.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pool</h2>\r\n            {renderPool()}\r\n            <br/>\r\n            <h2>Applied</h2>\r\n            {renderApplied()}\r\n            <h2>Received</h2>\r\n            {renderReceived()}\r\n            <h2>Interested</h2>\r\n            {renderInterested()}\r\n            <h2>Reviewed</h2>\r\n            {renderReviewed()}\r\n            <h2>Accepted</h2>\r\n            {renderAccepted()}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\nexport function BusinessPanel(){\r\n\r\n    const {userData, leaveCluster} = useAuth();\r\n    const [change, setChange] = useState(false);\r\n    const [cap, setCap] = useState(1);\r\n    const [pool, setPool] = useState([]);\r\n    const [reached, setReached] = useState([]);\r\n    const [received, setReceived] = useState([]);\r\n    const [interested, setInterested] = useState([]);\r\n    const [offered, setOffered] = useState([]);\r\n    const [declined, setDeclined] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(async () => {\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.all}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCap(data.cap);\r\n        setPool(data.pool);\r\n        setReached(data.reached);\r\n        setReceived(data.received);\r\n        setInterested(data.interested);\r\n        setOffered(data.offered);\r\n        setDeclined(data.declined);\r\n        setRejected(data.rejected);\r\n        setAccepted(data.accepted);\r\n        setLoading(false);\r\n    }, [userData, change]);\r\n\r\n    useEffect(async () => {\r\n        if(!cap){\r\n            try {\r\n                setError('Left cluster');\r\n                setLoading(true);\r\n                await leaveCluster()\r\n            } catch (err) {\r\n                setError('failed to leave cluster')\r\n            }\r\n        }\r\n    }, [cap])\r\n\r\n    async function handleSubmitReach(applicantId){\r\n        try {\r\n            setError('Successfully Reached');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reached}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'reach',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReached(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to reach');\r\n        }\r\n    }\r\n\r\n    async function handleCancelReach(applicantId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reached}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReached(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptApply(applicantId){\r\n        try {\r\n            setError('Successfully Accepted Apply');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept apply');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineApply(applicantId){\r\n        try {\r\n            setError('Successfully declined apply');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline apply');\r\n        }\r\n    }\r\n\r\n    async function handleOfferInterest(applicantId){\r\n        try {\r\n            setError('Successfully offered');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'offer',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to offer');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineInterest(applicantId){\r\n        try {\r\n            setError('Successfully declined communication');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline communication');\r\n        }\r\n    }\r\n\r\n    async function handleRescindOffer(applicantId){\r\n        try {\r\n            setError('Successfully rescinded offer');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.offered}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'rescind',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setOffered(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n\r\n    function renderPool(){\r\n        return pool.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleSubmitReach(applicant.id)}>Reach</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReached(){\r\n        return reached.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleCancelReach(applicant.id)}>Reach</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReceived(){\r\n        return received.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleAcceptApply(applicant.id)}>Accept</button>\r\n                    <button onClick={() => handleDeclineApply(applicant.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderInterested(){\r\n        return interested.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleOfferInterest(applicant.id)}>Offer</button>\r\n                    <button onClick={() => handleDeclineInterest(applicant.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderOffered(){\r\n        return offered.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleRescindOffer(applicant.id)}>Rescind</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderAccepted(){\r\n        return accepted.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pool</h2>\r\n            {renderPool()}\r\n            <br/>\r\n            <h2>Reached</h2>\r\n            {renderReached()}\r\n            <h2>Received</h2>\r\n            {renderReceived()}\r\n            <h2>Interested</h2>\r\n            {renderInterested()}\r\n            <h2>Offered</h2>\r\n            {renderOffered()}\r\n            <h2>Accepted</h2>\r\n            {renderAccepted()}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../../contexts/AuthContext';\r\nimport {ApplicantPanel} from '../../panels/ApplicantPanel';\r\nimport {BusinessPanel} from '../../panels/BusinessPanel';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function ActiveDashboard(){\r\n\r\n    const {userData, peelFromCluster, leaveCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handlePeelFromCluster(){\r\n        try {\r\n            setError('Peeled From Cluster');\r\n            setLoading(true);\r\n            await peelFromCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    async function handleLeaveCluster(){\r\n        try {\r\n            setError('Left Cluster');\r\n            setLoading(true);\r\n            await leaveCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {userData.type === 'applicant' && <ApplicantPanel/>}\r\n            {userData.type === 'business' && <BusinessPanel/>}\r\n            <button disabled={loading} onClick={handlePeelFromCluster}>Peel From Cluster</button>\r\n            <button disabled={loading} onClick={handleLeaveCluster}>Leave Cluster</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport {useAuth} from '../../../contexts/AuthContext';\r\nimport {UpdateForm} from '../../forms/UpdateForm';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function DormantDashboard(){\r\n\r\n    const {userData, joinCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleJoinCluster(){\r\n        try {\r\n            setError('Joined Cluster');\r\n            setLoading(true);\r\n            const {gpa, majors, standings, skills, interests, courses} = userData.features;\r\n            if(!gpa || !majors.length || !standings.length || !skills.length || !interests.length || !courses.length) {\r\n               throw 'Fields not filled out';\r\n            }\r\n            await joinCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UpdateForm/>\r\n            <button disabled={loading} onClick={handleJoinCluster}>Join Cluster</button>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {UpdateForm} from '../forms/UpdateForm';\r\nimport {ActiveDashboard} from './sub-pages/ActiveDashboard';\r\nimport {DormantDashboard} from './sub-pages/DormantDashboard';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function Dashboard(){\r\n\r\n    const {userData, logoutUser, deleteUser} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleLogoutUser(){\r\n        try {\r\n            setError('Logged Out');\r\n            setLoading(true);\r\n            await logoutUser();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    async function handleDeleteUser(){\r\n        try {\r\n            setError('Successfully deleted');\r\n            setLoading(true);\r\n            await deleteUser();\r\n            history.push('/');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n            {userData &&\r\n                <div>\r\n                    {!userData.clusterId && <DormantDashboard/>}\r\n                    {userData.clusterId && <ActiveDashboard/>}\r\n                    <button disabled={loading} onClick={handleLogoutUser}>Logout</button>\r\n                    <button disabled={loading} onClick={handleDeleteUser}>Delete User</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useAuth} from '../contexts/AuthContext';\r\n\r\nexport function ActivePrivateRoute({component: Component, ...rest}){\r\n    const {currentUser, userData} = useAuth();\r\n    return (\r\n        <Route {...rest} render={props => {\r\n                if(!currentUser || !userData){\r\n                    return <Redirect to='/login'/>;\r\n                } else if(!userData.clusterId){\r\n                    return <Redirect to='/dormant-dashboard'/>;\r\n                } else {\r\n                    return <Component {...props}/>;\r\n                }\r\n            }\r\n        }/>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io.connect(`${process.env.REACT_APP_BACKEND_URL}/messaging`)\r\n\r\nexport function ChatPanel(){\r\n\r\n    const {userData} = useAuth();\r\n    const [chatsList, setChatsList] = useState([]);\r\n    const [chat, setChat] = useState({});\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    socket.on('newMessage', message => setMessages([...messages, message]));\r\n    socket.on('message', message => setMessages([...messages, message]));\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.chats}`).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            socket.emit('join', {userId: userData.id})\r\n            setChatsList(data);\r\n            setChat(data[0] || {});\r\n        } catch(err) {\r\n            setError('Failed to grab all chats')\r\n        }\r\n    }, [userData]);\r\n\r\n    async function handleChatClick(chat){\r\n        try {\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${chat.links.messages}`).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setChat(chat);\r\n            setMessages(data);\r\n        } catch(err) {\r\n            setError('Failed to display chat');\r\n        }\r\n    }\r\n\r\n    function handleSendMessage(){\r\n        socket.emit('message', {senderId: chat.senderId, recipientId: chat.recipientId,\r\n            chatId: chat.id, message});\r\n        setMessage('');\r\n    }\r\n\r\n    function renderChatsList(){\r\n        return chatsList.map(chat => {\r\n            return (\r\n                <div>\r\n                    <h3>{chat.recipientName}</h3>\r\n                    <button onClick={() => handleChatClick(chat)}>Select</button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    function renderSpecificChat(){\r\n        return (\r\n            <div>\r\n                <h2>{chat.recipientName}</h2>\r\n                <div>\r\n                    {messages.map(message => {\r\n                        return (\r\n                            <div>\r\n                                <br/>\r\n                                {message.message}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <br/>\r\n                <input value={message} onChange={e => setMessage(e.target.value)}/>\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderChatsList()}\r\n            <br/>\r\n            {renderSpecificChat()}\r\n        </div>\r\n    )\r\n\r\n}","import './App.css';\r\nimport {HomePage} from './components/pages/HomePage';\r\nimport {LoginPage} from './components/pages/LoginPage';\r\nimport {RegistrationPage} from './components/pages/RegistrationPage';\r\nimport {AccountPage} from './components/pages/AccountPage';\r\nimport {AuthProvider} from './contexts/AuthContext';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\nimport {PrivateRoute} from './routes/PrivateRoute';\r\nimport {PublicRoute} from './routes/PublicRoute';\r\nimport {Dashboard} from './components/pages/Dashboard';\r\nimport {ActivePrivateRoute} from './routes/ActivePrivateRoute';\r\nimport {ChatPanel} from './components/panels/ChatPanel';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <AuthProvider>\r\n            <Switch>\r\n                <Route exact path='/' component={HomePage}/>\r\n                <PublicRoute path='/register' component={RegistrationPage}/>\r\n                <PublicRoute path='/login' component={LoginPage}/>\r\n                <PrivateRoute path='/account' component={AccountPage}/>\r\n                <PrivateRoute path='/dashboard' component={Dashboard}/>\r\n                <ActivePrivateRoute path='/chats' component={ChatPanel}/>\r\n            </Switch>\r\n        </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}