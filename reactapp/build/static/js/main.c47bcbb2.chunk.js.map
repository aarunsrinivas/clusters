{"version":3,"sources":["components/modules/NavBar.js","components/pages/HomePage.js","firebase.js","contexts/AuthContext.js","components/forms/LoginForm.js","components/pages/LoginPage.js","components/forms/RegistrationForm.js","components/pages/RegistrationPage.js","components/forms/AccountForm.js","components/pages/AccountPage.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/forms/UpdateForm.js","components/panels/ApplicantPanel.js","components/panels/BusinessPanel.js","components/pages/sub-pages/ActiveDashboard.js","components/pages/sub-pages/DormantDashboard.js","components/pages/Dashboard.js","routes/ActivePrivateRoute.js","components/panels/ChatPanel.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","HomePage","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","JSON","parse","sessionStorage","getItem","currentUser","setCurrentUser","userData","setUserData","loading","setLoading","name","email","password","type","worldId","a","fire","createUserWithEmailAndPassword","destination","fetch","method","body","stringify","then","response","ok","json","data","signInWithEmailAndPassword","updateEmail","updatePassword","links","self","action","cap","gpa","majors","standings","skills","interests","courses","parseInt","parseFloat","signOut","delete","useEffect","unsubscribe","onAuthStateChanged","user","clear","setItem","value","registerUser","loginUser","logoutUser","deleteUser","updateAccount","updateFeatures","joinCluster","peelFromCluster","leaveCluster","Provider","LoginForm","setEmail","setPassword","setError","history","useHistory","push","Form","Group","controlId","Label","Control","placeholder","onChange","e","target","Button","variant","onClick","block","to","LoginPage","RegistrationForm","setName","confirmPassword","setConfirmPassword","setType","setWorldId","disabled","RegistrationPage","AccountForm","AccountPage","PrivateRoute","Component","component","rest","render","props","PublicRoute","UpdateForm","setCap","features","setGpa","setMajors","setStandings","setSkills","setInterests","setCourses","length","step","min","tags","ApplicantPanel","change","setChange","pool","setPool","applied","setApplied","received","setReceived","interested","setInterested","reviewed","setReviewed","accepted","setAccepted","setDeclined","setRejected","businessId","formatSkills","list","i","formatCourses","all","declined","rejected","map","business","Card","style","width","Body","Title","Text","handleSubmitApply","handleCancelApply","handleAcceptReach","handleDeclineReach","handleDeclineInterest","handleAcceptOffer","handleDeclineOffer","BusinessPanel","reached","setReached","offered","setOffered","applicantId","applicant","handleSubmitReach","handleCancelReach","handleAcceptApply","handleDeclineApply","handleOfferInterest","handleRescindOffer","ActiveDashboard","DormantDashboard","Dashboard","clusterId","ActivePrivateRoute","socket","io","connect","ChatPanel","chatsList","setChatsList","chat","setChat","messages","setMessages","message","setMessage","handleSendMessage","emit","senderId","recipientId","chatId","on","chats","userId","recipientName","handleChatClick","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c47bcbb2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nexport function NavBar () {\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">Clusters</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\r\n                    <Nav.Link href=\"/account\">Account</Nav.Link>\r\n                    <Nav.Link href=\"/register\">Register</Nav.Link>\r\n                    <Nav.Link href=\"/login\">Log In</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}","import React from 'react';\r\nimport {NavBar} from '../modules/NavBar';\r\nimport '../../styles/HomePage.css';\r\n\r\nexport function HomePage() {\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div className=\"home-container\">\r\n                <h1 className=\"home-header\">Clusters</h1>\r\n                <h3 className=\"home-description\">An easier way to find the best fit for both students and researchers alike.</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport default app;","import React, {useContext, useState, useEffect} from 'react';\r\nimport {auth} from '../firebase';\r\nimport firebase from 'firebase/app';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentUser')) || null);\r\n    const [userData, setUserData] = useState(JSON.parse(sessionStorage.getItem('userData')) || null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    async function registerUser(name, email, password, type, worldId) {\r\n        const fire = auth.createUserWithEmailAndPassword(email, password);\r\n        const destination = type === 'applicant' ? `${process.env.REACT_APP_BACKEND_URL}/worlds/${worldId}/applicants`\r\n            : `${process.env.REACT_APP_BACKEND_URL}/worlds/${worldId}/businesses`;\r\n        const data = await fetch(destination, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                worldId\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n        return fire;\r\n    }\r\n\r\n    async function loginUser(email, password){\r\n        const fire = auth.signInWithEmailAndPassword(email, password);\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data[0]);\r\n        return fire;\r\n    }\r\n\r\n    async function updateAccount(name, email, password, worldId){\r\n        currentUser.updateEmail(email);\r\n        password && currentUser.updatePassword(password);\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                action: 'account',\r\n                name,\r\n                email,\r\n                worldId\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function updateFeatures(cap, gpa, majors, standings, skills, interests, courses){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                action: 'features',\r\n                cap: parseInt(cap),\r\n                gpa: parseFloat(gpa),\r\n                majors,\r\n                standings,\r\n                skills,\r\n                interests,\r\n                courses\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function logoutUser(){\r\n        const fire = auth.signOut();\r\n        setUserData(null);\r\n        return fire;\r\n    }\r\n\r\n    async function deleteUser(){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        const fire = currentUser.delete();\r\n        setUserData(null);\r\n        return fire;\r\n    }\r\n\r\n    async function joinCluster(){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'join'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function leaveCluster(){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'leave'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    async function peelFromCluster(){\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({action: 'peel'})\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setUserData(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async user => {\r\n            if(!user){\r\n                sessionStorage.clear();\r\n            } else if(!userData){\r\n                const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users?email=${user.email}`).then(response => {\r\n                    if(response.ok){\r\n                        return response.json();\r\n                    }\r\n                });\r\n                setUserData(data[0]);\r\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n            }\r\n            setCurrentUser(user);\r\n        });\r\n        setLoading(false)\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sessionStorage.setItem('userData', JSON.stringify(userData))\r\n    }, [userData]);\r\n\r\n    const value = {\r\n        currentUser,\r\n        userData,\r\n        registerUser,\r\n        loginUser,\r\n        logoutUser,\r\n        deleteUser,\r\n        updateAccount,\r\n        updateFeatures,\r\n        joinCluster,\r\n        peelFromCluster,\r\n        leaveCluster,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {\r\n    Form,\r\n    Button\r\n} from 'react-bootstrap';\r\nimport '../../styles/Form.css'\r\n\r\n\r\nexport function LoginForm() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {loginUser, userData} = useAuth();\r\n    const history = useHistory();\r\n\r\n     async function handleLoginUser() {\r\n        try {\r\n            setError('Logged In');\r\n            setLoading(true);\r\n            if(!email || !password){\r\n                throw 'Fields are required';\r\n            }\r\n            await loginUser(email, password);\r\n            history.push('/dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"form-container\">\r\n                <h1 className=\"form-header\">Log In</h1>\r\n                <Form>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n                        value={email} onChange={e => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter password\" \r\n                        value={password} onChange={e => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n                    <div className=\"form-button\">\r\n                        <Button variant=\"primary\" onClick={handleLoginUser} block>\r\n                            Sign in </Button>\r\n                    </div>\r\n                </Form>\r\n                <div className=\"form-register-redirect\">\r\n                        <span><p>Need an Account? <Link to='/register'>Register</Link></p></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {LoginForm} from '../forms/LoginForm';\r\nimport {NavBar} from '../modules/NavBar';\r\n\r\nexport function LoginPage() {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <LoginForm/>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport '../../styles/Form.css';\r\nimport {\r\n    Form,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\n\r\nexport function RegistrationForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [worldId, setWorldId] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {registerUser} = useAuth();\r\n    const history = useHistory();\r\n\r\n    async function handleRegisterUser() {\r\n        try {\r\n            setError('Registered');\r\n            setLoading(true);\r\n            if(!name || !email || !password || !confirmPassword || !type || !worldId) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await registerUser(name, email, password, type, worldId)\r\n            history.push('/dashboard');\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"register-container\">\r\n\r\n            <h1 className=\"register-header\">Create Account</h1>\r\n\r\n            <Form>\r\n\r\n                <div className=\"radio-container\">\r\n                    <input type='radio' name='type' onClick={() => setType('applicant')}/> Student {' '}\r\n                    <input type='radio' name='type' onClick={() => setType('business')}/> Faculty\r\n                </div>\r\n\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control placeholder=\"Enter name\" \r\n                    value={name} onChange={e => setName(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"worldId\">\r\n                    <Form.Label>College</Form.Label>\r\n                    <Form.Control placeholder=\"Enter college\" \r\n                    value={worldId} onChange={e => setWorldId(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n                    value={email} onChange={e => setEmail(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Enter password\" \r\n                    value={password} onChange={e => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Confirm password\" \r\n                    value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <div className=\"register-button\">\r\n                    <Button variant=\"primary\" disabled={loading} onClick={handleRegisterUser} block>Sign up</Button>\r\n                </div>\r\n\r\n            </Form>\r\n            \r\n            <div className=\"form-register-redirect\">\r\n                Already Have an Account? <Link to='/login'>Sign in</Link>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n        // <div>\r\n        //     Type:\r\n        //     <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\r\n        //     <input type='radio' name='type' onClick={() => setType('business')}/> Business\r\n        //     <br/>\r\n        //     College: <input value={worldId} onChange={e => setWorldId(e.target.value)}/>\r\n        //     <br/>\r\n        //     Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n        //     <br/>\r\n        //     Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n        //     <br/>\r\n        //     Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n        //     <br/>\r\n        //     Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n        //     <br/>\r\n        //     <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\r\n        //     <div>\r\n        //         Already Have an Account? <Link to='/login'>Log In</Link>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}","import React from 'react';\r\nimport {RegistrationForm} from '../forms/RegistrationForm';\r\nimport {NavBar} from '../modules/NavBar';\r\n\r\nexport function RegistrationPage() {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <RegistrationForm/>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {\r\n    Form,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\n\r\nexport function AccountForm() {\r\n    const {userData, updateAccount, deleteUser} = useAuth();\r\n    const [name, setName] = useState(userData.name);\r\n    const [email, setEmail] = useState(userData.email);\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [worldId, setWorldId] = useState(userData.worldId);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    async function handleUpdateAccount() {\r\n        try {\r\n            setError('Updated Account');\r\n            setLoading(true);\r\n            if(!name || !email || !worldId) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            const data = await updateAccount(name, email, password, worldId);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    async function handleDeleteUser(){\r\n        try {\r\n            setError('Successfully deleted');\r\n            setLoading(true);\r\n            await deleteUser();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        \r\n            <div className=\"register-container\">\r\n\r\n                <h2 className=\"register-header\">Update Account Details</h2>\r\n\r\n                <Form>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control placeholder=\"Enter name\" \r\n                        value={name} onChange={e => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"worldId\">\r\n                        <Form.Label>College</Form.Label>\r\n                        <Form.Control placeholder=\"Enter college\"\r\n                        value={worldId} onChange={e => setWorldId(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n                        value={email} onChange={e => setEmail(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter password\" \r\n                        value={password} onChange={e => setPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Confirm password\" \r\n                        value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <div className=\"register-button\">\r\n                        <Button variant=\"primary\" disabled={loading} onClick={handleUpdateAccount} block>Update Info</Button>\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <Button variant=\"danger\" disabled={loading} onClick={handleDeleteUser} block>Delete Account</Button>\r\n                    </div>\r\n\r\n                </Form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {AccountForm} from '../forms/AccountForm';\r\nimport {NavBar} from '../modules/NavBar';\r\n\r\nexport function AccountPage() {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <AccountForm/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useAuth} from '../contexts/AuthContext';\r\n\r\nexport function PrivateRoute({component: Component, ...rest}){\r\n    const {userData} = useAuth();\r\n\r\n    return (\r\n        <Route {...rest} render={props => userData ? <Component {...props}/> : <Redirect to='/login'/>}/>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useAuth} from '../contexts/AuthContext';\r\n\r\nexport function PublicRoute({component: Component, ...rest}){\r\n    const {userData} = useAuth();\r\n\r\n    return (\r\n        <Route {...rest} render={props => !userData ? <Component {...props}/> : <Redirect to='/dashboard'/>}/>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs';\r\nimport TagsInput from 'react-tagsinput';\r\nimport '../../styles/Form.css';\r\nimport '../../styles/TagsInput.css';\r\nimport {\r\n    Form,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nexport function UpdateForm() {\r\n\r\n    const {userData, updateFeatures} = useAuth();\r\n    const [cap, setCap] = useState(userData.cap);\r\n    const [gpa, setGpa] = useState(userData.features.gpa || null);\r\n    const [majors, setMajors] = useState(userData.features.majors);\r\n    const [standings, setStandings] = useState(userData.features.standings);\r\n    const [skills, setSkills] = useState(userData.features.skills);\r\n    const [interests, setInterests] = useState(userData.features.interests)\r\n    const [courses, setCourses] = useState(userData.features.courses)\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function handleUpdateFeatures() {\r\n        try {\r\n            setError('Updated Features');\r\n            setLoading(true);\r\n            if(!cap || !gpa || !majors.length || !standings.length || !skills.length || !interests.length || !courses.length) {\r\n               throw 'Fields not filled out';\r\n            }\r\n            await updateFeatures(cap, gpa, majors, standings, skills, interests, courses);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <div className=\"register-container\">\r\n\r\n                <h2 className=\"register-header\">Set User Details</h2>\r\n\r\n                <Form>\r\n                    <Form.Group controlId=\"cap\">\r\n                        <Form.Label>Cap</Form.Label>\r\n                        <Form.Control type=\"number\" step=\"1\" min=\"1\" placeholder=\"Enter cap\"\r\n                        value={cap} onChange={e => setCap(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"gpa\">\r\n                        <Form.Label>GPA</Form.Label>\r\n                        <Form.Control type=\"number\" step=\"0.01\" min=\"0.00\" placeholder=\"Enter GPA out of 4.0\"\r\n                        value={gpa} onChange={e => setGpa(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    Major(s)<TagsInput value={majors} onChange={tags => setMajors(tags)}/>\r\n                    <br/>\r\n                    Standing(s)<TagsInput value={standings} onChange={tags => setStandings(tags)}/>\r\n                    <br/>\r\n                    Skills<TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n                    <br/>\r\n                    Interests<TagsInput value={interests} onChange={tags => setInterests(tags)}/>\r\n                    <br/>\r\n                    Courses<TagsInput value={courses} onChange={tags => setCourses(tags)}/>\r\n                    <br/>\r\n\r\n                    <div className=\"register-button\">\r\n                        <Button variant=\"primary\" disabled={loading} onClick={handleUpdateFeatures} block>Set User Info</Button>\r\n                    </div>\r\n\r\n                </Form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport '../../styles/Dashboard.css';\r\nimport {\r\n    Card,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nexport function ApplicantPanel(){\r\n\r\n    const {userData, leaveCluster} = useAuth();\r\n    const [change, setChange] = useState(false);\r\n    const [cap, setCap] = useState(1);\r\n    const [pool, setPool] = useState([]);\r\n    const [applied, setApplied] = useState([]);\r\n    const [received, setReceived] = useState([]);\r\n    const [interested, setInterested] = useState([]);\r\n    const [reviewed, setReviewed] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [declined, setDeclined] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(async () => {\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.all}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCap(data.cap);\r\n        setPool(data.pool);\r\n        setApplied(data.applied);\r\n        setReceived(data.received);\r\n        setInterested(data.interested);\r\n        setReviewed(data.reviewed);\r\n        setAccepted(data.accepted);\r\n        setDeclined(data.declined);\r\n        setRejected(data.rejected);\r\n        setLoading(false);\r\n    }, [userData, change]);\r\n\r\n\r\n    useEffect(async () => {\r\n        if(!cap){\r\n            try {\r\n                setError('Left Cluster');\r\n                setLoading(true);\r\n                await leaveCluster();\r\n            } catch(err) {\r\n                setError('Failed to leave cluster')\r\n            }\r\n        }\r\n    }, [cap])\r\n\r\n    async function handleSubmitApply(businessId){\r\n        try {\r\n            setError('Successfully Applied');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.applied}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'apply',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to apply');\r\n        }\r\n    }\r\n\r\n    async function handleCancelApply(businessId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.applied}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptReach(businessId){\r\n        try {\r\n            setError('Successfully Accepted Reach');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineReach(businessId){\r\n        try {\r\n            setError('Successfully declined reach');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineInterest(businessId){\r\n        try {\r\n            setError('Successfully declined communication');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline communication');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptOffer(businessId){\r\n        try {\r\n            setError('Successfully Accepted offer');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reviewed}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            try {\r\n                setError('Left cluster');\r\n                setLoading(true);\r\n                await leaveCluster();\r\n            } catch(err) {\r\n                setError(err);\r\n            }\r\n        } catch(err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineOffer(businessId){\r\n        try {\r\n            setError('Successfully declined offer');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reviewed}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline offer');\r\n        }\r\n    }\r\n\r\n    function renderPool(){\r\n        return pool.map(business => {\r\n            return (\r\n                <div className=\"single-card-container\">\r\n                    <Card style={{width: '16rem'}}>\r\n                        <Card.Body>\r\n                            <Card.Title>{business.name}</Card.Title>\r\n                            <Card.Text>\r\n                                <p>{formatSkills(business.features.skills)}</p>\r\n                                <p>{formatCourses(business.features.courses)}</p>\r\n                            </Card.Text>\r\n                            <Button variant=\"primary\" onClick={() => handleSubmitApply(business.id)}>Apply</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function formatSkills(skills){\r\n        var list = \"\";\r\n        for (var i = 0; i < skills.length - 1; i++) {\r\n            list += skills[i] + \" | \";\r\n        }\r\n        list += skills[skills.length - 1];\r\n\r\n        return list;\r\n    }\r\n\r\n    function formatCourses(courses){\r\n        var list = \"\";\r\n        for (var i = 0; i < courses.length - 1; i++) {\r\n            list += courses[i] + \" | \";\r\n        }\r\n        list += courses[courses.length - 1];\r\n\r\n        return list;\r\n    }\r\n\r\n    function renderApplied(){\r\n        return applied.map(business => {\r\n            return (\r\n                <div className=\"single-card-container\">\r\n                    <Card style={{width: '14rem'}}>\r\n                        <Card.Body>\r\n                            <Card.Title>{business.name}</Card.Title>\r\n                            <Card.Text>\r\n                                {formatSkills(business.features.skills)}\r\n                            </Card.Text>\r\n                            <Button variant=\"danger\" onClick={() => handleCancelApply(business.id)}>Cancel</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReceived(){\r\n        return received.map(business => {\r\n            return (\r\n                <div className=\"single-card-container\">\r\n                    <Card style={{width: '14rem'}}>\r\n                        <Card.Body>\r\n                            <Card.Title>{business.name}</Card.Title>\r\n                            <Card.Text>\r\n                                {formatSkills(business.features.skills)}\r\n                            </Card.Text>\r\n                            <Button variant=\"primary\" onClick={() => handleAcceptReach(business.id)}>Accept</Button> \r\n                            <Button variant=\"danger\" onClick={() => handleDeclineReach(business.id)}>Decline</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                // <div>\r\n                //     <h3>{business.name}</h3>\r\n                //     <li>{business.features.skills}</li>\r\n                //     <button onClick={() => handleAcceptReach(business.id)}>Accept</button>\r\n                //     <button onClick={() => handleDeclineReach(business.id)}>Decline</button>\r\n                // </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderInterested(){\r\n        return interested.map(business => {\r\n            return (\r\n                <div className=\"single-card-container\">\r\n                    <Card style={{width: '14rem'}}>\r\n                        <Card.Body>\r\n                            <Card.Title>{business.name}</Card.Title>\r\n                            <Card.Text>\r\n                                {formatSkills(business.features.skills)}\r\n                            </Card.Text>\r\n                            <Button variant=\"danger\" onClick={() => handleDeclineInterest(business.id)}>Decline</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                // <div>\r\n                //     <h3>{business.name}</h3>\r\n                //     <li>{business.features.skills}</li>\r\n                //     <button onClick={() => handleDeclineInterest(business.id)}>Decline</button>\r\n                // </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReviewed(){\r\n        return reviewed.map(business => {\r\n            return (\r\n                <div className=\"single-card-container\">\r\n                    <Card style={{width: '14rem'}}>\r\n                        <Card.Body>\r\n                            <Card.Title>{business.name}</Card.Title>\r\n                            <Card.Text>\r\n                                {formatSkills(business.features.skills)}\r\n                            </Card.Text>\r\n                            <Button variant=\"primary\" onClick={() => handleAcceptOffer(business.id)}>Accept Offer</Button> \r\n                            <Button variant=\"danger\" onClick={() => handleDeclineOffer(business.id)}>Decline Offer</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                // <div>\r\n                //     <h3>{business.name}</h3>\r\n                //     <li>{business.features.skills}</li>\r\n                //     <button onClick={() => handleAcceptOffer(business.id)}>Accept</button>\r\n                //     <button onClick={() => handleDeclineOffer(business.id)}>Decline</button>\r\n                // </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderAccepted(){\r\n        return accepted.map(business => {\r\n            return (\r\n                <div className=\"single-card-container\">\r\n                    <Card style={{width: '14rem'}}>\r\n                        <Card.Body>\r\n                            <Card.Title>{business.name}</Card.Title>\r\n                            <Card.Text>\r\n                                {formatSkills(business.features.skills)}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                // <div>\r\n                //     <h3>{business.name}</h3>\r\n                //     <li>{business.features.skills}</li>\r\n                // </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h1>Dashboard</h1>\r\n            <hr/>\r\n\r\n            <h2>Availible Positions</h2>\r\n            <div className=\"all-cards-container\">\r\n                {renderPool()}\r\n            </div>\r\n            <hr/>\r\n\r\n            <h2>Applied</h2>\r\n            <div className=\"all-cards-container\">\r\n                {renderApplied()}\r\n            </div>\r\n            <hr/>\r\n\r\n            <h2>Received</h2>\r\n            <div className=\"all-cards-container\">\r\n                {renderReceived()}\r\n            </div>\r\n            <hr/>\r\n\r\n            <h2>Interested</h2>\r\n            <div className=\"all-cards-container\">\r\n                {renderInterested()}\r\n            </div>\r\n            <hr/>\r\n\r\n            <h2>Offers</h2>\r\n            <div className=\"all-cards-container\">\r\n                {renderReviewed()}\r\n            </div>\r\n            <hr/>\r\n\r\n            <h2>Accepted</h2>\r\n            <div className=\"all-cards-container\"></div>\r\n            {renderAccepted()}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\nexport function BusinessPanel(){\r\n\r\n    const {userData, leaveCluster} = useAuth();\r\n    const [change, setChange] = useState(false);\r\n    const [cap, setCap] = useState(1);\r\n    const [pool, setPool] = useState([]);\r\n    const [reached, setReached] = useState([]);\r\n    const [received, setReceived] = useState([]);\r\n    const [interested, setInterested] = useState([]);\r\n    const [offered, setOffered] = useState([]);\r\n    const [declined, setDeclined] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    const [accepted, setAccepted] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(async () => {\r\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.all}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setCap(data.cap);\r\n        setPool(data.pool);\r\n        setReached(data.reached);\r\n        setReceived(data.received);\r\n        setInterested(data.interested);\r\n        setOffered(data.offered);\r\n        setDeclined(data.declined);\r\n        setRejected(data.rejected);\r\n        setAccepted(data.accepted);\r\n        setLoading(false);\r\n    }, [userData, change]);\r\n\r\n    useEffect(async () => {\r\n        if(!cap){\r\n            try {\r\n                setError('Left cluster');\r\n                setLoading(true);\r\n                await leaveCluster()\r\n            } catch (err) {\r\n                setError('failed to leave cluster')\r\n            }\r\n        }\r\n    }, [cap])\r\n\r\n    async function handleSubmitReach(applicantId){\r\n        try {\r\n            setError('Successfully Reached');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reached}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'reach',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReached(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to reach');\r\n        }\r\n    }\r\n\r\n    async function handleCancelReach(applicantId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reached}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReached(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n    async function handleAcceptApply(applicantId){\r\n        try {\r\n            setError('Successfully Accepted Apply');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept apply');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineApply(applicantId){\r\n        try {\r\n            setError('Successfully declined apply');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline apply');\r\n        }\r\n    }\r\n\r\n    async function handleOfferInterest(applicantId){\r\n        try {\r\n            setError('Successfully offered');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'offer',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to offer');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineInterest(applicantId){\r\n        try {\r\n            setError('Successfully declined communication');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setInterested(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to decline communication');\r\n        }\r\n    }\r\n\r\n    async function handleRescindOffer(applicantId){\r\n        try {\r\n            setError('Successfully rescinded offer');\r\n            setLoading(true);\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.offered}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'rescind',\r\n                    applicantId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setOffered(data);\r\n            setChange(!change);\r\n        } catch (err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n\r\n    function renderPool(){\r\n        return pool.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleSubmitReach(applicant.id)}>Reach</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReached(){\r\n        return reached.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleCancelReach(applicant.id)}>Reach</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderReceived(){\r\n        return received.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleAcceptApply(applicant.id)}>Accept</button>\r\n                    <button onClick={() => handleDeclineApply(applicant.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderInterested(){\r\n        return interested.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleOfferInterest(applicant.id)}>Offer</button>\r\n                    <button onClick={() => handleDeclineInterest(applicant.id)}>Decline</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderOffered(){\r\n        return offered.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                    <button onClick={() => handleRescindOffer(applicant.id)}>Rescind</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderAccepted(){\r\n        return accepted.map(applicant => {\r\n            return (\r\n                <div>\r\n                    <h3>{applicant.name}</h3>\r\n                    <li>{applicant.features.skills}</li>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pool</h2>\r\n            {renderPool()}\r\n            <br/>\r\n            <h2>Reached</h2>\r\n            {renderReached()}\r\n            <h2>Received</h2>\r\n            {renderReceived()}\r\n            <h2>Interested</h2>\r\n            {renderInterested()}\r\n            <h2>Offered</h2>\r\n            {renderOffered()}\r\n            <h2>Accepted</h2>\r\n            {renderAccepted()}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../../contexts/AuthContext';\r\nimport {ApplicantPanel} from '../../panels/ApplicantPanel';\r\nimport {BusinessPanel} from '../../panels/BusinessPanel';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function ActiveDashboard(){\r\n\r\n    const {userData, peelFromCluster, leaveCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handlePeelFromCluster(){\r\n        try {\r\n            setError('Peeled From Cluster');\r\n            setLoading(true);\r\n            await peelFromCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    async function handleLeaveCluster(){\r\n        try {\r\n            setError('Left Cluster');\r\n            setLoading(true);\r\n            await leaveCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {userData.type === 'applicant' && <ApplicantPanel/>}\r\n            {userData.type === 'business' && <BusinessPanel/>}\r\n            <button disabled={loading} onClick={handlePeelFromCluster}>Peel From Cluster</button>\r\n            <button disabled={loading} onClick={handleLeaveCluster}>Leave Cluster</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport {useAuth} from '../../../contexts/AuthContext';\r\nimport {UpdateForm} from '../../forms/UpdateForm';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function DormantDashboard(){\r\n\r\n    const {userData, joinCluster} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleJoinCluster(){\r\n        try {\r\n            setError('Joined Cluster');\r\n            setLoading(true);\r\n            const {gpa, majors, standings, skills, interests, courses} = userData.features;\r\n            if(!gpa || !majors.length || !standings.length || !skills.length || !interests.length || !courses.length) {\r\n               throw 'Fields not filled out';\r\n            }\r\n            await joinCluster();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UpdateForm/>\r\n            <button disabled={loading} onClick={handleJoinCluster}>Join Cluster</button>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {UpdateForm} from '../forms/UpdateForm';\r\nimport {ActiveDashboard} from './sub-pages/ActiveDashboard';\r\nimport {DormantDashboard} from './sub-pages/DormantDashboard';\r\nimport {NavBar} from '../modules/NavBar';\r\n\r\nexport function Dashboard(){\r\n\r\n    const {userData, logoutUser, deleteUser} = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    async function handleLogoutUser(){\r\n        try {\r\n            setError('Logged Out');\r\n            setLoading(true);\r\n            await logoutUser();\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    async function handleDeleteUser(){\r\n        try {\r\n            setError('Successfully deleted');\r\n            setLoading(true);\r\n            await deleteUser();\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            {!userData.clusterId && <DormantDashboard/>}\r\n            {userData.clusterId && <ActiveDashboard/>}\r\n            <button disabled={loading} onClick={handleLogoutUser}>Logout</button>\r\n            <button disabled={loading} onClick={handleDeleteUser}>Delete User</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {useAuth} from '../contexts/AuthContext';\r\n\r\nexport function ActivePrivateRoute({component: Component, ...rest}){\r\n    const {currentUser, userData} = useAuth();\r\n    return (\r\n        <Route {...rest} render={props => {\r\n                if(!currentUser || !userData){\r\n                    return <Redirect to='/login'/>;\r\n                } else if(!userData.clusterId){\r\n                    return <Redirect to='/dormant-dashboard'/>;\r\n                } else {\r\n                    return <Component {...props}/>;\r\n                }\r\n            }\r\n        }/>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io.connect(`${process.env.REACT_APP_BACKEND_URL}/messaging`)\r\n\r\nexport function ChatPanel(){\r\n\r\n    const {userData} = useAuth();\r\n    const [chatsList, setChatsList] = useState([]);\r\n    const [chat, setChat] = useState({});\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    socket.on('newMessage', message => setMessages([...messages, message]));\r\n    socket.on('message', message => setMessages([...messages, message]));\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.chats}`).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            socket.emit('join', {userId: userData.id})\r\n            setChatsList(data);\r\n            setChat(data[0] || {});\r\n        } catch(err) {\r\n            setError('Failed to grab all chats')\r\n        }\r\n    }, [userData]);\r\n\r\n    async function handleChatClick(chat){\r\n        try {\r\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${chat.links.messages}`).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setChat(chat);\r\n            setMessages(data);\r\n        } catch(err) {\r\n            setError('Failed to display chat');\r\n        }\r\n    }\r\n\r\n    function handleSendMessage(){\r\n        socket.emit('message', {senderId: chat.senderId, recipientId: chat.recipientId,\r\n            chatId: chat.id, message});\r\n        setMessage('');\r\n    }\r\n\r\n    function renderChatsList(){\r\n        return chatsList.map(chat => {\r\n            return (\r\n                <div>\r\n                    <h3>{chat.recipientName}</h3>\r\n                    <button onClick={() => handleChatClick(chat)}>Select</button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    function renderSpecificChat(){\r\n        return (\r\n            <div>\r\n                <h2>{chat.recipientName}</h2>\r\n                <div>\r\n                    {messages.map(message => {\r\n                        return (\r\n                            <div>\r\n                                <br/>\r\n                                {message.message}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <br/>\r\n                <input value={message} onChange={e => setMessage(e.target.value)}/>\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderChatsList()}\r\n            <br/>\r\n            {renderSpecificChat()}\r\n        </div>\r\n    )\r\n\r\n}","import './App.css';\r\nimport {HomePage} from './components/pages/HomePage';\r\nimport {LoginPage} from './components/pages/LoginPage';\r\nimport {RegistrationPage} from './components/pages/RegistrationPage';\r\nimport {AccountPage} from './components/pages/AccountPage';\r\nimport {AuthProvider} from './contexts/AuthContext';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\nimport {PrivateRoute} from './routes/PrivateRoute';\r\nimport {PublicRoute} from './routes/PublicRoute';\r\nimport {Dashboard} from './components/pages/Dashboard';\r\nimport {ActivePrivateRoute} from './routes/ActivePrivateRoute';\r\nimport {ChatPanel} from './components/panels/ChatPanel';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <AuthProvider>\r\n            <Switch>\r\n                <Route exact path='/' component={HomePage}/>\r\n                <PublicRoute path='/register' component={RegistrationPage}/>\r\n                <PublicRoute path='/login' component={LoginPage}/>\r\n                <PrivateRoute path='/account' component={AccountPage}/>\r\n                <PrivateRoute path='/dashboard' component={Dashboard}/>\r\n                <ActivePrivateRoute path='/chats' component={ChatPanel}/>\r\n            </Switch>\r\n        </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}