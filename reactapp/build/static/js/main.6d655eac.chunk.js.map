{"version":3,"sources":["components/modules/NavBar.js","components/pages/HomePage.js","firebase.js","contexts/AuthContext.js","components/forms/LoginForm.js","components/pages/LoginPage.js","components/forms/RegistrationForm.js","components/pages/RegistrationPage.js","components/forms/AccountForm.js","components/pages/AccountPage.js","routes/PrivateRoute.js","routes/PublicRoute.js","components/forms/UpdateForm.js","components/panels/ApplicantPanel.js","components/panels/BusinessPanel.js","components/pages/sub-pages/ActiveDashboard.js","components/pages/sub-pages/DormantDashboard.js","components/pages/Dashboard.js","routes/ActivePrivateRoute.js","components/panels/ChatPanel.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","HomePage","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","JSON","parse","sessionStorage","getItem","currentUser","setCurrentUser","userData","setUserData","loading","setLoading","name","email","password","type","worldId","a","fire","createUserWithEmailAndPassword","destination","fetch","method","body","stringify","then","response","ok","json","data","signInWithEmailAndPassword","updateEmail","updatePassword","links","self","action","cap","gpa","majors","standings","skills","interests","courses","parseInt","parseFloat","signOut","delete","useEffect","unsubscribe","onAuthStateChanged","user","clear","setItem","value","registerUser","loginUser","logoutUser","deleteUser","updateAccount","updateFeatures","joinCluster","peelFromCluster","leaveCluster","Provider","LoginForm","setEmail","setPassword","setError","history","useHistory","push","Form","Group","controlId","Label","Control","placeholder","onChange","e","target","Button","variant","onClick","block","to","LoginPage","RegistrationForm","setName","confirmPassword","setConfirmPassword","setType","setWorldId","disabled","RegistrationPage","AccountForm","AccountPage","PrivateRoute","Component","component","rest","render","props","PublicRoute","UpdateForm","setCap","features","setGpa","setMajors","setStandings","setSkills","setInterests","setCourses","length","tags","ApplicantPanel","change","setChange","pool","setPool","applied","setApplied","received","setReceived","interested","setInterested","reviewed","setReviewed","accepted","setAccepted","setDeclined","setRejected","businessId","all","declined","rejected","map","business","handleSubmitApply","handleCancelApply","handleAcceptReach","handleDeclineReach","handleDeclineInterest","handleAcceptOffer","handleDeclineOffer","BusinessPanel","reached","setReached","offered","setOffered","applicantId","applicant","handleSubmitReach","handleCancelReach","handleAcceptApply","handleDeclineApply","handleOfferInterest","handleRescindOffer","ActiveDashboard","DormantDashboard","Dashboard","clusterId","ActivePrivateRoute","socket","io","connect","ChatPanel","chatsList","setChatsList","chat","setChat","messages","setMessages","message","setMessage","handleSendMessage","emit","senderId","recipientId","chatId","on","chats","userId","recipientName","handleChatClick","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d655eac.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Navbar,\n    Nav,\n    Button\n} from 'react-bootstrap';\n\nexport function NavBar () {\n\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"/\">Clusters</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n                    <Nav.Link href=\"/account\">Account</Nav.Link>\n                    <Nav.Link href=\"/register\">Register</Nav.Link>\n                    <Nav.Link href=\"/login\">Log In</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}","import React from 'react';\nimport {NavBar} from '../modules/NavBar';\n\nexport function HomePage() {\n\n    return (\n        <div>\n            <NavBar />\n            <h1>Home Page</h1>\n        </div>\n    )\n}","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n});\n\nexport const auth = app.auth();\nexport default app;","import React, {useContext, useState, useEffect} from 'react';\nimport {auth} from '../firebase';\nimport firebase from 'firebase/app';\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({children}) {\n\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentUser')) || null);\n    const [userData, setUserData] = useState(JSON.parse(sessionStorage.getItem('userData')) || null);\n    const [loading, setLoading] = useState(true);\n\n\n    async function registerUser(name, email, password, type, worldId) {\n        const fire = auth.createUserWithEmailAndPassword(email, password);\n        const destination = type === 'applicant' ? `${process.env.REACT_APP_BACKEND_URL}/worlds/${worldId}/applicants`\n            : `${process.env.REACT_APP_BACKEND_URL}/worlds/${worldId}/businesses`;\n        const data = await fetch(destination, {\n            method: 'POST',\n            body: JSON.stringify({\n                name,\n                email,\n                worldId\n            })\n        }).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setUserData(data);\n        return fire;\n    }\n\n    async function loginUser(email, password){\n        const fire = auth.signInWithEmailAndPassword(email, password);\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users?email=${email}`).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setUserData(data[0]);\n        return fire;\n    }\n\n    async function updateAccount(name, email, password, worldId){\n        currentUser.updateEmail(email);\n        password && currentUser.updatePassword(password);\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\n            method: 'PUT',\n            body: JSON.stringify({\n                action: 'account',\n                name,\n                email,\n                worldId\n            })\n        }).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setUserData(data);\n    }\n\n    async function updateFeatures(cap, gpa, majors, standings, skills, interests, courses){\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\n            method: 'PUT',\n            body: JSON.stringify({\n                action: 'features',\n                cap: parseInt(cap),\n                gpa: parseFloat(gpa),\n                majors,\n                standings,\n                skills,\n                interests,\n                courses\n            })\n        }).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setUserData(data);\n    }\n\n    async function logoutUser(){\n        const fire = auth.signOut();\n        setUserData(null);\n        return fire;\n    }\n\n    async function deleteUser(){\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\n            method: 'DELETE'\n        }).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        const fire = currentUser.delete();\n        setUserData(null);\n        return fire;\n    }\n\n    async function joinCluster(){\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\n            method: 'POST',\n            body: JSON.stringify({action: 'join'})\n        }).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setUserData(data);\n    }\n\n    async function leaveCluster(){\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\n            method: 'POST',\n            body: JSON.stringify({action: 'leave'})\n        }).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setUserData(data);\n    }\n\n    async function peelFromCluster(){\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.self}`, {\n            method: 'POST',\n            body: JSON.stringify({action: 'peel'})\n        }).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setUserData(data);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(async user => {\n            if(!user){\n                sessionStorage.clear();\n            } else if(!userData){\n                const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users?email=${user.email}`).then(response => {\n                    if(response.ok){\n                        return response.json();\n                    }\n                });\n                setUserData(data[0]);\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\n            }\n            setCurrentUser(user);\n        });\n        setLoading(false)\n        return unsubscribe;\n    }, []);\n\n    useEffect(() => {\n        sessionStorage.setItem('userData', JSON.stringify(userData))\n    }, [userData]);\n\n    const value = {\n        currentUser,\n        userData,\n        registerUser,\n        loginUser,\n        logoutUser,\n        deleteUser,\n        updateAccount,\n        updateFeatures,\n        joinCluster,\n        peelFromCluster,\n        leaveCluster,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\nimport {Link, useHistory} from 'react-router-dom';\nimport {\n    Form,\n    Button\n} from 'react-bootstrap';\nimport '../../styles/Form.css'\n\n\nexport function LoginForm() {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const {loginUser, userData} = useAuth();\n    const history = useHistory();\n\n     async function handleLoginUser() {\n        try {\n            setError('Logged In');\n            setLoading(true);\n            if(!email || !password){\n                throw 'Fields are required';\n            }\n            await loginUser(email, password);\n            history.push('/dashboard');\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    };\n\n\n    return (\n\n        <div>\n\n            <div className=\"form-container\">\n\n                <h1 className=\"form-header\">Log In</h1>\n\n                <Form>\n\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" \n                        value={email} onChange={e => setEmail(e.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter password\" \n                        value={password} onChange={e => setPassword(e.target.value)} />\n                    </Form.Group>\n                    \n                    <div className=\"form-button\">\n                        <Button variant=\"primary\" onClick={handleLoginUser} block>\n                            Sign in </Button>\n                    </div>\n\n                </Form>\n\n\n                <div className=\"form-register-redirect\">\n                        <span><p>Need an Account? <Link to='/register'>Register</Link></p></span>\n                </div>\n\n            </div>\n\n        </div>\n\n        // <div>\n        //     <input value={email} onChange={e => setEmail(e.target.value)}/>\n        //     <br/>\n        //     <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n        //     <button onClick={handleLoginUser}>Submit</button>\n        //     <div>\n        //         Need an Account? <Link to='/register'>Register</Link>\n        //     </div>\n        // </div>\n    )\n}","import React from 'react';\nimport {LoginForm} from '../forms/LoginForm';\nimport {NavBar} from '../modules/NavBar';\n\nexport function LoginPage() {\n    return (\n        <div>\n            <NavBar />\n            <LoginForm/>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {useAuth} from '../../contexts/AuthContext';\nimport '../../styles/Form.css';\nimport {\n    Form,\n    Button\n} from 'react-bootstrap';\n\n\nexport function RegistrationForm() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [type, setType] = useState('');\n    const [worldId, setWorldId] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const {registerUser} = useAuth();\n    const history = useHistory();\n\n    async function handleRegisterUser() {\n        try {\n            setError('Registered');\n            setLoading(true);\n            if(!name || !email || !password || !confirmPassword || !type || !worldId) {\n               throw 'Fields not filled out';\n            } else if(password !== confirmPassword){\n                throw 'Passwords do not match';\n            }\n            await registerUser(name, email, password, type, worldId)\n            history.push('/dashboard');\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n    return (\n        \n        // <div className=\"register-container\">\n\n        //     <h1 className=\"register-header\">Create Account</h1>\n\n        //     <Form>\n\n        //         <div className=\"radio-container\">\n        //             <input type='radio' name='type' onClick={() => setType('applicant')}/> Student {' '}\n        //             <input type='radio' name='type' onClick={() => setType('business')}/> Faculty\n        //         </div>\n\n        //         <Form.Group controlId=\"name\">\n        //             <Form.Label>Name</Form.Label>\n        //             <Form.Control placeholder=\"Enter name\" \n        //             value={name} onChange={e => setName(e.target.value)} />\n        //         </Form.Group>\n\n        //         <Form.Group controlId=\"worldId\">\n        //             <Form.Label>College</Form.Label>\n        //             <Form.Control placeholder=\"Enter college\" \n        //             value={worldId} onChange={e => setWorldId(e.target.value)} />\n        //         </Form.Group>\n\n        //         <Form.Group controlId=\"email\">\n        //             <Form.Label>Email</Form.Label>\n        //             <Form.Control type=\"email\" placeholder=\"Enter email\" \n        //             value={email} onChange={e => setEmail(e.target.value)} />\n        //         </Form.Group>\n\n        //         <Form.Group controlId=\"password\">\n        //             <Form.Label>Password</Form.Label>\n        //             <Form.Control type=\"password\" placeholder=\"Enter password\" \n        //             value={password} onChange={e => setPassword(e.target.value)} />\n        //         </Form.Group>\n\n        //         <Form.Group controlId=\"confirmPassword\">\n        //             <Form.Label>Confirm Password</Form.Label>\n        //             <Form.Control type=\"password\" placeholder=\"Confirm password\" \n        //             value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} />\n        //         </Form.Group>\n\n        //         <div className=\"register-button\">\n        //             <Button variant=\"primary\" disabled={loading} onClick={handleRegisterUser} block>Sign up</Button>\n        //         </div>\n\n        //     </Form>\n            \n        //     <div className=\"form-register-redirect\">\n        //         Already Have an Account? <Link to='/login'>Sign in</Link>\n        //     </div>\n\n        // </div>\n\n\n\n        <div>\n            Type:\n            <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\n            <input type='radio' name='type' onClick={() => setType('business')}/> Business\n            <br/>\n            College: <input value={worldId} onChange={e => setWorldId(e.target.value)}/>\n            <br/>\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\n            <br/>\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\n            <br/>\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n            <br/>\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\n            <br/>\n            <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\n            <div>\n                Already Have an Account? <Link to='/login'>Log In</Link>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {RegistrationForm} from '../forms/RegistrationForm';\nimport {NavBar} from '../modules/NavBar';\n\nexport function RegistrationPage() {\n    return (\n        <div>\n            <NavBar />\n            <RegistrationForm/>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport {useAuth} from '../../contexts/AuthContext';\n\n\nexport function AccountForm() {\n    const {userData, updateAccount} = useAuth();\n    const [name, setName] = useState(userData.name);\n    const [email, setEmail] = useState(userData.email);\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [worldId, setWorldId] = useState(userData.worldId);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n\n    async function handleUpdateAccount() {\n        try {\n            setError('Updated Account');\n            setLoading(true);\n            if(!name || !email || !worldId) {\n               throw 'Fields not filled out';\n            } else if(password !== confirmPassword){\n                throw 'Passwords do not match';\n            }\n            const data = await updateAccount(name, email, password, worldId);\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n    return (\n        <div>\n            College: <input value={worldId} onChange={e => setWorldId(e.target.value)}/>\n            <br/>\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\n            <br/>\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\n            <br/>\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n            <br/>\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\n            <br/>\n            <button disabled={loading} onClick={handleUpdateAccount}>Submit</button>\n            <div>\n                Back to Dashboard? <Link to='/dashboard'>Dashboard</Link>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {AccountForm} from '../forms/AccountForm';\nimport {NavBar} from '../modules/NavBar';\n\nexport function AccountPage() {\n    return (\n        <div>\n            <NavBar />\n            <AccountForm/>\n        </div>\n    )\n}","import React, {useEffect} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useAuth} from '../contexts/AuthContext';\n\nexport function PrivateRoute({component: Component, ...rest}){\n    const {userData} = useAuth();\n\n    return (\n        <Route {...rest} render={props => userData ? <Component {...props}/> : <Redirect to='/login'/>}/>\n    )\n}","import React, {useEffect} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useAuth} from '../contexts/AuthContext';\n\nexport function PublicRoute({component: Component, ...rest}){\n    const {userData} = useAuth();\n\n    return (\n        <Route {...rest} render={props => !userData ? <Component {...props}/> : <Redirect to='/dashboard'/>}/>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\nimport bcrypt from 'bcryptjs';\nimport TagsInput from 'react-tagsinput';\n\nexport function UpdateForm() {\n\n    const {userData, updateFeatures} = useAuth();\n    const [cap, setCap] = useState(userData.cap);\n    const [gpa, setGpa] = useState(userData.features.gpa);\n    const [majors, setMajors] = useState(userData.features.majors);\n    const [standings, setStandings] = useState(userData.features.standings);\n    const [skills, setSkills] = useState(userData.features.skills);\n    const [interests, setInterests] = useState(userData.features.interests)\n    const [courses, setCourses] = useState(userData.features.courses)\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    async function handleUpdateFeatures() {\n        try {\n            setError('Updated Features');\n            setLoading(true);\n            if(!cap || !gpa || !majors.length || !standings.length || !skills.length || !interests.length || !courses.length) {\n               throw 'Fields not filled out';\n            }\n            await updateFeatures(cap, gpa, majors, standings, skills, interests, courses);\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n    return (\n        <div>\n            Cap: <input value={cap} onChange={e => setCap(e.target.value)}/>\n            <br/>\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\n            <br/>\n            Major: <TagsInput value={majors} onChange={tags => setMajors(tags)}/>\n            <br/>\n            Standing: <TagsInput value={standings} onChange={tags => setStandings(tags)}/>\n            <br/>\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\n            <br/>\n            Interests: <TagsInput value={interests} onChange={tags => setInterests(tags)}/>\n            <br/>\n            Courses: <TagsInput value={courses} onChange={tags => setCourses(tags)}/>\n            <br/>\n            <button onClick={handleUpdateFeatures}>Submit</button>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\n\nexport function ApplicantPanel(){\n\n    const {userData, leaveCluster} = useAuth();\n    const [change, setChange] = useState(false);\n    const [cap, setCap] = useState(1);\n    const [pool, setPool] = useState([]);\n    const [applied, setApplied] = useState([]);\n    const [received, setReceived] = useState([]);\n    const [interested, setInterested] = useState([]);\n    const [reviewed, setReviewed] = useState([]);\n    const [accepted, setAccepted] = useState([]);\n    const [declined, setDeclined] = useState([]);\n    const [rejected, setRejected] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n    useEffect(async () => {\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.all}`).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setCap(data.cap);\n        setPool(data.pool);\n        setApplied(data.applied);\n        setReceived(data.received);\n        setInterested(data.interested);\n        setReviewed(data.reviewed);\n        setAccepted(data.accepted);\n        setDeclined(data.declined);\n        setRejected(data.rejected);\n        setLoading(false);\n    }, [userData, change]);\n\n\n    useEffect(async () => {\n        if(!cap){\n            try {\n                setError('Left Cluster');\n                setLoading(true);\n                await leaveCluster();\n            } catch(err) {\n                setError('Failed to leave cluster')\n            }\n        }\n    }, [cap])\n\n    async function handleSubmitApply(businessId){\n        try {\n            setError('Successfully Applied');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.applied}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'apply',\n                    businessId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setApplied(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to apply');\n        }\n    }\n\n    async function handleCancelApply(businessId){\n        try {\n            setError('Successfully Canceled');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.applied}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'cancel',\n                    businessId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setApplied(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to cancel');\n        }\n    }\n\n    async function handleAcceptReach(businessId){\n        try {\n            setError('Successfully Accepted Reach');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'accept',\n                    businessId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setReceived(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to accept reach');\n        }\n    }\n\n    async function handleDeclineReach(businessId){\n        try {\n            setError('Successfully declined reach');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'decline',\n                    businessId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setReceived(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to decline reach');\n        }\n    }\n\n    async function handleDeclineInterest(businessId){\n        try {\n            setError('Successfully declined communication');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'decline',\n                    businessId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setInterested(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to decline communication');\n        }\n    }\n\n    async function handleAcceptOffer(businessId){\n        try {\n            setError('Successfully Accepted offer');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reviewed}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'accept',\n                    businessId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            try {\n                setError('Left cluster');\n                setLoading(true);\n                await leaveCluster();\n            } catch(err) {\n                setError(err);\n            }\n        } catch(err) {\n            setError('Failed to accept reach');\n        }\n    }\n\n    async function handleDeclineOffer(businessId){\n        try {\n            setError('Successfully declined offer');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reviewed}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'decline',\n                    businessId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setReceived(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to decline offer');\n        }\n    }\n\n    function renderPool(){\n        return pool.map(business => {\n            return (\n                <div>\n                    <h3>{business.name}</h3>\n                    <li>{business.features.skills}</li>\n                    <button onClick={() => handleSubmitApply(business.id)}>Apply</button>\n                </div>\n            )\n        })\n    }\n\n    function renderApplied(){\n        return applied.map(business => {\n            return (\n                <div>\n                    <h3>{business.name}</h3>\n                    <li>{business.features.skills}</li>\n                    <button onClick={() => handleCancelApply(business.id)}>Cancel</button>\n                </div>\n            )\n        })\n    }\n\n    function renderReceived(){\n        return received.map(business => {\n            return (\n                <div>\n                    <h3>{business.name}</h3>\n                    <li>{business.features.skills}</li>\n                    <button onClick={() => handleAcceptReach(business.id)}>Accept</button>\n                    <button onClick={() => handleDeclineReach(business.id)}>Decline</button>\n                </div>\n            )\n        })\n    }\n\n    function renderInterested(){\n        return interested.map(business => {\n            return (\n                <div>\n                    <h3>{business.name}</h3>\n                    <li>{business.features.skills}</li>\n                    <button onClick={() => handleDeclineInterest(business.id)}>Decline</button>\n                </div>\n            )\n        })\n    }\n\n    function renderReviewed(){\n        return reviewed.map(business => {\n            return (\n                <div>\n                    <h3>{business.name}</h3>\n                    <li>{business.features.skills}</li>\n                    <button onClick={() => handleAcceptOffer(business.id)}>Accept</button>\n                    <button onClick={() => handleDeclineOffer(business.id)}>Decline</button>\n                </div>\n            )\n        })\n    }\n\n    function renderAccepted(){\n        return accepted.map(business => {\n            return (\n                <div>\n                    <h3>{business.name}</h3>\n                    <li>{business.features.skills}</li>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div>\n            <h2>Pool</h2>\n            {renderPool()}\n            <br/>\n            <h2>Applied</h2>\n            {renderApplied()}\n            <h2>Received</h2>\n            {renderReceived()}\n            <h2>Interested</h2>\n            {renderInterested()}\n            <h2>Reviewed</h2>\n            {renderReviewed()}\n            <h2>Accepted</h2>\n            {renderAccepted()}\n        </div>\n    );\n}\n\n","import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\n\nexport function BusinessPanel(){\n\n    const {userData, leaveCluster} = useAuth();\n    const [change, setChange] = useState(false);\n    const [cap, setCap] = useState(1);\n    const [pool, setPool] = useState([]);\n    const [reached, setReached] = useState([]);\n    const [received, setReceived] = useState([]);\n    const [interested, setInterested] = useState([]);\n    const [offered, setOffered] = useState([]);\n    const [declined, setDeclined] = useState([]);\n    const [rejected, setRejected] = useState([]);\n    const [accepted, setAccepted] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n\n    useEffect(async () => {\n        const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.all}`).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n        });\n        setCap(data.cap);\n        setPool(data.pool);\n        setReached(data.reached);\n        setReceived(data.received);\n        setInterested(data.interested);\n        setOffered(data.offered);\n        setDeclined(data.declined);\n        setRejected(data.rejected);\n        setAccepted(data.accepted);\n        setLoading(false);\n    }, [userData, change]);\n\n    useEffect(async () => {\n        if(!cap){\n            try {\n                setError('Left cluster');\n                setLoading(true);\n                await leaveCluster()\n            } catch (err) {\n                setError('failed to leave cluster')\n            }\n        }\n    }, [cap])\n\n    async function handleSubmitReach(applicantId){\n        try {\n            setError('Successfully Reached');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reached}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'reach',\n                    applicantId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setReached(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to reach');\n        }\n    }\n\n    async function handleCancelReach(applicantId){\n        try {\n            setError('Successfully Canceled');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.reached}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'cancel',\n                    applicantId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setReached(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to cancel');\n        }\n    }\n\n    async function handleAcceptApply(applicantId){\n        try {\n            setError('Successfully Accepted Apply');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'accept',\n                    applicantId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setReceived(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to accept apply');\n        }\n    }\n\n    async function handleDeclineApply(applicantId){\n        try {\n            setError('Successfully declined apply');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.received}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'decline',\n                    applicantId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setReceived(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to decline apply');\n        }\n    }\n\n    async function handleOfferInterest(applicantId){\n        try {\n            setError('Successfully offered');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'offer',\n                    applicantId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setInterested(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to offer');\n        }\n    }\n\n    async function handleDeclineInterest(applicantId){\n        try {\n            setError('Successfully declined communication');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.interested}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'decline',\n                    applicantId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setInterested(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to decline communication');\n        }\n    }\n\n    async function handleRescindOffer(applicantId){\n        try {\n            setError('Successfully rescinded offer');\n            setLoading(true);\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.offered}`, {\n                method: 'PUT',\n                body: JSON.stringify({\n                    action: 'rescind',\n                    applicantId\n                })\n            }).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setOffered(data);\n            setChange(!change);\n        } catch (err) {\n            setError('Failed to accept reach');\n        }\n    }\n\n\n    function renderPool(){\n        return pool.map(applicant => {\n            return (\n                <div>\n                    <h3>{applicant.name}</h3>\n                    <li>{applicant.features.skills}</li>\n                    <button onClick={() => handleSubmitReach(applicant.id)}>Reach</button>\n                </div>\n            )\n        })\n    }\n\n    function renderReached(){\n        return reached.map(applicant => {\n            return (\n                <div>\n                    <h3>{applicant.name}</h3>\n                    <li>{applicant.features.skills}</li>\n                    <button onClick={() => handleCancelReach(applicant.id)}>Reach</button>\n                </div>\n            )\n        })\n    }\n\n    function renderReceived(){\n        return received.map(applicant => {\n            return (\n                <div>\n                    <h3>{applicant.name}</h3>\n                    <li>{applicant.features.skills}</li>\n                    <button onClick={() => handleAcceptApply(applicant.id)}>Accept</button>\n                    <button onClick={() => handleDeclineApply(applicant.id)}>Decline</button>\n                </div>\n            )\n        })\n    }\n\n    function renderInterested(){\n        return interested.map(applicant => {\n            return (\n                <div>\n                    <h3>{applicant.name}</h3>\n                    <li>{applicant.features.skills}</li>\n                    <button onClick={() => handleOfferInterest(applicant.id)}>Offer</button>\n                    <button onClick={() => handleDeclineInterest(applicant.id)}>Decline</button>\n                </div>\n            )\n        })\n    }\n\n    function renderOffered(){\n        return offered.map(applicant => {\n            return (\n                <div>\n                    <h3>{applicant.name}</h3>\n                    <li>{applicant.features.skills}</li>\n                    <button onClick={() => handleRescindOffer(applicant.id)}>Rescind</button>\n                </div>\n            )\n        })\n    }\n\n    function renderAccepted(){\n        return accepted.map(applicant => {\n            return (\n                <div>\n                    <h3>{applicant.name}</h3>\n                    <li>{applicant.features.skills}</li>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div>\n            <h2>Pool</h2>\n            {renderPool()}\n            <br/>\n            <h2>Reached</h2>\n            {renderReached()}\n            <h2>Received</h2>\n            {renderReceived()}\n            <h2>Interested</h2>\n            {renderInterested()}\n            <h2>Offered</h2>\n            {renderOffered()}\n            <h2>Accepted</h2>\n            {renderAccepted()}\n        </div>\n    );\n}\n\n","import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../../contexts/AuthContext';\nimport {ApplicantPanel} from '../../panels/ApplicantPanel';\nimport {BusinessPanel} from '../../panels/BusinessPanel';\nimport {useHistory} from 'react-router-dom';\n\nexport function ActiveDashboard(){\n\n    const {userData, peelFromCluster, leaveCluster} = useAuth();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    const history = useHistory();\n\n\n    async function handlePeelFromCluster(){\n        try {\n            setError('Peeled From Cluster');\n            setLoading(true);\n            await peelFromCluster();\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n    async function handleLeaveCluster(){\n        try {\n            setError('Left Cluster');\n            setLoading(true);\n            await leaveCluster();\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n\n    return (\n        <div>\n            {userData.type === 'applicant' && <ApplicantPanel/>}\n            {userData.type === 'business' && <BusinessPanel/>}\n            <button disabled={loading} onClick={handlePeelFromCluster}>Peel From Cluster</button>\n            <button disabled={loading} onClick={handleLeaveCluster}>Leave Cluster</button>\n\n        </div>\n    );\n}\n\n","import React, {useState} from 'react';\nimport {useAuth} from '../../../contexts/AuthContext';\nimport {UpdateForm} from '../../forms/UpdateForm';\nimport {useHistory} from 'react-router-dom';\n\nexport function DormantDashboard(){\n\n    const {userData, joinCluster} = useAuth();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    const history = useHistory();\n\n\n    async function handleJoinCluster(){\n        try {\n            setError('Joined Cluster');\n            setLoading(true);\n            const {gpa, majors, standings, skills, interests, courses} = userData.features;\n            if(!gpa || !majors.length || !standings.length || !skills.length || !interests.length || !courses.length) {\n               throw 'Fields not filled out';\n            }\n            await joinCluster();\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n    return (\n        <div>\n            <UpdateForm/>\n            <button disabled={loading} onClick={handleJoinCluster}>Join Cluster</button>\n        </div>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\nimport {UpdateForm} from '../forms/UpdateForm';\nimport {ActiveDashboard} from './sub-pages/ActiveDashboard';\nimport {DormantDashboard} from './sub-pages/DormantDashboard';\nimport {useHistory} from 'react-router-dom';\nimport {NavBar} from '../modules/NavBar';\n\nexport function Dashboard(){\n\n    const {userData, logoutUser, deleteUser} = useAuth();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    const history = useHistory();\n\n    async function handleLogoutUser(){\n        try {\n            setError('Logged Out');\n            setLoading(true);\n            await logoutUser();\n            history.push('/');\n        } catch {\n            setError('Failed to log out');\n        }\n        setLoading(false);\n    }\n\n    async function handleDeleteUser(){\n        try {\n            setError('Successfully deleted');\n            setLoading(true);\n            await deleteUser();\n            history.push('/');\n        } catch(err) {\n            setError(err);\n        }\n        setLoading(false);\n    }\n\n\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            <NavBar />\n            {!userData.clusterId && <DormantDashboard/>}\n            {userData.clusterId && <ActiveDashboard/>}\n            <button disabled={loading} onClick={handleLogoutUser}>Logout</button>\n            <button disabled={loading} onClick={handleDeleteUser}>Delete User</button>\n        </div>\n    );\n}","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useAuth} from '../contexts/AuthContext';\n\nexport function ActivePrivateRoute({component: Component, ...rest}){\n    const {currentUser, userData} = useAuth();\n    return (\n        <Route {...rest} render={props => {\n                if(!currentUser || !userData){\n                    return <Redirect to='/login'/>;\n                } else if(!userData.clusterId){\n                    return <Redirect to='/dormant-dashboard'/>;\n                } else {\n                    return <Component {...props}/>;\n                }\n            }\n        }/>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\nimport io from 'socket.io-client';\n\nconst socket = io.connect(`${process.env.REACT_APP_BACKEND_URL}/messaging`)\n\nexport function ChatPanel(){\n\n    const {userData} = useAuth();\n    const [chatsList, setChatsList] = useState([]);\n    const [chat, setChat] = useState({});\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    socket.on('newMessage', message => setMessages([...messages, message]));\n    socket.on('message', message => setMessages([...messages, message]));\n\n    useEffect(async () => {\n        try {\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${userData.links.chats}`).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            socket.emit('join', {userId: userData.id})\n            setChatsList(data);\n            setChat(data[0] || {});\n        } catch(err) {\n            setError('Failed to grab all chats')\n        }\n    }, [userData]);\n\n    async function handleChatClick(chat){\n        try {\n            const data = await fetch(`${process.env.REACT_APP_BACKEND_URL}${chat.links.messages}`).then(response => {\n                if(response.ok){\n                    return response.json();\n                }\n            });\n            setChat(chat);\n            setMessages(data);\n        } catch(err) {\n            setError('Failed to display chat');\n        }\n    }\n\n    function handleSendMessage(){\n        socket.emit('message', {senderId: chat.senderId, recipientId: chat.recipientId,\n            chatId: chat.id, message});\n        setMessage('');\n    }\n\n    function renderChatsList(){\n        return chatsList.map(chat => {\n            return (\n                <div>\n                    <h3>{chat.recipientName}</h3>\n                    <button onClick={() => handleChatClick(chat)}>Select</button>\n                </div>\n            );\n        });\n    }\n\n    function renderSpecificChat(){\n        return (\n            <div>\n                <h2>{chat.recipientName}</h2>\n                <div>\n                    {messages.map(message => {\n                        return (\n                            <div>\n                                <br/>\n                                {message.message}\n                            </div>\n                        );\n                    })}\n                </div>\n                <br/>\n                <input value={message} onChange={e => setMessage(e.target.value)}/>\n                <button onClick={handleSendMessage}>Send</button>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            {renderChatsList()}\n            <br/>\n            {renderSpecificChat()}\n        </div>\n    )\n\n}","import './App.css';\nimport {HomePage} from './components/pages/HomePage';\nimport {LoginPage} from './components/pages/LoginPage';\nimport {RegistrationPage} from './components/pages/RegistrationPage';\nimport {AccountPage} from './components/pages/AccountPage';\nimport {AuthProvider} from './contexts/AuthContext';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\nimport {PrivateRoute} from './routes/PrivateRoute';\nimport {PublicRoute} from './routes/PublicRoute';\nimport {Dashboard} from './components/pages/Dashboard';\nimport {ActivePrivateRoute} from './routes/ActivePrivateRoute';\nimport {ChatPanel} from './components/panels/ChatPanel';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction App() {\n  return (\n    <Router>\n        <AuthProvider>\n            <Switch>\n                <Route exact path='/' component={HomePage}/>\n                <PublicRoute path='/register' component={RegistrationPage}/>\n                <PublicRoute path='/login' component={LoginPage}/>\n                <PrivateRoute path='/account' component={AccountPage}/>\n                <PrivateRoute path='/dashboard' component={Dashboard}/>\n                <ActivePrivateRoute path='/chats' component={ChatPanel}/>\n            </Switch>\n        </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}