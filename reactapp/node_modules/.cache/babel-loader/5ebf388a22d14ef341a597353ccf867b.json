{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aarun\\\\PycharmProjects\\\\clusters\\\\reactapp\\\\src\\\\components\\\\forms\\\\UpdateApplicantForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport bcrypt from 'bcryptjs';\nimport TagsInput from 'react-tagsinput';\nexport function UpdateApplicantForm() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [oldEmail, setOldEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [major, setMajor] = useState([]);\n  const [standing, setStanding] = useState([]);\n  const [gpa, setGpa] = useState(0);\n  const [skills, setSkills] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    currentUser,\n    updateApplicant\n  } = useAuth();\n\n  async function handleClick() {\n    try {\n      setError('Updated');\n      setLoading(true);\n\n      if (!name || !email || !password || !confirmPassword || !major.length || !standing.length || !gpa || !skills.length) {\n        throw 'Fields not filled out';\n      } else if (password !== confirmPassword) {\n        throw 'Passwords do not match';\n      }\n\n      await updateApplicant(name, email, password, major, standing, gpa, skills);\n    } catch (err) {\n      setError(err);\n    }\n\n    console.log(error);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: currentUser.name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), \"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: currentUser.email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Leave blank to keep the same\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), \"Confirm Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Leave blank to keep the same\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), \"Major: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: currentUser.features.major,\n      onChange: tags => setMajor(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), \"Standing: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: currentUser.features.standing,\n      onChange: tags => setStanding(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), \"GPA: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: currentUser.features.gpa,\n      onChange: e => setGpa(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), \"Skills: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: currentUser.features.skills,\n      onChange: tags => setSkills(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateApplicantForm, \"e2sjTbb4L5RmGP1x+BI9tizmzr4=\", false, function () {\n  return [useAuth];\n});\n\n_c = UpdateApplicantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateApplicantForm\");","map":{"version":3,"sources":["C:/Users/aarun/PycharmProjects/clusters/reactapp/src/components/forms/UpdateApplicantForm.js"],"names":["React","useState","useEffect","useAuth","bcrypt","TagsInput","UpdateApplicantForm","name","setName","email","setEmail","oldEmail","setOldEmail","password","setPassword","confirmPassword","setConfirmPassword","major","setMajor","standing","setStanding","gpa","setGpa","skills","setSkills","error","setError","loading","setLoading","currentUser","updateApplicant","handleClick","length","err","console","log","e","target","value","features","tags"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport bcrypt from 'bcryptjs';\r\nimport TagsInput from 'react-tagsinput';\r\n\r\nexport function UpdateApplicantForm() {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [oldEmail, setOldEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [major, setMajor] = useState([]);\r\n    const [standing, setStanding] = useState([]);\r\n    const [gpa, setGpa] = useState(0);\r\n    const [skills, setSkills] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {currentUser, updateApplicant} = useAuth();\r\n\r\n    async function handleClick() {\r\n        try {\r\n            setError('Updated');\r\n            setLoading(true);\r\n            if(!name || !email || !password || !confirmPassword || !major.length\r\n               || !standing.length || !gpa || !skills.length) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            await updateApplicant(name, email, password, major, standing, gpa, skills);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={currentUser.name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={currentUser.email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' placeholder='Leave blank to keep the same'\r\n                value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' placeholder='Leave blank to keep the same'\r\n                value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={currentUser.features.major} onChange={tags => setMajor(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={currentUser.features.standing} onChange={tags => setStanding(tags)}/>\r\n            <br/>\r\n            GPA: <input value={currentUser.features.gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={currentUser.features.skills} onChange={tags => setSkills(tags)}/>\r\n            <button onClick={() => handleClick()}>Submit</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}