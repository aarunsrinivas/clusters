{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aarun\\\\PycharmProjects\\\\clusters\\\\reactapp\\\\src\\\\components\\\\pages\\\\ApplicantDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useHistory } from 'react-router-dom';\nexport function ApplicantDashboard() {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const [pool, setPool] = useState([]);\n  const [applied, setApplied] = useState([]);\n  const [received, setReceived] = useState([]);\n  const [interested, setInterested] = useState([]);\n  const [reviewed, setReviewed] = useState([]);\n  const [declined, setDeclined] = useState([]);\n  const [rejected, setRejected] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const history = useHistory();\n  useEffect(async () => {\n    const data = await fetch(currentUser.links.all).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n    setPool(data.pool);\n    setApplied(data.applied);\n    setReceived(data.received);\n    setInterested(data.interested);\n    setReviewed(data.reviewed);\n    setDeclined(data.declined);\n    setRejected(data.rejected);\n  }, [currentUser, applied, received, interested, reviewed, declined]);\n\n  async function handleApply(businessId) {\n    try {\n      setError('Successfully Applied');\n      setLoading(true);\n      const data = await fetch(currentUser.links.applied, {\n        method: 'PUT',\n        body: JSON.stringify({\n          action: 'apply',\n          businessId\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n      setApplied(data);\n    } catch (err) {\n      setError('Failed to apply');\n    }\n  }\n\n  async function handleCancelApply(businessId) {\n    try {\n      setError('Successfully Canceled');\n      setLoading(true);\n      const data = await fetch(currentUser.links.applied, {\n        method: 'PUT',\n        body: JSON.stringify({\n          action: 'cancel',\n          businessId\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n      setApplied(data);\n    } catch (err) {\n      setError('Failed to cancel');\n    }\n  }\n\n  async function handleReceive(businessId) {\n    try {\n      setError('Successfully Accepted Reach');\n      setLoading(true);\n      const data = await fetch(currentUser.links.received, {\n        method: 'PUT',\n        body: JSON.stringify({\n          action: 'accept',\n          businessId\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n      setReceived(data);\n    } catch (err) {\n      setError('Failed to accept reach');\n    }\n  }\n\n  async function handleDeclineReceive(businessId) {\n    try {\n      setError('Successfully declined reach');\n      setLoading(true);\n      const data = await fetch(currentUser.links.received, {\n        method: 'PUT',\n        body: JSON.stringify({\n          action: 'cancel',\n          businessId\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n      setReceived(data);\n    } catch (err) {\n      setError('Failed to cancel');\n    }\n  }\n\n  async function handleReview(businessId) {\n    try {\n      setError('Successfully Accepted offer');\n      setLoading(true);\n      const data = await fetch(currentUser.links.reviewed, {\n        method: 'PUT',\n        body: JSON.stringify({\n          action: 'accept',\n          businessId\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n      setReviewed(data);\n    } catch (err) {\n      setError('Failed to accept reach');\n    }\n  }\n\n  async function handleDeclineReview(businessId) {\n    try {\n      setError('Successfully declined reach');\n      setLoading(true);\n      const data = await fetch(currentUser.links.reviewed, {\n        method: 'PUT',\n        body: JSON.stringify({\n          action: 'cancel',\n          businessId\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n      setReceived(data);\n    } catch (err) {\n      setError('Failed to cancel');\n    }\n  }\n  /*\r\n  async function handleReviewOffer(businessId){\r\n      try {\r\n          setError('Successfully Accepted Offer');\r\n          setLoading(true);\r\n          const data = await fetch(currentUser.links.reviewed, {\r\n              method: 'PUT',\r\n              body: JSON.stringify({\r\n                  action: 'accept',\r\n                  businessId\r\n              })\r\n          }).then(response => {\r\n              if(response.ok){\r\n                  return response.json();\r\n              }\r\n          });\r\n          setApplied(data);\r\n      } catch (err) {\r\n          setError('Failed to apply');\r\n      }\r\n  }\r\n    async function handleDeclineOffer(businessId){\r\n      try {\r\n          setError('Successfully Canceled');\r\n          setLoading(true);\r\n          const data = await fetch(currentUser.links.reviewed, {\r\n              method: 'PUT',\r\n              body: JSON.stringify({\r\n                  action: 'decline',\r\n                  businessId\r\n              })\r\n          }).then(response => {\r\n              if(response.ok){\r\n                  return response.json();\r\n              }\r\n          });\r\n          setApplied(data);\r\n      } catch (err) {\r\n          setError('Failed to cancel');\r\n      }\r\n  }\r\n  */\n\n\n  function renderPool() {\n    return pool.map(business => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: business.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: business.features.skills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleApplyBusiness(business.id),\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  function renderApplied() {\n    return applied.map(business => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: business.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: business.features.skills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCancelApply(business.id),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), renderPool(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Applied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), renderApplied()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApplicantDashboard, \"VFfI8ijXYa70ORLYPvzMZUumEas=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = ApplicantDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicantDashboard\");","map":{"version":3,"sources":["C:/Users/aarun/PycharmProjects/clusters/reactapp/src/components/pages/ApplicantDashboard.js"],"names":["React","useState","useEffect","useAuth","useHistory","ApplicantDashboard","currentUser","pool","setPool","applied","setApplied","received","setReceived","interested","setInterested","reviewed","setReviewed","declined","setDeclined","rejected","setRejected","loading","setLoading","error","setError","history","data","fetch","links","all","then","response","ok","json","handleApply","businessId","method","body","JSON","stringify","action","err","handleCancelApply","handleReceive","handleDeclineReceive","handleReview","handleDeclineReview","renderPool","map","business","name","features","skills","handleApplyBusiness","id","renderApplied"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport function ApplicantDashboard(){\r\n\r\n    const {currentUser} = useAuth();\r\n    const [pool, setPool] = useState([]);\r\n    const [applied, setApplied] = useState([]);\r\n    const [received, setReceived] = useState([]);\r\n    const [interested, setInterested] = useState([]);\r\n    const [reviewed, setReviewed] = useState([]);\r\n    const [declined, setDeclined] = useState([]);\r\n    const [rejected, setRejected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        const data = await fetch(currentUser.links.all).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setPool(data.pool);\r\n        setApplied(data.applied);\r\n        setReceived(data.received);\r\n        setInterested(data.interested);\r\n        setReviewed(data.reviewed);\r\n        setDeclined(data.declined);\r\n        setRejected(data.rejected);\r\n    }, [currentUser, applied, received, interested, reviewed, declined]);\r\n\r\n    async function handleApply(businessId){\r\n        try {\r\n            setError('Successfully Applied');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.applied, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'apply',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n        } catch (err) {\r\n            setError('Failed to apply');\r\n        }\r\n    }\r\n\r\n    async function handleCancelApply(businessId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.applied, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n    async function handleReceive(businessId){\r\n        try {\r\n            setError('Successfully Accepted Reach');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.received, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n        } catch (err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineReceive(businessId){\r\n        try {\r\n            setError('Successfully declined reach');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.received, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n    async function handleReview(businessId){\r\n        try {\r\n            setError('Successfully Accepted offer');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.reviewed, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReviewed(data);\r\n        } catch (err) {\r\n            setError('Failed to accept reach');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineReview(businessId){\r\n        try {\r\n            setError('Successfully declined reach');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.reviewed, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'cancel',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setReceived(data);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /*\r\n    async function handleReviewOffer(businessId){\r\n        try {\r\n            setError('Successfully Accepted Offer');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.reviewed, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'accept',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n        } catch (err) {\r\n            setError('Failed to apply');\r\n        }\r\n    }\r\n\r\n    async function handleDeclineOffer(businessId){\r\n        try {\r\n            setError('Successfully Canceled');\r\n            setLoading(true);\r\n            const data = await fetch(currentUser.links.reviewed, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    action: 'decline',\r\n                    businessId\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setApplied(data);\r\n        } catch (err) {\r\n            setError('Failed to cancel');\r\n        }\r\n    }\r\n    */\r\n\r\n    function renderPool(){\r\n        return pool.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleApplyBusiness(business.id)}>Apply</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderApplied(){\r\n        return applied.map(business => {\r\n            return (\r\n                <div>\r\n                    <h3>{business.name}</h3>\r\n                    <li>{business.features.skills}</li>\r\n                    <button onClick={() => handleCancelApply(business.id)}>Cancel</button>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pool</h2>\r\n            {renderPool()}\r\n            <br/>\r\n            <h2>Applied</h2>\r\n            {renderApplied()}\r\n        </div>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}