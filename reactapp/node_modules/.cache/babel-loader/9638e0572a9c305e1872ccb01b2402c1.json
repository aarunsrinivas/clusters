{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/UpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport bcrypt from 'bcryptjs';\nimport TagsInput from 'react-tagsinput';\nexport function UpdateForm() {\n  _s();\n\n  const {\n    currentUser,\n    updateUser\n  } = useAuth();\n  const [name, setName] = useState(currentUser.name);\n  const [email, setEmail] = useState(currentUser.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [major, setMajor] = useState(currentUser.features.major);\n  const [standing, setStanding] = useState(currentUser.features.standing);\n  const [gpa, setGpa] = useState(currentUser.features.gpa);\n  const [skills, setSkills] = useState(currentUser.features.skills);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  async function handleUpdate() {\n    try {\n      setError('Updated');\n      setLoading(true);\n\n      if (!name || !email || !major.length || !standing.length || !gpa || !skills.length) {\n        throw 'Fields not filled out';\n      } else if (password !== confirmPassword) {\n        throw 'Passwords do not match';\n      }\n\n      await updateUser(name, email, password, major, standing, gpa, skills);\n    } catch (err) {\n      setError(err);\n    }\n\n    console.log(error);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), \"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Leave blank to keep the same\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), \"Confirm Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Leave blank to keep the same\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), \"Major: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: major,\n      onChange: tags => setMajor(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), \"Standing: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: standing,\n      onChange: tags => setStanding(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), \"GPA: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: gpa,\n      onChange: e => setGpa(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), \"Skills: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: skills,\n      onChange: tags => setSkills(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleUpdate(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateForm, \"FzvfY3DgKXWRJpld7C2ftitT0vc=\", false, function () {\n  return [useAuth];\n});\n\n_c = UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/UpdateForm.js"],"names":["React","useState","useEffect","useAuth","bcrypt","TagsInput","UpdateForm","currentUser","updateUser","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","major","setMajor","features","standing","setStanding","gpa","setGpa","skills","setSkills","error","setError","loading","setLoading","handleUpdate","length","err","console","log","e","target","value","tags"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\nimport bcrypt from 'bcryptjs';\nimport TagsInput from 'react-tagsinput';\n\nexport function UpdateForm() {\n\n    const {currentUser, updateUser} = useAuth();\n    const [name, setName] = useState(currentUser.name);\n    const [email, setEmail] = useState(currentUser.email);\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [major, setMajor] = useState(currentUser.features.major);\n    const [standing, setStanding] = useState(currentUser.features.standing);\n    const [gpa, setGpa] = useState(currentUser.features.gpa);\n    const [skills, setSkills] = useState(currentUser.features.skills);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    async function handleUpdate() {\n        try {\n            setError('Updated');\n            setLoading(true);\n            if(!name || !email || !major.length\n               || !standing.length || !gpa || !skills.length) {\n               throw 'Fields not filled out';\n            } else if(password !== confirmPassword){\n                throw 'Passwords do not match';\n            }\n            await updateUser(name, email, password, major, standing, gpa, skills);\n        } catch(err) {\n            setError(err);\n        }\n        console.log(error);\n        setLoading(false);\n    }\n\n    return (\n        <div>\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\n            <br/>\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\n            <br/>\n            Password: <input type='password' placeholder='Leave blank to keep the same'\n                value={password} onChange={e => setPassword(e.target.value)}/>\n            <br/>\n            Confirm Password: <input type='password' placeholder='Leave blank to keep the same'\n                value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\n            <br/>\n            Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\n            <br/>\n            Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\n            <br/>\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\n            <br/>\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\n            <button onClick={() => handleUpdate()}>Submit</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}