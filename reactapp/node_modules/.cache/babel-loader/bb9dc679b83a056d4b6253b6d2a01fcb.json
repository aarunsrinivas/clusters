{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aarun\\\\PycharmProjects\\\\clusters\\\\reactapp\\\\src\\\\components\\\\forms\\\\WorldForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nexport function WorldForm() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [courses, setCourses] = useState([]);\n  const [majors, setMajors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  async function handleRegisterWorld() {\n    setError('Registered');\n    setLoading(true);\n\n    if (!name || !majors.lengths || !courses.lengths) {\n      throw 'Fields not filled out';\n    }\n\n    await fetch('/worlds', {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        majors,\n        courses\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), \"Majors: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: majors,\n      onChange: tags => setMajors(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"Courses: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: courses,\n      onChange: tags => setCourses(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading,\n      onClick: handleRegisterWorld,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorldForm, \"4lml/Zclc/TvJYps4AkMUsEK2do=\", false, function () {\n  return [useHistory];\n});\n\n_c = WorldForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorldForm\");","map":{"version":3,"sources":["C:/Users/aarun/PycharmProjects/clusters/reactapp/src/components/forms/WorldForm.js"],"names":["React","useState","useHistory","TagsInput","WorldForm","name","setName","courses","setCourses","majors","setMajors","loading","setLoading","error","setError","history","handleRegisterWorld","lengths","fetch","method","body","JSON","stringify","then","response","ok","json","e","target","value","tags"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,SAASC,SAAT,GAAoB;AAAA;;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMc,OAAO,GAAGb,UAAU,EAA1B;;AAEA,iBAAec,mBAAf,GAAoC;AAChCF,IAAAA,QAAQ,CAAC,YAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG,CAACP,IAAD,IAAS,CAACI,MAAM,CAACQ,OAAjB,IAA4B,CAACV,OAAO,CAACU,OAAxC,EAAgD;AAC5C,YAAM,uBAAN;AACH;;AACD,UAAMC,KAAK,CAAC,SAAD,EAAY;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjB,QAAAA,IADiB;AAEjBI,QAAAA,MAFiB;AAGjBF,QAAAA;AAHiB,OAAf;AAFa,KAAZ,CAAL,CAOHgB,IAPG,CAOEC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAXK,CAAN;AAYAd,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,sBACI;AAAA,sCACU;AAAO,MAAA,KAAK,EAAEP,IAAd;AAAoB,MAAA,QAAQ,EAAEsB,CAAC,IAAIrB,OAAO,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA,YADV,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,2BAGY,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEpB,MAAlB;AAA0B,MAAA,QAAQ,EAAEqB,IAAI,IAAIpB,SAAS,CAACoB,IAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YAHZ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,4BAKa,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEvB,OAAlB;AAA2B,MAAA,QAAQ,EAAEuB,IAAI,IAAItB,UAAU,CAACsB,IAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,YALb,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,QAAQ,EAAEnB,OAAlB;AAA2B,MAAA,OAAO,EAAEK,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1CeZ,S;UAOIF,U;;;KAPJE,S","sourcesContent":["import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput'\r\n\r\nexport function WorldForm(){\r\n\r\n    const [name, setName] = useState('');\r\n    const [courses, setCourses] = useState([]);\r\n    const [majors, setMajors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n\r\n    async function handleRegisterWorld(){\r\n        setError('Registered');\r\n        setLoading(true);\r\n        if(!name || !majors.lengths || !courses.lengths){\r\n            throw 'Fields not filled out';\r\n        }\r\n        await fetch('/worlds', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name,\r\n                majors,\r\n                courses\r\n            })\r\n        }).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Majors: <TagsInput value={majors} onChange={tags => setMajors(tags)}/>\r\n            <br/>\r\n            Courses: <TagsInput value={courses} onChange={tags => setCourses(tags)}/>\r\n            <br/>\r\n            <button disabled={loading} onClick={handleRegisterWorld}>Submit</button>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}