{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/RegistrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Form from 'react-bootstrap/Form';\nexport function RegistrationForm() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [type, setType] = useState('');\n  const [major, setMajor] = useState([]);\n  const [standing, setStanding] = useState([]);\n  const [gpa, setGpa] = useState(0);\n  const [skills, setSkills] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    registerUser\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleRegisterUser() {\n    try {\n      setError('Registered');\n      setLoading(true);\n\n      if (!name || !email || !password || !confirmPassword || !type || !major.length || !standing.length || !gpa || !skills.length) {\n        throw 'Fields not filled out';\n      } else if (password !== confirmPassword) {\n        throw 'Passwords do not match';\n      }\n\n      await registerUser(name, email, password, type, major, standing, gpa, skills);\n      history.push('/dormant-dashboard');\n    } catch (err) {\n      setError(err);\n    }\n\n    console.log(error);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: ['radio'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        inline: true,\n        label: \"1\",\n        type: type,\n        id: `inline-${type}-1`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        inline: true,\n        label: \"2\",\n        type: type,\n        id: `inline-${type}-2`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        inline: true,\n        disabled: true,\n        label: \"3 (disabled)\",\n        type: type,\n        id: `inline-${type}-3`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, `inline-${type}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this) // <div>\n  //     Type:\n  //     <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\n  //     <input type='radio' name='type' onClick={() => setType('business')}/> Business\n  //     <br/>\n  //     Name: <input value={name} onChange={e => setName(e.target.value)}/>\n  //     <br/>\n  //     Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\n  //     <br/>\n  //     Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n  //     <br/>\n  //     Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\n  //     <br/>\n  //     Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\n  //     <br/>\n  //     Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\n  //     <br/>\n  //     GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\n  //     <br/>\n  //     Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\n  //     <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\n  //     <div>\n  //         Already Have an Account? <Link to='/login'>Log In</Link>\n  //     </div>\n  // </div>\n  ;\n}\n\n_s(RegistrationForm, \"t3h8RM0s0yPS1y9Q9/LB16OocZk=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/RegistrationForm.js"],"names":["React","useState","useEffect","Link","useHistory","TagsInput","useAuth","Form","RegistrationForm","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","type","setType","major","setMajor","standing","setStanding","gpa","setGpa","skills","setSkills","error","setError","loading","setLoading","registerUser","history","handleRegisterUser","length","push","err","console","log","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport {useAuth} from '../../contexts/AuthContext';\nimport Form from 'react-bootstrap/Form';\n\n\nexport function RegistrationForm() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [type, setType] = useState('')\n    const [major, setMajor] = useState([]);\n    const [standing, setStanding] = useState([]);\n    const [gpa, setGpa] = useState(0);\n    const [skills, setSkills] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const {registerUser} = useAuth();\n    const history = useHistory();\n\n\n    async function handleRegisterUser() {\n        try {\n            setError('Registered');\n            setLoading(true);\n            if(!name || !email || !password || !confirmPassword || !type || !major.length\n               || !standing.length || !gpa || !skills.length) {\n               throw 'Fields not filled out';\n            } else if(password !== confirmPassword){\n                throw 'Passwords do not match';\n            }\n            await registerUser(name, email, password, type, major, standing, gpa, skills);\n            history.push('/dormant-dashboard');\n        } catch(err) {\n            setError(err);\n        }\n        console.log(error);\n        setLoading(false);\n    }\n\n    return (\n        <Form>\n        {['radio'].map((type) => (\n            <div key={`inline-${type}`} className=\"mb-3\">\n            <Form.Check inline label=\"1\" type={type} id={`inline-${type}-1`} />\n            <Form.Check inline label=\"2\" type={type} id={`inline-${type}-2`} />\n            <Form.Check\n                inline\n                disabled\n                label=\"3 (disabled)\"\n                type={type}\n                id={`inline-${type}-3`}\n            />\n            </div>\n        ))}\n        </Form>\n\n        // <div>\n        //     Type:\n        //     <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\n        //     <input type='radio' name='type' onClick={() => setType('business')}/> Business\n        //     <br/>\n        //     Name: <input value={name} onChange={e => setName(e.target.value)}/>\n        //     <br/>\n        //     Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\n        //     <br/>\n        //     Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n        //     <br/>\n        //     Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\n        //     <br/>\n        //     Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\n        //     <br/>\n        //     Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\n        //     <br/>\n        //     GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\n        //     <br/>\n        //     Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\n        //     <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\n        //     <div>\n        //         Already Have an Account? <Link to='/login'>Log In</Link>\n        //     </div>\n        // </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}