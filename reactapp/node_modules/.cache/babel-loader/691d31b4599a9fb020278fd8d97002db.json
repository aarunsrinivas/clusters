{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aarun\\\\PycharmProjects\\\\clusters\\\\reactapp\\\\src\\\\components\\\\forms\\\\WorldForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport { useAuth } from '../../contexts/AuthContext';\nexport function WorldForm() {\n  _s();\n\n  const [id, setId] = useState('');\n  const [courses, setCourses] = useState([]);\n  const [majors, setMajors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    createWorld\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleRegisterWorld() {\n    try {\n      setError('World Created');\n      setLoading(true);\n\n      if (!id || !majors.length || !courses.length) {\n        throw 'Fields not filled out';\n      }\n\n      await createWorld(id, majors, courses);\n    } catch (err) {\n      setError(err);\n    }\n\n    console.log(error);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), \"Majors: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: majors,\n      onChange: tags => setMajors(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), \"Courses: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: courses,\n      onChange: tags => setCourses(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading,\n      onClick: handleRegisterWorld,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WorldForm, \"4rt2BE2OW8ztK2azoIAPPof9+SE=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = WorldForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorldForm\");","map":{"version":3,"sources":["C:/Users/aarun/PycharmProjects/clusters/reactapp/src/components/forms/WorldForm.js"],"names":["React","useState","useHistory","TagsInput","useAuth","WorldForm","id","setId","courses","setCourses","majors","setMajors","loading","setLoading","error","setError","createWorld","history","handleRegisterWorld","length","err","console","log","e","target","value","tags"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AAEA,OAAO,SAASC,SAAT,GAAoB;AAAA;;AAEvB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACe,IAAAA;AAAD,MAAgBZ,OAAO,EAA7B;AACA,QAAMa,OAAO,GAAGf,UAAU,EAA1B;;AAEA,iBAAegB,mBAAf,GAAoC;AAChC,QAAI;AACAH,MAAAA,QAAQ,CAAC,eAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAG,CAACP,EAAD,IAAO,CAACI,MAAM,CAACS,MAAf,IAAyB,CAACX,OAAO,CAACW,MAArC,EAA4C;AACxC,cAAM,uBAAN;AACH;;AACD,YAAMH,WAAW,CAACV,EAAD,EAAKI,MAAL,EAAaF,OAAb,CAAjB;AACH,KAPD,CAOE,OAAMY,GAAN,EAAW;AACTL,MAAAA,QAAQ,CAACK,GAAD,CAAR;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,sBACI;AAAA,sCACU;AAAO,MAAA,KAAK,EAAEP,EAAd;AAAkB,MAAA,QAAQ,EAAEiB,CAAC,IAAIhB,KAAK,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtC;AAAA;AAAA;AAAA;AAAA,YADV,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,2BAGY,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEf,MAAlB;AAA0B,MAAA,QAAQ,EAAEgB,IAAI,IAAIf,SAAS,CAACe,IAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YAHZ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,4BAKa,QAAC,SAAD;AAAW,MAAA,KAAK,EAAElB,OAAlB;AAA2B,MAAA,QAAQ,EAAEkB,IAAI,IAAIjB,UAAU,CAACiB,IAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,YALb,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,QAAQ,EAAEd,OAAlB;AAA2B,MAAA,OAAO,EAAEM,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GArCeb,S;UAOUD,O,EACNF,U;;;KARJG,S","sourcesContent":["import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput'\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\nexport function WorldForm(){\r\n\r\n    const [id, setId] = useState('');\r\n    const [courses, setCourses] = useState([]);\r\n    const [majors, setMajors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const {createWorld} = useAuth();\r\n    const history = useHistory();\r\n\r\n    async function handleRegisterWorld(){\r\n        try {\r\n            setError('World Created');\r\n            setLoading(true);\r\n            if(!id || !majors.length || !courses.length){\r\n                throw 'Fields not filled out';\r\n            }\r\n            await createWorld(id, majors, courses);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={id} onChange={e => setId(e.target.value)}/>\r\n            <br/>\r\n            Majors: <TagsInput value={majors} onChange={tags => setMajors(tags)}/>\r\n            <br/>\r\n            Courses: <TagsInput value={courses} onChange={tags => setCourses(tags)}/>\r\n            <br/>\r\n            <button disabled={loading} onClick={handleRegisterWorld}>Submit</button>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}