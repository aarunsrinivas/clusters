{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aarun\\\\PycharmProjects\\\\clusters\\\\reactapp\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport io from 'socket.io-client';\nconst socket = io.connect('http://127.0.0.1:5000/messaging');\nexport function ChatRoom() {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const [chatsList, setChatsList] = useState([]);\n  const [chat, setChat] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  socket.on('newMessage', message => setMessages([...messages, message]));\n  socket.on('message', message => setMessages([...messages, message]));\n  useEffect(async () => {\n    try {\n      const data = await fetch(currentUser.links.chats).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n      socket.emit('join', {\n        userId: currentUser.id\n      });\n      setChatsList(data);\n      setChat(data[0] || {});\n    } catch (err) {\n      setError('Failed to grab all chats');\n    }\n  }, [currentUser]);\n\n  async function handleChatClick(chat) {\n    try {\n      const data = await fetch(chat.links.messages).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      });\n      setChat(chat);\n      setMessages(data);\n    } catch (err) {\n      setError('Failed to display chat');\n    }\n  }\n\n  function handleSendMessage() {\n    socket.emit('message', {\n      senderId: chat.senderId,\n      recipientId: chat.recipientId,\n      chatId: chat.id,\n      message\n    });\n    setMessage('');\n  }\n\n  function renderChatsList() {\n    return chatsList.map(chat => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: chat.recipientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChatClick(chat),\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  function renderSpecificChat() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chat.recipientName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), currentUser.id === message.origin && '&emsp;', message.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderChatsList(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), renderSpecificChat()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatRoom, \"BtGndSNs5iZCIATV46XKaOrXNXU=\", false, function () {\n  return [useAuth];\n});\n\n_c = ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/aarun/PycharmProjects/clusters/reactapp/src/components/ChatRoom.js"],"names":["React","useState","useEffect","useAuth","io","socket","connect","ChatRoom","currentUser","chatsList","setChatsList","chat","setChat","messages","setMessages","message","setMessage","error","setError","on","data","fetch","links","chats","then","response","ok","json","emit","userId","id","err","handleChatClick","handleSendMessage","senderId","recipientId","chatId","renderChatsList","map","recipientName","renderSpecificChat","origin","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useAuth} from '../contexts/AuthContext';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io.connect('http://127.0.0.1:5000/messaging');\r\n\r\nexport function ChatRoom(){\r\n\r\n    const {currentUser} = useAuth();\r\n    const [chatsList, setChatsList] = useState([]);\r\n    const [chat, setChat] = useState({});\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    socket.on('newMessage', message => setMessages([...messages, message]));\r\n    socket.on('message', message => setMessages([...messages, message]));\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await fetch(currentUser.links.chats).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            socket.emit('join', {userId: currentUser.id})\r\n            setChatsList(data);\r\n            setChat(data[0] || {});\r\n        } catch(err) {\r\n            setError('Failed to grab all chats')\r\n        }\r\n    }, [currentUser]);\r\n\r\n    async function handleChatClick(chat){\r\n        try {\r\n            const data = await fetch(chat.links.messages).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            });\r\n            setChat(chat);\r\n            setMessages(data);\r\n        } catch(err) {\r\n            setError('Failed to display chat');\r\n        }\r\n    }\r\n\r\n    function handleSendMessage(){\r\n        socket.emit('message', {senderId: chat.senderId, recipientId: chat.recipientId,\r\n            chatId: chat.id, message});\r\n        setMessage('');\r\n    }\r\n\r\n    function renderChatsList(){\r\n        return chatsList.map(chat => {\r\n            return (\r\n                <div>\r\n                    <h3>{chat.recipientName}</h3>\r\n                    <button onClick={() => handleChatClick(chat)}>Select</button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    function renderSpecificChat(){\r\n        return (\r\n            <div>\r\n                <h2>{chat.recipientName}</h2>\r\n                <div>\r\n                    {messages.map(message => {\r\n                        return (\r\n                            <div>\r\n                                <br/>\r\n                                {currentUser.id === message.origin && '&emsp;'}\r\n                                {message.message}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <br/>\r\n                <input value={message} onChange={e => setMessage(e.target.value)}/>\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderChatsList()}\r\n            <br/>\r\n            {renderSpecificChat()}\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}