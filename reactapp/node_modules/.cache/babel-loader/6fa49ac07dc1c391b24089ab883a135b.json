{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aarun\\\\PycharmProjects\\\\clusters\\\\reactapp\\\\src\\\\components\\\\forms\\\\ApplicantLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport bcrypt from 'bcryptjs'; //const bcrypt = require('bcryptjs');\n\nexport function ApplicantLogin() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState({});\n\n  const handleEmailChange = e => {\n    e.preventDefault();\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    e.preventDefault();\n    setPassword(e.target.value);\n  };\n\n  const handleClick = () => {\n    fetch(`/applicants?email=${email}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => {\n      setUser(data[0]);\n    });\n  };\n\n  useEffect(() => {\n    if (user === undefined || password !== user.password) {\n      console.log('incorrect login');\n    } else {\n      console.log(bcrypt.hash(password, 10));\n      console.log(bcrypt.compare(user.password, password));\n      console.log('logging in');\n    }\n\n    setEmail('');\n    setPassword('');\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => handleEmailChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => handlePasswordChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApplicantLogin, \"zpZGhpZiFeMHG3t+R7KcBuEPbIc=\");\n\n_c = ApplicantLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicantLogin\");","map":{"version":3,"sources":["C:/Users/aarun/PycharmProjects/clusters/reactapp/src/components/forms/ApplicantLogin.js"],"names":["React","useState","useEffect","bcrypt","ApplicantLogin","email","setEmail","password","setPassword","user","setUser","handleEmailChange","e","preventDefault","target","value","handlePasswordChange","handleClick","fetch","then","response","ok","json","data","undefined","console","log","hash","compare"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AAEA,OAAO,SAASC,cAAT,GAA0B;AAAA;;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMU,iBAAiB,GAAGC,CAAC,IAAI;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,QAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACH,GAHD;;AAKA,QAAMC,oBAAoB,GAAGJ,CAAC,IAAI;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,WAAW,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX;AACH,GAHD;;AAKC,QAAME,WAAW,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAE,qBAAoBb,KAAM,EAA5B,CAAL,CAAoCc,IAApC,CAAyCC,QAAQ,IAAI;AACjD,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,IAAI,IAAI;AACZb,MAAAA,OAAO,CAACa,IAAI,CAAC,CAAD,CAAL,CAAP;AACH,KAND;AAOH,GARA;;AAUDrB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGO,IAAI,KAAKe,SAAT,IAAsBjB,QAAQ,KAAKE,IAAI,CAACF,QAA3C,EAAoD;AAChDkB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAM,CAACwB,IAAP,CAAYpB,QAAZ,EAAsB,EAAtB,CAAZ;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAM,CAACyB,OAAP,CAAenB,IAAI,CAACF,QAApB,EAA8BA,QAA9B,CAAZ;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AACDpB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAVQ,EAUN,CAACC,IAAD,CAVM,CAAT;AAaA,sBACI;AAAA,4BACI;AAAO,MAAA,KAAK,EAAEJ,KAAd;AAAqB,MAAA,QAAQ,EAAEO,CAAC,IAAID,iBAAiB,CAACC,CAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAEL,QAA9B;AAAwC,MAAA,QAAQ,EAAEK,CAAC,IAAII,oBAAoB,CAACJ,CAAD;AAA3E;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMK,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA/Ceb,c;;KAAAA,c","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport bcrypt from 'bcryptjs'\r\n\r\n//const bcrypt = require('bcryptjs');\r\n\r\nexport function ApplicantLogin() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [user, setUser] = useState({});\r\n\r\n    const handleEmailChange = e => {\r\n        e.preventDefault();\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = e => {\r\n        e.preventDefault();\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n     const handleClick = () => {\r\n        fetch(`/applicants?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        }).then(data => {\r\n            setUser(data[0]);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(user === undefined || password !== user.password){\r\n            console.log('incorrect login');\r\n        } else {\r\n            console.log(bcrypt.hash(password, 10));\r\n            console.log(bcrypt.compare(user.password, password));\r\n            console.log('logging in');\r\n        }\r\n        setEmail('');\r\n        setPassword('');\r\n    }, [user]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={email} onChange={e => handleEmailChange(e)}/>\r\n            <br/>\r\n            <input type='password' value={password} onChange={e => handlePasswordChange(e)}/>\r\n            <button onClick={() => handleClick()}>Submit</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}