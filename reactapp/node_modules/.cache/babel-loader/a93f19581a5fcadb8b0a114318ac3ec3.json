{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport bcrypt from 'bcryptjs';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport \"./Form.css\";\nexport function LoginForm() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    loginUser\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleLoginUser() {\n    try {\n      setError('Logged In');\n      setLoading(true);\n\n      if (!email || !password) {\n        throw 'Fields are required';\n      }\n\n      const data = await loginUser(email, password);\n      const destination = data.clusterId ? '/active-dashboard' : '/dormant-dashboard';\n      history.push(destination);\n    } catch (err) {\n      setError(err);\n    }\n\n    console.log(error);\n    setLoading(false);\n  }\n\n  ;\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <div className=\"form-container\">\n    //         <h1 className=\"form-header\">Login</h1>\n    //         <Form>\n    //             <Form.Group controlId=\"email\">\n    //                 <Form.Label>Email Address</Form.Label>\n    //                 <Form.Control type=\"email\" placeholder=\"Enter Email\" \n    //                 value={email} onChange={e => setEmail(e.target.value)} />\n    //             </Form.Group>\n    //             <Form.Group controlId=\"password\">\n    //                 <Form.Label>Password</Form.Label>\n    //                 <Form.Control type=\"password\" placeholder=\"Enter Password\" \n    //                 value={password} onChange={e => setPassword(e.target.value)} />\n    //             </Form.Group>\n    //             <div className=\"form-button\">\n    //                 <Button variant=\"primary\" type=\"submit\" onClick={handleLoginUser}>\n    //                     Submit\n    //                 </Button>\n    //             </div>\n    //         </Form>\n    //     </div>\n    //     <div className=\"form-register-redirect\">\n    //             <span><p>Need an Account? <Link to='/register'>Register</Link></p></span>\n    //     </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoginUser,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Need an Account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(LoginForm, \"bfLrHFsia+BQ48IRyn9xppRNAh4=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/LoginForm.js"],"names":["React","useState","useEffect","useAuth","bcrypt","Link","useHistory","Form","Button","Col","LoginForm","email","setEmail","password","setPassword","error","setError","loading","setLoading","loginUser","history","handleLoginUser","data","destination","clusterId","push","err","console","log","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,GAHJ,QAIO,iBAJP;AAKA,OAAO,YAAP;AAGA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAACkB,IAAAA;AAAD,MAAchB,OAAO,EAA3B;AACA,QAAMiB,OAAO,GAAGd,UAAU,EAA1B;;AAEC,iBAAee,eAAf,GAAiC;AAC9B,QAAI;AACAL,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAG,CAACP,KAAD,IAAU,CAACE,QAAd,EAAuB;AACnB,cAAM,qBAAN;AACH;;AACD,YAAMS,IAAI,GAAG,MAAMH,SAAS,CAACR,KAAD,EAAQE,QAAR,CAA5B;AACA,YAAMU,WAAW,GAAGD,IAAI,CAACE,SAAL,GAAiB,mBAAjB,GAAuC,oBAA3D;AACAJ,MAAAA,OAAO,CAACK,IAAR,CAAaF,WAAb;AACH,KATD,CASE,OAAMG,GAAN,EAAW;AACTV,MAAAA,QAAQ,CAACU,GAAD,CAAR;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAAA;AAGD;AAAA;AAEI;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAMA;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEP,KAAd;AAAqB,QAAA,QAAQ,EAAEkB,CAAC,IAAIjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAElB,QAA9B;AAAwC,QAAA,QAAQ,EAAEgB,CAAC,IAAIf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlE;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAEV,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,qDACqB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADrB;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CJ;AAoDH;;GA/EeX,S;UAMQP,O,EACJG,U;;;KAPJI,S","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\nimport bcrypt from 'bcryptjs'\nimport {Link, useHistory} from 'react-router-dom';\nimport { \n    Form,\n    Button,\n    Col\n} from 'react-bootstrap';\nimport \"./Form.css\"\n\n\nexport function LoginForm() {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const {loginUser} = useAuth();\n    const history = useHistory();\n\n     async function handleLoginUser() {\n        try {\n            setError('Logged In');\n            setLoading(true);\n            if(!email || !password){\n                throw 'Fields are required';\n            }\n            const data = await loginUser(email, password);\n            const destination = data.clusterId ? '/active-dashboard' : '/dormant-dashboard';\n            history.push(destination);\n        } catch(err) {\n            setError(err);\n        }\n        console.log(error);\n        setLoading(false);\n    };\n\n\n    return (\n\n        // <div>\n\n        //     <div className=\"form-container\">\n\n        //         <h1 className=\"form-header\">Login</h1>\n\n        //         <Form>\n\n        //             <Form.Group controlId=\"email\">\n        //                 <Form.Label>Email Address</Form.Label>\n        //                 <Form.Control type=\"email\" placeholder=\"Enter Email\" \n        //                 value={email} onChange={e => setEmail(e.target.value)} />\n        //             </Form.Group>\n\n        //             <Form.Group controlId=\"password\">\n        //                 <Form.Label>Password</Form.Label>\n        //                 <Form.Control type=\"password\" placeholder=\"Enter Password\" \n        //                 value={password} onChange={e => setPassword(e.target.value)} />\n        //             </Form.Group>\n                    \n        //             <div className=\"form-button\">\n        //                 <Button variant=\"primary\" type=\"submit\" onClick={handleLoginUser}>\n        //                     Submit\n        //                 </Button>\n        //             </div>\n\n        //         </Form>\n\n        //     </div>\n\n        //     <div className=\"form-register-redirect\">\n        //             <span><p>Need an Account? <Link to='/register'>Register</Link></p></span>\n        //     </div>\n\n        // </div>\n\n        \n\n        \n\n        <div>\n            <input value={email} onChange={e => setEmail(e.target.value)}/>\n            <br/>\n            <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n            <button onClick={handleLoginUser}>Submit</button>\n            <div>\n                Need an Account? <Link to='/register'>Register</Link>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}