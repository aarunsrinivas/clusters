{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aarun\\\\PycharmProjects\\\\clusters\\\\reactapp\\\\src\\\\components\\\\forms\\\\AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport { useAuth } from '../../contexts/AuthContext';\nexport function AccountForm() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [worldId, setWorldId] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    updateAccount\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleUpdateAccount() {\n    try {\n      setError('Updated Account');\n      setLoading(true);\n\n      if (!name || !email || !password || !confirmPassword || !worldId) {\n        throw 'Fields not filled out';\n      } else if (password !== confirmPassword) {\n        throw 'Passwords do not match';\n      }\n\n      const data = await updateAccount(name, email, password, worldId);\n    } catch (err) {\n      setError(err);\n    }\n\n    console.log(error);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      onClick: () => setType('applicant')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), \" Applicant\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      onClick: () => setType('business')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \" Business\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), \"College: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: worldId,\n      onChange: e => setWorldId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), \"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), \"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), \"Confirm Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: loading,\n      onClick: handleRegisterUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Already Have an Account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AccountForm, \"toFYOGDOk4kH93Hc4S9exlNjM7g=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["C:/Users/aarun/PycharmProjects/clusters/reactapp/src/components/forms/AccountForm.js"],"names":["React","useState","useEffect","Link","useHistory","TagsInput","useAuth","AccountForm","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","worldId","setWorldId","error","setError","loading","setLoading","updateAccount","history","handleUpdateAccount","data","err","console","log","setType","e","target","value","handleRegisterUser"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\n\r\n\r\nexport function AccountForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [worldId, setWorldId] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const {updateAccount} = useAuth();\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleUpdateAccount() {\r\n        try {\r\n            setError('Updated Account');\r\n            setLoading(true);\r\n            if(!name || !email || !password || !confirmPassword || !worldId) {\r\n               throw 'Fields not filled out';\r\n            } else if(password !== confirmPassword){\r\n                throw 'Passwords do not match';\r\n            }\r\n            const data = await updateAccount(name, email, password, worldId);\r\n        } catch(err) {\r\n            setError(err);\r\n        }\r\n        console.log(error);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Type:\r\n            <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\r\n            <input type='radio' name='type' onClick={() => setType('business')}/> Business\r\n            <br/>\r\n            College: <input value={worldId} onChange={e => setWorldId(e.target.value)}/>\r\n            <br/>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\r\n            <div>\r\n                Already Have an Account? <Link to='/login'>Log In</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}