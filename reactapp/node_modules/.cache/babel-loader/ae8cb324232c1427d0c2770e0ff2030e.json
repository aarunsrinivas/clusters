{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\aarun\\\\PycharmProjects\\\\clusters\\\\reactapp\\\\src\\\\components\\\\forms\\\\RegisterApplicantForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport bcrypt from 'bcryptjs';\nimport TagsInput from 'react-tagsinput';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { socket } from '../../App';\nexport function RegisterApplicantForm() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [major, setMajor] = useState([]);\n  const [standing, setStanding] = useState([]);\n  const [gpa, setGpa] = useState(0);\n  const [skills, setSkills] = useState([]);\n  const [error, setError] = useState('');\n  const {\n    signUp\n  } = useAuth();\n\n  const handleClick = async () => {\n    const temp = await fetch(`/applicants?email=${email}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n\n    if (temp.length > 0) {\n      console.log('This email is taken');\n      return;\n    } else {\n      signUp(email, password);\n      fetch('/applicants', {\n        method: 'POST',\n        body: JSON.stringify({\n          name,\n          email,\n          password: bcrypt.hashSync(password, 10),\n          features: {\n            major,\n            standing,\n            gpa: parseFloat(gpa),\n            skills\n          }\n        })\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(({\n        id,\n        name,\n        email,\n        password,\n        features,\n        links\n      }) => {\n        console.log(id);\n        socket.emit('user', id);\n      });\n    }\n\n    setName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setMajor([]);\n    setStanding([]);\n    setGpa(0);\n    setSkills([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), \"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), \"Confirm Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), \"Major: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: major,\n      onChange: tags => setMajor(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), \"Standing: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: standing,\n      onChange: tags => setStanding(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), \"GPA: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: gpa,\n      onChange: e => setGpa(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), \"Skills: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n      value: skills,\n      onChange: tags => setSkills(tags)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterApplicantForm, \"Hf74U/WbQMwLM7F3yED9ygEubpE=\", false, function () {\n  return [useAuth];\n});\n\n_c = RegisterApplicantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterApplicantForm\");","map":{"version":3,"sources":["C:/Users/aarun/PycharmProjects/clusters/reactapp/src/components/forms/RegisterApplicantForm.js"],"names":["React","useState","useEffect","bcrypt","TagsInput","useAuth","socket","RegisterApplicantForm","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","major","setMajor","standing","setStanding","gpa","setGpa","skills","setSkills","error","setError","signUp","handleClick","temp","fetch","then","response","ok","json","length","console","log","method","body","JSON","stringify","hashSync","features","parseFloat","id","links","emit","e","target","value","tags"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport bcrypt from 'bcryptjs';\r\nimport TagsInput from 'react-tagsinput';\r\nimport {useAuth} from '../../contexts/AuthContext';\r\nimport {socket} from '../../App';\r\n\r\nexport function RegisterApplicantForm() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [major, setMajor] = useState([]);\r\n    const [standing, setStanding] = useState([]);\r\n    const [gpa, setGpa] = useState(0);\r\n    const [skills, setSkills] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const {signUp} = useAuth();\r\n\r\n    const handleClick = async () => {\r\n        const temp = await fetch(`/applicants?email=${email}`).then(response => {\r\n            if(response.ok){\r\n                return response.json();\r\n            }\r\n        });\r\n\r\n        if(temp.length > 0){\r\n            console.log('This email is taken');\r\n            return;\r\n        } else {\r\n            signUp(email, password);\r\n            fetch('/applicants', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    password: bcrypt.hashSync(password, 10),\r\n                    features: {\r\n                        major,\r\n                        standing,\r\n                        gpa: parseFloat(gpa),\r\n                        skills\r\n                    }\r\n                })\r\n            }).then(response => {\r\n                if(response.ok){\r\n                    return response.json();\r\n                }\r\n            }).then(({id, name, email, password, features, links}) => {\r\n                console.log(id);\r\n                socket.emit('user', id);\r\n            });\r\n        }\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setMajor([]);\r\n        setStanding([]);\r\n        setGpa(0);\r\n        setSkills([]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Name: <input value={name} onChange={e => setName(e.target.value)}/>\r\n            <br/>\r\n            Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\r\n            <br/>\r\n            Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\r\n            <br/>\r\n            Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\r\n            <br/>\r\n            Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\r\n            <br/>\r\n            Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\r\n            <br/>\r\n            GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\r\n            <br/>\r\n            Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\r\n            <button onClick={() => handleClick()}>Submit</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}