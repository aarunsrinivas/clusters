{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport bcrypt from 'bcryptjs';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Button, Col } from 'react-bootstrap';\nexport function LoginForm() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    loginUser\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleLoginUser() {\n    try {\n      setError('Logged In');\n      setLoading(true);\n\n      if (!email || !password) {\n        throw 'Fields are required';\n      }\n\n      const data = await loginUser(email, password);\n      const destination = data.clusterId ? '/active-dashboard' : '/dormant-dashboard';\n      history.push(destination);\n    } catch (err) {\n      setError(err);\n    }\n\n    console.log(error);\n    setLoading(false);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"lg\",\n          type: \"email\",\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"pasword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"lg\",\n          type: \"password\",\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this) // <div>\n  //     <input value={email} onChange={e => setEmail(e.target.value)}/>\n  //     <br/>\n  //     <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n  //     <button onClick={handleLoginUser}>Submit</button>\n  //     <div>\n  //         Need an Account? <Link to='/register'>Register</Link>\n  //     </div>\n  // </div>\n  ;\n}\n\n_s(LoginForm, \"bfLrHFsia+BQ48IRyn9xppRNAh4=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/LoginForm.js"],"names":["React","useState","useEffect","useAuth","bcrypt","Link","useHistory","Form","Button","Col","LoginForm","email","setEmail","password","setPassword","error","setError","loading","setLoading","loginUser","history","handleLoginUser","data","destination","clusterId","push","err","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,GAHJ,QAIO,iBAJP;AAOA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAACkB,IAAAA;AAAD,MAAchB,OAAO,EAA3B;AACA,QAAMiB,OAAO,GAAGd,UAAU,EAA1B;;AAEC,iBAAee,eAAf,GAAiC;AAC9B,QAAI;AACAL,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAG,CAACP,KAAD,IAAU,CAACE,QAAd,EAAuB;AACnB,cAAM,qBAAN;AACH;;AACD,YAAMS,IAAI,GAAG,MAAMH,SAAS,CAACR,KAAD,EAAQE,QAAR,CAA5B;AACA,YAAMU,WAAW,GAAGD,IAAI,CAACE,SAAL,GAAiB,mBAAjB,GAAuC,oBAA3D;AACAJ,MAAAA,OAAO,CAACK,IAAR,CAAaF,WAAb;AACH,KATD,CASE,OAAMG,GAAN,EAAW;AACTV,MAAAA,QAAQ,CAACU,GAAD,CAAR;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAAA;AAGD,sBAEI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,2BAEI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,OAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,IAAnB;AAAwB,UAAA,IAAI,EAAC,OAA7B;AAAqC,UAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,IAAnB;AAAwB,UAAA,IAAI,EAAC,UAA7B;AAAwC,UAAA,WAAW,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ,CAuBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BJ;AAiCH;;GA5DeR,S;UAMQP,O,EACJG,U;;;KAPJI,S","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useAuth} from '../../contexts/AuthContext';\nimport bcrypt from 'bcryptjs'\nimport {Link, useHistory} from 'react-router-dom';\nimport { \n    Form,\n    Button,\n    Col\n} from 'react-bootstrap';\n\n\nexport function LoginForm() {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const {loginUser} = useAuth();\n    const history = useHistory();\n\n     async function handleLoginUser() {\n        try {\n            setError('Logged In');\n            setLoading(true);\n            if(!email || !password){\n                throw 'Fields are required';\n            }\n            const data = await loginUser(email, password);\n            const destination = data.clusterId ? '/active-dashboard' : '/dormant-dashboard';\n            history.push(destination);\n        } catch(err) {\n            setError(err);\n        }\n        console.log(error);\n        setLoading(false);\n    };\n\n\n    return (\n\n        <Form className=\"form-container\">\n\n            <Col xs=\"auto\">\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control size=\"lg\" type=\"email\" placeholder=\"Enter Email\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"pasword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control size=\"lg\" type=\"password\" placeholder=\"Enter Password\" />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n\n            </Col>\n\n        </Form>\n\n        // <div>\n        //     <input value={email} onChange={e => setEmail(e.target.value)}/>\n        //     <br/>\n        //     <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n        //     <button onClick={handleLoginUser}>Submit</button>\n        //     <div>\n        //         Need an Account? <Link to='/register'>Register</Link>\n        //     </div>\n        // </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}