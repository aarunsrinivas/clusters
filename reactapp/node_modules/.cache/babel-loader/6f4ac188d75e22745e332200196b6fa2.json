{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/RegistrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Form, Button } from 'react-bootstrap';\nimport \"./Form.css\";\nexport function RegistrationForm() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [type, setType] = useState('');\n  const [major, setMajor] = useState([]);\n  const [standing, setStanding] = useState([]);\n  const [gpa, setGpa] = useState(0);\n  const [skills, setSkills] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    registerUser\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleRegisterUser() {\n    try {\n      setError('Registered');\n      setLoading(true);\n\n      if (!name || !email || !password || !confirmPassword || !type || !major.length || !standing.length || !gpa || !skills.length) {\n        throw 'Fields not filled out';\n      } else if (password !== confirmPassword) {\n        throw 'Passwords do not match';\n      }\n\n      await registerUser(name, email, password, type, major, standing, gpa, skills);\n      history.push('/dormant-dashboard');\n    } catch (err) {\n      setError(err);\n    }\n\n    console.log(error);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"register-header\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"registerName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Enter name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"registerEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"registerPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"registerConfirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"registerGPA\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"GPA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter GPA out of 4.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \"Major: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n        value: major,\n        onChange: tags => setMajor(tags)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), \"Standing: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n        value: standing,\n        onChange: tags => setStanding(tags)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), \"Skills: \", /*#__PURE__*/_jsxDEV(TagsInput, {\n        value: skills,\n        onChange: tags => setSkills(tags)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: loading,\n        onClick: handleRegisterUser,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this) // <div>\n  //     Type:\n  //     <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\n  //     <input type='radio' name='type' onClick={() => setType('business')}/> Business\n  //     <br/>\n  //     Name: <input value={name} onChange={e => setName(e.target.value)}/>\n  //     <br/>\n  //     Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\n  //     <br/>\n  //     Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n  //     <br/>\n  //     Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\n  //     <br/>\n  //     Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\n  //     <br/>\n  //     Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\n  //     <br/>\n  //     GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\n  //     <br/>\n  //     Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\n  //     <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\n  //     <div>\n  //         Already Have an Account? <Link to='/login'>Log In</Link>\n  //     </div>\n  // </div>\n  ;\n}\n\n_s(RegistrationForm, \"t3h8RM0s0yPS1y9Q9/LB16OocZk=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/Users/sj/Documents/Programming/clusters/reactapp/src/components/forms/RegistrationForm.js"],"names":["React","useState","useEffect","Link","useHistory","TagsInput","useAuth","Form","Button","RegistrationForm","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","type","setType","major","setMajor","standing","setStanding","gpa","setGpa","skills","setSkills","error","setError","loading","setLoading","registerUser","history","handleRegisterUser","length","push","err","console","log","tags"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport TagsInput from 'react-tagsinput';\nimport {useAuth} from '../../contexts/AuthContext';\nimport {\n    Form,\n    Button\n} from 'react-bootstrap';\nimport \"./Form.css\";\n\n\nexport function RegistrationForm() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [type, setType] = useState('')\n    const [major, setMajor] = useState([]);\n    const [standing, setStanding] = useState([]);\n    const [gpa, setGpa] = useState(0);\n    const [skills, setSkills] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const {registerUser} = useAuth();\n    const history = useHistory();\n\n\n    async function handleRegisterUser() {\n        try {\n            setError('Registered');\n            setLoading(true);\n            if(!name || !email || !password || !confirmPassword || !type || !major.length\n               || !standing.length || !gpa || !skills.length) {\n               throw 'Fields not filled out';\n            } else if(password !== confirmPassword){\n                throw 'Passwords do not match';\n            }\n            await registerUser(name, email, password, type, major, standing, gpa, skills);\n            history.push('/dormant-dashboard');\n        } catch(err) {\n            setError(err);\n        }\n        console.log(error);\n        setLoading(false);\n    }\n\n    return (\n\n        <div className=\"form-container\">\n\n            <h1 className=\"register-header\">Register</h1>\n\n            <Form>\n\n                <Form.Group controlId=\"registerName\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control placeholder=\"Enter name\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"registerEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"registerPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter password\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"registerConfirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm password\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"registerGPA\">\n                    <Form.Label>GPA</Form.Label>\n                    <Form.Control type=\"number\" placeholder=\"Enter GPA out of 4.0\" />\n                </Form.Group>\n\n                Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\n                <br/>\n                 Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\n                <br/>\n                Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\n                <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\n\n            </Form>\n\n        </div>\n        \n\n        // <div>\n        //     Type:\n        //     <input type='radio' name='type' onClick={() => setType('applicant')}/> Applicant\n        //     <input type='radio' name='type' onClick={() => setType('business')}/> Business\n        //     <br/>\n        //     Name: <input value={name} onChange={e => setName(e.target.value)}/>\n        //     <br/>\n        //     Email: <input value={email} onChange={e => setEmail(e.target.value)}/>\n        //     <br/>\n        //     Password: <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n        //     <br/>\n        //     Confirm Password: <input type='password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\n        //     <br/>\n        //     Major: <TagsInput value={major} onChange={tags => setMajor(tags)}/>\n        //     <br/>\n        //     Standing: <TagsInput value={standing} onChange={tags => setStanding(tags)}/>\n        //     <br/>\n        //     GPA: <input value={gpa} onChange={e => setGpa(e.target.value)}/>\n        //     <br/>\n        //     Skills: <TagsInput value={skills} onChange={tags => setSkills(tags)}/>\n        //     <button disabled={loading} onClick={handleRegisterUser}>Submit</button>\n        //     <div>\n        //         Already Have an Account? <Link to='/login'>Log In</Link>\n        //     </div>\n        // </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}